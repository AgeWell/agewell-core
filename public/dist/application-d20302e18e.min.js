!function(window){"use strict";function registerModule(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)}var applicationModuleName="agewell",service={applicationEnvironment:window.env,applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:["ngAnimate","ngFileUpload","ngMessages","ngResource","ui.bootstrap","ui.select","ui.utils.masks","ui.router","ui-notification"],registerModule:registerModule};window.ApplicationConfiguration=service,angular.module("ui-notification").config(["NotificationProvider",function(NotificationProvider){NotificationProvider.setOptions({delay:2e3,startTop:20,startRight:10,verticalSpacing:20,horizontalSpacing:20,positionX:"right",positionY:"bottom"})}])}(window);
!function(app){"use strict";function bootstrapConfig($compileProvider,$locationProvider,$httpProvider,$logProvider){$locationProvider.html5Mode({enabled:!0,requireBase:!1}).hashPrefix("!"),$httpProvider.interceptors.push("authInterceptor"),$compileProvider.debugInfoEnabled("production"!==app.applicationEnvironment),$logProvider.debugEnabled("production"!==app.applicationEnvironment)}function init(){if(window.location.hash&&"#_=_"===window.location.hash)if(window.history&&history.pushState)window.history.pushState("",document.title,window.location.pathname);else{var scroll={top:document.body.scrollTop,left:document.body.scrollLeft};window.location.hash="",document.body.scrollTop=scroll.top,document.body.scrollLeft=scroll.left}angular.bootstrap(document,[app.applicationModuleName])}angular.module(app.applicationModuleName,app.applicationModuleVendorDependencies),angular.module(app.applicationModuleName).config(bootstrapConfig),bootstrapConfig.$inject=["$compileProvider","$locationProvider","$httpProvider","$logProvider"],angular.element(document).ready(init)}(ApplicationConfiguration);
!function(app){"use strict";app.registerModule("core"),app.registerModule("core.routes",["ui.router"]),app.registerModule("core.admin",["core"]),app.registerModule("core.admin.routes",["ui.router"])}(ApplicationConfiguration);
!function(){"use strict";function autofocus($timeout,$window){function link(scope,element,attrs){$window.innerWidth>=800&&$timeout(function(){var el=element[0];el.focus(),el.selectionStart=el.value.length,el.selectionEnd=el.value.length},100)}return{restrict:"A",link:link}}angular.module("core").directive("autofocus",autofocus),autofocus.$inject=["$timeout","$window"]}();
!function(){"use strict";function routeFilter($rootScope,$state,Authentication){function stateChangeStart(event,toState,toParams,fromState,fromParams){if(toState.data&&toState.data.roles&&toState.data.roles.length>0){for(var allowed=!1,i=0,roles=toState.data.roles;i<roles.length;i++)if("guest"===roles[i]||Authentication.user&&void 0!==Authentication.user.roles&&-1!==Authentication.user.roles.indexOf(roles[i])){allowed=!0;break}allowed||(event.preventDefault(),null!==Authentication.user&&"object"==typeof Authentication.user?$state.transitionTo("forbidden"):$state.go("authentication.signin").then(function(){storePreviousState(toState,toParams)}))}}function stateChangeSuccess(event,toState,toParams,fromState,fromParams){storePreviousState(fromState,fromParams)}function storePreviousState(state,params){state.data&&state.data.ignoreState||($state.previous={state:state,params:params,href:$state.href(state,params)})}$rootScope.$on("$stateChangeStart",stateChangeStart),$rootScope.$on("$stateChangeSuccess",stateChangeSuccess)}angular.module("core").run(routeFilter),routeFilter.$inject=["$rootScope","$state","Authentication"]}();
!function(){"use strict";function routeConfig($stateProvider,$urlRouterProvider){$urlRouterProvider.rule(function($injector,$location){var path=$location.path();if(path.length>1&&"/"===path[path.length-1]){var newPath=path.substr(0,path.length-1);$location.replace().path(newPath)}}),$urlRouterProvider.otherwise(function($injector,$location){$injector.get("$state").transitionTo("not-found",null,{location:!1})}),$stateProvider.state("home",{url:"/",templateUrl:"/modules/core/client/pages/home.html",controller:"HomeController",controllerAs:"vm"}).state("dashboard",{url:"/dashboard",templateUrl:"/modules/core/client/pages/dashboard.html",controller:"DashboardController",controllerAs:"vm"}).state("not-found",{url:"/not-found",templateUrl:"/modules/core/client/errors/404.html",controller:"ErrorController",controllerAs:"vm",params:{message:["$stateParams",function($stateParams){return $stateParams.message}]},data:{ignoreState:!0,pageTitle:"Not Found"}}).state("bad-request",{url:"/bad-request",templateUrl:"/modules/core/client/errors/400.html",controller:"ErrorController",controllerAs:"vm",params:{message:["$stateParams",function($stateParams){return $stateParams.message}]},data:{ignoreState:!0,pageTitle:"Bad Request"}}).state("forbidden",{url:"/forbidden",templateUrl:"/modules/core/client/errors/403.html",data:{ignoreState:!0,pageTitle:"Forbidden"}})}angular.module("core.routes").config(routeConfig),routeConfig.$inject=["$stateProvider","$urlRouterProvider"]}();
!function(){"use strict";function coreService($window){function getOptions(model){return options.hasOwnProperty(model)?options[model]:console.error("Model has no options.")}function getServices(){return options.hasOwnProperty("Services")?options.Services:console.error("No Services Avalible.")}var options,service={getOptions:getOptions,getServices:getServices};return function(){options=$window.options}(),service}angular.module("core").factory("coreService",coreService),coreService.$inject=["$window"]}();
!function(){"use strict";function menuConfig(menuService){menuService.addMenuItem("topbar",{title:"Admin",state:"admin",type:"dropdown",roles:["admin"]})}angular.module("core.admin").run(menuConfig),menuConfig.$inject=["menuService"]}();
!function(){"use strict";function routeConfig($stateProvider){$stateProvider.state("admin",{abstract:!0,url:"/admin",template:"<ui-view/>",data:{roles:["admin"]}})}angular.module("core.admin.routes").config(routeConfig),routeConfig.$inject=["$stateProvider"]}();
!function(){"use strict";function ErrorController($stateParams){var vm=this;vm.errorMessage=null,$stateParams.message&&(vm.errorMessage=$stateParams.message)}angular.module("core").controller("ErrorController",ErrorController),ErrorController.$inject=["$stateParams"]}();
!function(){"use strict";function showErrors($timeout,$interpolate){function compile(elem,attrs){function linkFn(scope,el,attrs,formCtrl){function checkValidity(event,name){if(angular.isUndefined(name)||formCtrl.$name===name)return initCheck=!0,showValidationMessages=!0,toggleClasses(formCtrl[inputName].$invalid)}function reset(event,name){if(angular.isUndefined(name)||formCtrl.$name===name)return $timeout(function(){el.removeClass("has-error"),el.removeClass("has-success"),showValidationMessages=!1},0,!1)}function toggleClasses(invalid){if(el.toggleClass("has-error",showValidationMessages&&invalid),showSuccess)return el.toggleClass("has-success",showValidationMessages&&!invalid)}var inputEl,inputName,inputNgEl,options,showSuccess,initCheck=!1,showValidationMessages=!1;if(options=scope.$eval(attrs.showErrors)||{},showSuccess=options.showSuccess||!1,inputEl=el[0].querySelector(".form-control[name]")||el[0].querySelector("[name]"),inputNgEl=angular.element(inputEl),!(inputName=$interpolate(inputNgEl.attr("name")||"")(scope)))throw new Error("show-errors element has no child input elements with a 'name' attribute class");scope.$watch(function(){return formCtrl[inputName]&&formCtrl[inputName].$invalid},toggleClasses),scope.$on("show-errors-check-validity",checkValidity),scope.$on("show-errors-reset",reset)}if(-1===attrs.showErrors.indexOf("skipFormGroupCheck")&&!elem.hasClass("form-group")&&!elem.hasClass("input-group"))throw new Error("show-errors element does not have the 'form-group' or 'input-group' class");return linkFn}return{restrict:"A",require:"^form",compile:compile}}angular.module("core").directive("showErrors",showErrors),showErrors.$inject=["$timeout","$interpolate"]}();
!function(){"use strict";function authInterceptor($q,$injector,Authentication){function responseError(rejection){if(!rejection.config.ignoreAuthModule)switch(rejection.status){case 400:$injector.get("$state").go("bad-request",{message:rejection.data.message});break;case 401:Authentication.user=null,$injector.get("$state").transitionTo("authentication.signin");break;case 403:$injector.get("$state").transitionTo("forbidden");break;case 404:$injector.get("$state").go("not-found",{message:rejection.data.message});break;case-1:$injector.get("Notification").error({message:"No response received from server. Please try again later.",title:"Error processing request!",delay:5e3})}return $q.reject(rejection)}return{responseError:responseError}}angular.module("core").factory("authInterceptor",authInterceptor),authInterceptor.$inject=["$q","$injector","Authentication"]}();
!function(){"use strict";function menuConfig(menuService,Authentication){var profileEdit="settings.profile";null!==Authentication.user&&-1!==Authentication.user.roles.indexOf("volunteer")&&(profileEdit=Authentication.user.hasOwnProperty("volunteerId")?"settings.volunteer.edit({volunteerId: '"+Authentication.user.volunteerId+"'})":"settings.volunteer.create"),menuService.addMenu("account",{roles:["user"]}),menuService.addMenuItem("account",{title:"",state:"settings",type:"dropdown",roles:["user"]}),menuService.addSubMenuItem("account","settings",{title:"Edit Profile",state:profileEdit,roles:["user"]}),menuService.addSubMenuItem("account","settings",{title:"Edit Profile Picture",state:"settings.picture",roles:["user"]})}angular.module("core").run(menuConfig),menuConfig.$inject=["menuService","Authentication"]}();
!function(){"use strict";function menuService(){function addMenu(menuId,options){return options=options||{},service.menus[menuId]={roles:options.roles||service.defaultRoles,items:options.items||[],shouldRender:shouldRender},service.menus[menuId]}function addMenuItem(menuId,options){if(options=options||{},service.validateMenuExistence(menuId),service.menus[menuId].items.push({title:options.title||"",state:options.state||"",type:options.type||"item",class:options.class,roles:null===options.roles||void 0===options.roles?service.defaultRoles:options.roles,position:options.position||0,items:[],shouldRender:shouldRender}),options.items)for(var i in options.items)options.items.hasOwnProperty(i)&&service.addSubMenuItem(menuId,options.state,options.items[i]);return service.menus[menuId]}function addSubMenuItem(menuId,parentItemState,options){options=options||{},service.validateMenuExistence(menuId);for(var itemIndex in service.menus[menuId].items)service.menus[menuId].items[itemIndex].state===parentItemState&&service.menus[menuId].items[itemIndex].items.push({title:options.title||"",state:options.state||"",params:options.params||{},roles:null===options.roles||void 0===options.roles?service.menus[menuId].items[itemIndex].roles:options.roles,position:options.position||0,shouldRender:shouldRender});return service.menus[menuId]}function getMenu(menuId){return service.validateMenuExistence(menuId),service.menus[menuId]}function removeMenu(menuId){service.validateMenuExistence(menuId),delete service.menus[menuId]}function removeMenuItem(menuId,menuItemState){service.validateMenuExistence(menuId);for(var itemIndex in service.menus[menuId].items)service.menus[menuId].items.hasOwnProperty(itemIndex)&&service.menus[menuId].items[itemIndex].state===menuItemState&&service.menus[menuId].items.splice(itemIndex,1);return service.menus[menuId]}function removeSubMenuItem(menuId,submenuItemState){service.validateMenuExistence(menuId);for(var itemIndex in service.menus[menuId].items)if(this.menus[menuId].items.hasOwnProperty(itemIndex))for(var subitemIndex in service.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items.hasOwnProperty(subitemIndex)&&service.menus[menuId].items[itemIndex].items[subitemIndex].state===submenuItemState&&service.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return service.menus[menuId]}function validateMenuExistence(menuId){if(menuId&&menuId.length){if(service.menus[menuId])return!0;throw new Error("Menu does not exist")}throw new Error("MenuId was not provided")}var shouldRender,service={addMenu:addMenu,addMenuItem:addMenuItem,addSubMenuItem:addSubMenuItem,defaultRoles:["user","admin"],getMenu:getMenu,menus:{},removeMenu:removeMenu,removeMenuItem:removeMenuItem,removeSubMenuItem:removeSubMenuItem,validateMenuExistence:validateMenuExistence};return function(){shouldRender=function(user){if(-1!==this.roles.indexOf("*"))return!0;if(!user)return!1;if(-1!==this.roles.indexOf("volunteer")&&!user.active)return!1;for(var userRoleIndex in user.roles)if(user.roles.hasOwnProperty(userRoleIndex))for(var roleIndex in this.roles)if(this.roles.hasOwnProperty(roleIndex)&&this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1},addMenu("topbar",{roles:["*"]})}(),service}angular.module("core").factory("menuService",menuService)}();
!function(){"use strict";function DashboardController($scope,$state,$window,$filter,$uibModal,Authentication,Notification,coreService,ClientsService,ActionsService,OrdersService){function skip(index,client){var modalInstance=$uibModal.open({animation:!0,template:'<div class="modal-header"><h3 class="modal-title">Skip order</h3></div><div class="modal-body">Does this client want to skip ordering this week?</div><div class="modal-footer"><button class="btn btn-warning" type="button" ng-click="vm.modalOk()">OK</button><button class="btn btn-default" type="button" ng-click="vm.modalCancel()">Cancel</button></div>',scope:$scope});vm.modalOk=function(){modalInstance.close("OK Clicked")},vm.modalCancel=function(){modalInstance.dismiss("Cancel Clicked")},modalInstance.result.then(function(){function successCallback(res){Notification.info({message:"Update successful!"}),vm.callList.splice((vm.callListPage-1)*vm.callListPerPage+index,1),vm.callList.length<=vm.callListPerPage&&(vm.callListPage=1),pageChanged("callList",6)}function errorCallback(res){vm.error=res.data.message}client.lastSkip=vm.dates.orderBy,client.$update(successCallback,errorCallback)},function(){console.info("modal-component dismissed at: "+new Date)})}function assign(order){vm.current=order,"object"==typeof vm.current.assignedTo&&(vm.assignedTo=vm.current.assignedTo._id,console.log(vm));var modalInstance=$uibModal.open({animation:!0,templateUrl:"/modules/groceries/client/views/modals/assign.html",scope:$scope});console.log(vm),vm.modalOk=function(){function successCallback(res){Notification.info({message:"Update successful!"}),console.log(vm.current),vm.current.assignedTo=$filter("filter")(vm.volunteers,{_id:vm.assignedTo})[0],pageChanged("orders",5),console.log(vm)}function errorCallback(res){vm.current.status="pending",vm.error=res.data.message}modalInstance.close("OK Clicked"),vm.current.assignedTo=vm.assignedTo,vm.current.status="ordered",vm.current.createOrUpdate().then(successCallback).catch(errorCallback)},vm.modalCancel=function(){modalInstance.dismiss("Cancel Clicked")},modalInstance.result.then(function(){console.log("Open Checkout Interface")},function(){console.info("modal-component dismissed at: "+new Date)})}function buildPager(type,per){vm["paged"+type]=[],vm[type+"Page"]=1,vm[type+"PerPage"]=per,"orders"!==type&&(vm[type+"Filter"]=""),vm.figureOutItemsToDisplay(type)}function figureOutItemsToDisplay(type){vm["filtered"+type]=$filter("filter")(vm[type],{$:vm[type+"Filter"]}),vm["filter"+type+"Length"]=vm["filtered"+type].length,console.log(vm["filter"+type+"Length"]<vm[type+"PerPage"]*vm[type+"Page"]),console.log(vm["filter"+type+"Length"],vm[type+"PerPage"],vm[type+"Page"]),""!==vm[type+"Filter"]&&vm["filter"+type+"Length"]<vm[type+"PerPage"]*(vm[type+"Page"]-1)&&(console.log("hit"),vm[type+"Page"]=1);var begin=(vm[type+"Page"]-1)*vm[type+"PerPage"],end=begin+vm[type+"PerPage"];vm["paged"+type]=vm["filtered"+type].slice(begin,end),console.log(vm["paged"+type])}function pageChanged(type){vm.figureOutItemsToDisplay(type)}function setFilter(value){vm.ordersFilter=value,vm.figureOutItemsToDisplay("orders")}function complete(action){function successCallback(res){Notification.info({message:"Update successful!"}),pageChanged("actions",3)}function errorCallback(res){vm.error=res.data.message,action.completed=!action.completed}action.completed=!action.completed,action.$update(successCallback,errorCallback)}function approve(order){function successCallback(res){Notification.info({message:"Update successful!"}),pageChanged("callList",6)}function errorCallback(res){vm.error=res.data.message}order.status="ordered",order.$update(successCallback,errorCallback)}var vm=this;vm.dashboard=!0,vm.options=coreService.getOptions("Order"),vm.volunteers=coreService.getOptions("volunteers"),vm.approve=approve,vm.skip=skip,vm.setFilter=setFilter,vm.complete=complete,vm.callList=[],vm.orders=[],vm.assign=assign,vm.actions=[],vm.ordersFilter="pending",vm.isAdmin=Authentication.user.isAdmin,vm.dates={now:new Date,orderBy:new Date(vm.options.order[0]),nextOrderBy:new Date(vm.options.order[1]),delivery:new Date(vm.options.delivery[0]),nextDelivery:new Date(vm.options.delivery[1])},ClientsService.query({active:!0,groceryCallList:!0,lastSkip:vm.dates.orderBy,lastOrdered:vm.dates.orderBy},function(data){vm.callList=data,buildPager("callList",6)}),OrdersService.query({},function(data){vm.orders=data,buildPager("orders",5)}),console.log(vm.volunteers),vm.buildPager=buildPager,vm.figureOutItemsToDisplay=figureOutItemsToDisplay,vm.pageChanged=pageChanged,vm.itemsPerPage=6,ActionsService.query({completed:!1},function(data){vm.actions=data,buildPager("actions",3)})}angular.module("core").controller("DashboardController",DashboardController),DashboardController.$inject=["$scope","$state","$window","$filter","$uibModal","Authentication","Notification","coreService","ClientsService","ActionsService","OrdersService"]}();
!function(){"use strict";function HomeController($state,$uibModal,Authentication){var vm=this;return vm.authentication=Authentication,vm.authentication.user&&-1!==vm.authentication.user.roles.indexOf("volunteer")&&vm.authentication.user.active?$state.go("groceries.list"):vm.authentication.user&&vm.authentication.user.active?$state.go("dashboard"):void(vm.open=function(parentSelector){$uibModal.open({animation:!0,ariaLabelledBy:"modal-title",ariaDescribedBy:"modal-body",template:'<div class="modal-header"><h3 class="modal-title" id="modal-title-{{name}}">The {{name}} modal!</h3></div><div class="modal-body" id="modal-body-{{name}}">Having multiple modals open at once is probably bad UX but it\'s technically possible.</div>',size:"sm"})})}angular.module("core").controller("HomeController",HomeController),HomeController.$inject=["$state","$uibModal","Authentication"]}();
!function(){"use strict";function HeaderController($scope,$state,$window,Authentication,menuService){function stateChangeSuccess(){vm.isCollapsed=!1}var vm=this;vm.accountMenu=menuService.getMenu("account").items[0],vm.authentication=Authentication,vm.isCollapsed=!1,vm.menu=menuService.getMenu("topbar"),$scope.$on("$stateChangeSuccess",stateChangeSuccess)}angular.module("core").controller("HeaderController",HeaderController),HeaderController.$inject=["$scope","$state","$window","Authentication","menuService"]}();
!function(){"use strict";function pageTitle($rootScope,$interpolate,$state){function link(scope,element){function listener(event,toState){if(toState.data&&toState.data.pageTitle){var stateTitle=$interpolate(toState.data.pageTitle)($state.$current.locals.globals);element.html("MEAN.js - "+stateTitle)}else element.html("MEAN.js")}$rootScope.$on("$stateChangeSuccess",listener)}return{restrict:"A",link:link}}angular.module("core").directive("pageTitle",pageTitle),pageTitle.$inject=["$rootScope","$interpolate","$state"]}();
!function(app){"use strict";app.registerModule("actions")}(ApplicationConfiguration);
!function(app){"use strict";app.registerModule("contacts"),app.registerModule("contacts.address",["contacts","ui.select","ngSanitize"])}(ApplicationConfiguration);
!function(app){"use strict";app.registerModule("clients")}(ApplicationConfiguration);
!function(app){"use strict";app.registerModule("groceries",["xeditable"]),app.registerModule("groceries.orders")}(ApplicationConfiguration);
!function(app){"use strict";app.registerModule("services"),app.registerModule("services.admin",["ui.router","core.routes"])}(ApplicationConfiguration);
!function(app){"use strict";app.registerModule("users"),app.registerModule("users.admin"),app.registerModule("users.admin.routes",["ui.router","core.routes","users.admin.services"]),app.registerModule("users.admin.services"),app.registerModule("users.routes",["ui.router","core.routes"]),app.registerModule("users.services")}(ApplicationConfiguration);
!function(app){"use strict";app.registerModule("volunteers")}(ApplicationConfiguration);
!function(){"use strict";function menuConfig(menuService){}angular.module("actions").run(menuConfig),menuConfig.$inject=["menuService"]}();
!function(){"use strict";function ActionsController($scope,$state,$window,Authentication,coreService,actionsToGo){function remove(){$window.confirm("Are you sure you want to delete?")&&vm.actionsToGo.$remove($state.go("actions.list"))}function save(isValid){function successCallback(res){$state.go("actions.view",{actionsToGoId:res._id})}function errorCallback(res){vm.error=res.data.message}if(!isValid)return $scope.$broadcast("show-errors-check-validity","vm.actionsToGoForm"),!1;vm.actionsToGo.createOrUpdate().then(successCallback).catch(errorCallback)}var vm=this;vm.authentication=Authentication,vm.actionsToGo=actionsToGo,vm.options=coreService.getOptions("Client"),vm.error=null,vm.remove=remove,vm.save=save}angular.module("actions").controller("ActionsController",ActionsController),ActionsController.$inject=["$scope","$state","$window","Authentication","coreService","actionsToGoResolve"]}();
!function(){"use strict";function routeConfig($stateProvider){$stateProvider.state("actions",{abstract:!0,url:"/actions",template:"<ui-view/>"}).state("actions.create",{url:"/order",templateUrl:"modules/actions/client/views/form-order.html",controller:"ActionsController",controllerAs:"vm",resolve:{actionsResolve:newActionsToGo},data:{roles:["user","admin"],pageTitle:"Actions Create"}}).state("actions.edit",{url:"/:orderId/edit",templateUrl:"modules/actions/client/views/form-order.html",controller:"ActionsController",controllerAs:"vm",resolve:{actionsResolve:getActionsToGo},data:{roles:["user","admin"],pageTitle:"Edit Actions {{ actionsResolve.name }}"}}).state("actions.view",{url:"/:orderId",templateUrl:"modules/actions/client/views/view-order.html",controller:"ActionsController",controllerAs:"vm",resolve:{actionsResolve:getActionsToGo},data:{pageTitle:"Actions {{ actionsResolve.name }}"}})}function getActionsToGo($stateParams,ActionsService){return ActionsService.get({actionsToGoId:$stateParams.actionsToGoId}).$promise}function newActionsToGo(ActionsService){return new ActionsService}angular.module("actions").config(routeConfig),routeConfig.$inject=["$stateProvider"],getActionsToGo.$inject=["$stateParams","ActionsService"],newActionsToGo.$inject=["ActionsService"]}();
!function(){"use strict";function ActionsService($log,$resource){function createOrUpdate(action){function onSuccess(action){}function onError(errorResponse){handleError(errorResponse.data)}return action._id?action.$update(onSuccess,onError):action.$save(onSuccess,onError)}function handleError(error){$log.error(error)}var Action=$resource("/api/actions/:actionId",{actionId:"@_id"},{update:{method:"PUT"}});return angular.extend(Action.prototype,{createOrUpdate:function(){return createOrUpdate(this)}}),Action}angular.module("actions").factory("ActionsService",ActionsService),ActionsService.$inject=["$log","$resource"]}();
!function(){"use strict";function ActionsListController($filter,$stateParams,ActionsService){function buildPager(){vm.pagedItems=[],vm.itemsPerPage=3,vm.currentPage=1,vm.figureOutItemsToDisplay()}function figureOutItemsToDisplay(){vm.filteredItems=vm.actions,vm.filterLength=vm.filteredItems.length;var begin=(vm.currentPage-1)*vm.itemsPerPage,end=begin+vm.itemsPerPage;vm.pagedItems=vm.filteredItems.slice(begin,end)}function pageChanged(){vm.figureOutItemsToDisplay()}var vm=this;vm.buildPager=buildPager,vm.figureOutItemsToDisplay=figureOutItemsToDisplay,vm.pageChanged=pageChanged,ActionsService.query({clientId:$stateParams.clientId},function(data){vm.actions=data,vm.buildPager()})}angular.module("actions").controller("ActionsListController",ActionsListController),ActionsListController.$inject=["$filter","$stateParams","ActionsService"]}();
!function(){"use strict";function listActions(){return{restrict:"E",scope:{clientId:"="},controller:"ActionsListController",controllerAs:"vm",bindToController:!0,replace:!0,transclude:!0,templateUrl:"/modules/actions/client/views/list-actions.html"}}angular.module("actions").directive("listActions",listActions)}();
!function(){"use strict";function contactForm(){return{restrict:"E",scope:{contact:"=",form:"=",error:"="},controller:"ContactsController",controllerAs:"vm",bindToController:!0,templateUrl:"/modules/contacts/client/views/form-contact.html"}}angular.module("contacts").directive("contactForm",contactForm)}();
!function(){"use strict";function contactView(){return{restrict:"E",scope:{contact:"="},controller:"ContactsController",controllerAs:"vm",bindToController:!0,templateUrl:"/modules/contacts/client/views/view-contact.html"}}angular.module("contacts").directive("contactView",contactView)}();
!function(){"use strict";function ContactsController($scope,$state,$window,Authentication,coreService){this.options=coreService.getOptions("Contact"),$scope.dateOptions={formatYear:"yy",maxDate:new Date,startingDay:1},$scope.open1=function(){$scope.popup1.opened=!0},$scope.popup1={opened:!1}}angular.module("contacts").controller("ContactsController",ContactsController),ContactsController.$inject=["$scope","$state","$window","Authentication","coreService"]}();
!function(){"use strict";function menuConfig(menuService){menuService.addMenuItem("topbar",{title:"Clients",state:"clients",type:"dropdown",roles:["admin"]}),menuService.addSubMenuItem("topbar","clients",{title:"List Clients",state:"clients.list",roles:["admin"]}),menuService.addSubMenuItem("topbar","clients",{title:"Create Client",state:"clients.create",roles:["admin"]})}angular.module("clients").run(menuConfig),menuConfig.$inject=["menuService"]}();
!function(){"use strict";function ClientsController($scope,$state,$window,Authentication,Notification,coreService,client){function remove(){$window.confirm("Are you sure you want to delete?")&&vm.client.$remove($state.go("clients.list"))}function save(isValid){function successCallback(res){$state.go("clients.view",{clientId:res._id})}function errorCallback(res){vm.error=res.data.message}if(!isValid)return $scope.$broadcast("show-errors-check-validity","vm.clientForm"),!1;vm.client.createOrUpdate().then(successCallback).catch(errorCallback)}function toggle(field){function successCallback(res){Notification.info({message:"Update successful!"})}function errorCallback(res){vm.error=res.data.message,vm.client[field]=!vm.client[field]}vm.client[field]=!vm.client[field],vm.client.$update(successCallback,errorCallback)}function newOrder(){vm.client.lastOrdered===vm.orders.order[0]?$state.go("order.edit",{clientId:vm.client.id,orderId:vm.client.lastOrder}):(console.log(vm.client.lastOrder),$state.go("order.create",{clientId:vm.client.id,lastOrder:vm.client.lastOrder}))}var vm=this;vm.authentication=Authentication,vm.client=client,vm.options=coreService.getOptions("Client"),vm.orders=coreService.getOptions("Order"),vm.error=null,vm.remove=remove,vm.save=save,vm.toggle=toggle,vm.newOrder=newOrder,vm.client._id||(vm.client.active=!0,vm.client.groceryCallList=!0,vm.client.contact={address:{city:"Duluth",state:"MN"}}),vm.dates={now:new Date,orderBy:new Date(vm.orders.order[0]),nextOrderBy:new Date(vm.orders.order[1]),delivery:new Date(vm.orders.delivery[0]),nextDelivery:new Date(vm.orders.delivery[1])},vm.orderBy=vm.orders.order[0],vm.client.lastOrdered===vm.orderBy?console.log("Already ordered"):console.log(vm.client.lastOrdered,vm.orderBy),vm.client.groceryCallList||(vm.client.groceryCallList=!1)}angular.module("clients").controller("ClientsController",ClientsController),ClientsController.$inject=["$scope","$state","$window","Authentication","Notification","coreService","clientResolve"]}();
!function(){"use strict";function routeConfig($stateProvider){$stateProvider.state("clients",{abstract:!0,url:"/clients",template:"<ui-view/>"}).state("clients.list",{url:"",templateUrl:"/modules/clients/client/views/list-clients.html",controller:"ClientsListController",controllerAs:"vm",data:{roles:["admin"],pageTitle:"Clients List"}}).state("clients.create",{url:"/create",templateUrl:"/modules/clients/client/views/form-client.html",controller:"ClientsController",controllerAs:"vm",resolve:{clientResolve:newClient},data:{roles:["admin"],pageTitle:"Clients Create"}}).state("clients.edit",{url:"/:clientId/edit",templateUrl:"/modules/clients/client/views/form-client.html",controller:"ClientsController",controllerAs:"vm",resolve:{clientResolve:getClient},data:{roles:["admin"],pageTitle:"Edit Client {{ clientResolve.name }}"}}).state("clients.view",{url:"/:clientId",templateUrl:"/modules/clients/client/views/view-client.html",controller:"ClientsController",controllerAs:"vm",resolve:{clientResolve:getClient},data:{roles:["admin"],pageTitle:"Client {{ clientResolve.name }}"}})}function getClient($stateParams,ClientsService){return ClientsService.get({clientId:$stateParams.clientId}).$promise}function newClient(ClientsService){return new ClientsService}angular.module("clients").config(routeConfig),routeConfig.$inject=["$stateProvider"],getClient.$inject=["$stateParams","ClientsService"],newClient.$inject=["ClientsService"]}();
!function(){"use strict";function ClientsService($log,$resource){function createOrUpdate(client){function onSuccess(client){}function onError(errorResponse){handleError(errorResponse.data)}return client._id?client.$update(onSuccess,onError):client.$save(onSuccess,onError)}function handleError(error){$log.error(error)}var Client=$resource("/api/clients/:clientId",{clientId:"@_id"},{get:{method:"GET",transformResponse:function(data,headers){return data=angular.fromJson(data),data.contact.birthday&&(data.contact.birthday=new Date(data.contact.birthday)),data}},update:{method:"PUT"}});return angular.extend(Client.prototype,{createOrUpdate:function(){return createOrUpdate(this)}}),Client}angular.module("clients").factory("ClientsService",ClientsService),ClientsService.$inject=["$log","$resource"]}();
!function(){"use strict";function ClientsListController($filter,$state,Notification,coreService,ClientsService){function toggle(field,client){function successCallback(res){Notification.info({message:"Update successful!"})}function errorCallback(res){vm.error=res.data.message,client[field]=!client[field]}client[field]=!client[field],client.$update(successCallback,errorCallback)}function newOrder(client){client.lastOrdered===vm.options.order[0]?$state.go("order.edit",{clientId:client.id,orderId:client.lastOrder}):$state.go("order.create",{clientId:client.id})}function buildPager(){vm.pagedItems=[],vm.itemsPerPage=10,vm.currentPage=1,vm.search="",vm.figureOutItemsToDisplay()}function figureOutItemsToDisplay(){vm.filteredItems=$filter("filter")(vm.clients,{$:vm.search}),vm.filterLength=vm.filteredItems.length,""!==vm.search&&vm.filterLength<vm.itemsPerPage*(vm.currentPage-1)&&(vm.currentPage=1);var begin=(vm.currentPage-1)*vm.itemsPerPage,end=begin+vm.itemsPerPage;vm.pagedItems=vm.filteredItems.slice(begin,end)}function pageChanged(){vm.figureOutItemsToDisplay()}var vm=this;vm.options=coreService.getOptions("Order"),vm.toggle=toggle,vm.newOrder=newOrder,vm.buildPager=buildPager,vm.figureOutItemsToDisplay=figureOutItemsToDisplay,vm.pageChanged=pageChanged,ClientsService.query(function(data){vm.clients=data,vm.buildPager()})}angular.module("clients").controller("ClientsListController",ClientsListController),ClientsListController.$inject=["$filter","$state","Notification","coreService","ClientsService"]}();
!function(){"use strict";function AssignController($scope,$filter,$uibModal,Notification,coreService,OrdersService){function assign(order){console.log(order),vm.current=order,"object"==typeof vm.current.assignedTo&&(vm.assignedTo=vm.current.assignedTo._id);var modalInstance=$uibModal.open({animation:!0,templateUrl:"/modules/groceries/client/views/modals/assign.html",scope:$scope});vm.modalOk=function(){function successCallback(res){Notification.info({message:"Update successful!"}),vm.current.assignedTo=$filter("filter")(vm.volunteers,{_id:vm.assignedTo})[0]}function errorCallback(res){vm.current.status="pending",vm.error=res.data.message}modalInstance.close("OK Clicked"),vm.current.assignedTo=vm.assignedTo,vm.current.status="ordered",vm.current.createOrUpdate().then(successCallback).catch(errorCallback)},vm.modalCancel=function(){modalInstance.dismiss("Cancel Clicked")},modalInstance.result.then(function(){console.log("Open Checkout Interface")},function(){console.info("modal-component dismissed at: "+new Date)})}var vm=this;vm.complete=!1,vm.volunteers=coreService.getOptions("volunteers"),vm.allowSave=!0,vm.assign=assign,vm.orders=OrdersService.query({status:"pending"},function(orders){})}angular.module("groceries").controller("AssignController",AssignController),AssignController.$inject=["$scope","$filter","$uibModal","Notification","coreService","OrdersService"]}();
!function(){"use strict";function CheckoutController($scope,$stateParams,$state,$timeout,$uibModal,Notification,OrdersService,Upload){function checkout(order){vm.current=order;var modalInstance=$uibModal.open({animation:!0,templateUrl:"/modules/groceries/client/views/modals/checklist.html",scope:$scope});vm.modalOk=function(){modalInstance.close("OK Clicked"),receipt(order)},vm.modalCancel=function(){modalInstance.dismiss("Cancel Clicked")}}function receipt(order){vm.current=order;var modalInstance=$uibModal.open({animation:!0,templateUrl:"/modules/groceries/client/views/modals/reciept.html",scope:$scope});vm.modalOk=function(){modalInstance.close("OK Clicked"),0!==vm.current.recieptTotal&&vm.current.hasOwnProperty("recieptImage")&&""!==vm.current.recieptImage?vm.current.status="purchased":vm.current.status="incart",updateOrder()},vm.modalCancel=function(){modalInstance.dismiss("Cancel Clicked")},modalInstance.result.then(function(){console.log("Open Checkout Interface")},function(){console.info("modal-component dismissed at: "+new Date)})}function updateOrder(){function successCallback(res){Notification.info({message:"Update successful!"}),checkList()}function errorCallback(res){vm.error=res.data.message}vm.current.$update(successCallback,errorCallback)}function totals(){if(isNaN(vm.current.recieptTotal))return Notification.error({message:"Reciept Total is needs to be a number.",title:'<i class="glyphicon glyphicon-remove"></i> Invalid Input!'});vm.current.recieptTotal=(Math.round(100*vm.current.recieptTotal)/100).toFixed(2),vm.current.total=vm.current.deliveryCost+ +vm.current.recieptTotal,updateOrder()}function upload(dataUrl){Upload.upload({url:"/api/orders/"+vm.current._id+"/reciept",data:{reciept:dataUrl}}).then(function(response){$timeout(function(){onSuccessItem(response.data)})},function(response){response.status>0&&onErrorItem(response.data)},function(evt){vm.progress=parseInt(100*evt.loaded/evt.total,10)})}function onSuccessItem(response){Notification.success({message:'<i class="glyphicon glyphicon-ok"></i> Successfully uploaded reciept'}),vm.current.recieptImage=response.recieptImage,vm.fileSelected=!1,vm.progress=0}function onErrorItem(response){vm.fileSelected=!1,vm.progress=0,Notification.error({message:response.message,title:'<i class="glyphicon glyphicon-remove"></i> Failed to upload reciept'})}function checkList(){vm.complete=vm.orders.every(function(order){return"purchased"===order.status}),vm.complete&&0!==vm.orders.length&&delivery()}function delivery(){var header="Checkout Complete",message="All the orders have been checkedout and paid for. Would you like to continue to the delivery or stay here to review the orders?",buttonClass="success";vm.complete||(header="Checkout Incomplete",message="Some of the orders have not been checked out. Are you sure you would like to continue?",buttonClass="danger");var modalInstance=$uibModal.open({animation:!0,template:'<div class="modal-header"><h3 class="modal-title">'+header+'</h3></div><div class="modal-body">'+message+'</div><div class="modal-footer"><button class="btn btn-default" type="button" ng-click="vm.modalCancel()">Stay Here</button><button class="btn btn-'+buttonClass+'" type="button" ng-click="vm.modalOk()">Delivery</button></div>',scope:$scope});vm.modalOk=function(){modalInstance.close("OK Clicked"),$state.go("groceries.delivery")},vm.modalCancel=function(){modalInstance.dismiss("Cancel Clicked")},modalInstance.result.then(function(){console.log("Open Checkout Interface")},function(){console.info("modal-component dismissed at: "+new Date)})}var vm=this;vm.clientid=$stateParams.clientId,vm.picklist=[],vm.complete=!1,vm.checkout=checkout,vm.totals=totals,vm.updateOrder=updateOrder,vm.upload=upload,vm.orders=OrdersService.query({status:"incart"},function(orders){checkList()})}angular.module("groceries").controller("CheckoutController",CheckoutController),CheckoutController.$inject=["$scope","$stateParams","$state","$timeout","$uibModal","Notification","OrdersService","Upload"]}();
!function(){"use strict";function DeliveryController($scope,$stateParams,$window,$uibModal,Notification,ActionsService,OrdersService){function getAddress(address){return address.street+", "+address.city+", "+address.state+" "+address.zipcode}function deliver(order){vm.current=order;var modalInstance=$uibModal.open({animation:!0,templateUrl:"/modules/groceries/client/views/modals/deliver.html",scope:$scope});vm.modalOk=function(){modalInstance.close("OK Clicked"),updateOrder()},vm.modalCancel=function(){modalInstance.dismiss("Cancel Clicked")}}function updateOrder(){function successCallback(res){return Notification.info({message:"Update successful!"}),!0===vm.current.delivery.followup?createAction(checkList):checkList()}function errorCallback(res){vm.error=res.data.message,vm.current.status="purchased"}vm.current.status="delivered",vm.current.$update(successCallback,errorCallback)}function createAction(checkList){function successCallback(res){Notification.info({message:"Action Created"}),checkList()}function errorCallback(res){vm.error=res.data.message}vm.action=new ActionsService({created:new Date,complete:!1,clientId:vm.current.clientId,notes:vm.current.delivery.notes}),vm.action.$save(successCallback,errorCallback)}function checkList(){vm.complete=vm.orders.every(function(order){return"delivered"===order.status})}function ready(){if(!vm.current.hasOwnProperty("delivery"))return!0;var delivery=vm.current.delivery;return!(delivery.hasOwnProperty("payment")&&delivery.hasOwnProperty("method")&&delivery.hasOwnProperty("followup"))}var vm=this;vm.clientid=$stateParams.clientId,vm.complete=!1,vm.isMobile=!1,vm.paymentTypes=["Cash","Check","Credit Card"],vm.ready=ready,vm.getAddress=getAddress,vm.deliver=deliver,vm.orders=OrdersService.query({status:"purchased"},function(orders){checkList()}),$window.innerWidth<992&&(vm.isMobile=!0)}angular.module("groceries").controller("DeliveryController",DeliveryController),DeliveryController.$inject=["$scope","$stateParams","$window","$uibModal","Notification","ActionsService","OrdersService"]}();
!function(){"use strict";function menuConfig(menuService){menuService.addMenuItem("topbar",{title:"Groceries",state:"groceries",type:"dropdown",roles:["admin","volunteer"]}),menuService.addSubMenuItem("topbar","groceries",{title:"Assign List",state:"groceries.assign",roles:["admin"]}),menuService.addSubMenuItem("topbar","groceries",{title:"Pick List",state:"groceries.list",roles:["admin","volunteer"]}),menuService.addSubMenuItem("topbar","groceries",{title:"Checkout List",state:"groceries.checkout",roles:["admin","volunteer"]}),menuService.addSubMenuItem("topbar","groceries",{title:"Delivery List",state:"groceries.delivery",roles:["admin","volunteer"]})}angular.module("groceries").run(menuConfig),menuConfig.$inject=["menuService"]}();
!function(){"use strict";function GroceriesController($scope,$state,$window,Authentication,coreService,groceriesToGo){function remove(){$window.confirm("Are you sure you want to delete?")&&vm.groceriesToGo.$remove($state.go("groceries.list"))}function save(isValid){function successCallback(res){$state.go("groceries.view",{groceriesToGoId:res._id})}function errorCallback(res){vm.error=res.data.message}if(!isValid)return $scope.$broadcast("show-errors-check-validity","vm.groceriesToGoForm"),!1;vm.groceriesToGo.createOrUpdate().then(successCallback).catch(errorCallback)}var vm=this;vm.authentication=Authentication,vm.groceriesToGo=groceriesToGo,vm.options=coreService.getOptions("Client"),vm.error=null,vm.remove=remove,vm.save=save}angular.module("groceries").controller("GroceriesController",GroceriesController),GroceriesController.$inject=["$scope","$state","$window","Authentication","coreService","groceriesToGoResolve"]}();
!function(){"use strict";function routeConfig($stateProvider){$stateProvider.state("groceries",{abstract:!0,url:"/groceries",template:"<ui-view/>"}).state("groceries.assign",{url:"/assign",templateUrl:"/modules/groceries/client/views/assign.html",controller:"AssignController",controllerAs:"vm",data:{pageTitle:"Groceries To Go - Assign"}}).state("groceries.list",{url:"/list",templateUrl:"/modules/groceries/client/views/picklist.html",controller:"PicklistController",controllerAs:"vm",data:{pageTitle:"Groceries To Go - Picklist"}}).state("groceries.checkout",{url:"/checkout",templateUrl:"/modules/groceries/client/views/checkout.html",controller:"CheckoutController",controllerAs:"vm",data:{pageTitle:"Groceries To Go - Checkout"}}).state("groceries.delivery",{url:"/delivery",templateUrl:"/modules/groceries/client/views/delivery.html",controller:"DeliveryController",controllerAs:"vm",data:{pageTitle:"Groceries To Go - Delivery"}})}function getGroceriesToGo($stateParams,GroceriesService){return GroceriesService.get({groceriesToGoId:$stateParams.groceriesToGoId}).$promise}function newGroceriesToGo(GroceriesService){return new GroceriesService}angular.module("groceries").config(routeConfig),routeConfig.$inject=["$stateProvider"],getGroceriesToGo.$inject=["$stateParams","GroceriesService"],newGroceriesToGo.$inject=["GroceriesService"]}();
!function(){"use strict";function GroceriesService($log,$resource){function createOrUpdate(grocery){function onSuccess(grocery){}function onError(errorResponse){handleError(errorResponse.data)}return grocery._id?grocery.$update(onSuccess,onError):grocery.$save(onSuccess,onError)}function handleError(error){$log.error(error)}var Grocery=$resource("api/groceries/:groceryId",{groceriesToGoId:"@_id"},{update:{method:"PUT"}});return angular.extend(Grocery.prototype,{createOrUpdate:function(){return createOrUpdate(this)}}),Grocery}angular.module("groceries").factory("GroceriesService",GroceriesService),GroceriesService.$inject=["$log","$resource"]}();
!function(){"use strict";function PicklistController($filter,$scope,$state,$stateParams,$uibModal,Notification,OrdersService){function toggle(itemData){function successCallback(res){Notification.info({message:"Update successful!"}),checkList()}function errorCallback(res){vm.error=res.data.message,itemData.inCart=!itemData.inCart,item.inCart=!item.inCart,(orderComplete=order.items.every(function(listItem){return listItem.inCart||listItem.notAvailable}))||(order.status="ordered")}var order=vm.orders[itemData.keys[0]],item=order.items[itemData.keys[1]];itemData.inCart=!itemData.inCart,item.inCart=!item.inCart,itemData.notAvailable&&(itemData.notAvailable=!1,item.notAvailable=!1);var orderComplete=order.items.every(function(listItem){return listItem.inCart||listItem.notAvailable});orderComplete&&(order.status="incart"),order.$update(successCallback,errorCallback)}function notAvailable(itemData){function successCallback(res){Notification.info({message:"Update successful!"}),checkList()}function errorCallback(res){vm.error=res.data.message,itemData.notAvailable=!itemData.notAvailable,item.notAvailable=!item.notAvailable,(orderComplete=order.items.every(function(listItem){return listItem.inCart||listItem.notAvailable}))||(order.status="ordered")}var order=vm.orders[itemData.keys[0]],item=order.items[itemData.keys[1]];itemData.notAvailable=!itemData.notAvailable,item.notAvailable=!item.notAvailable;var orderComplete=order.items.every(function(listItem){return listItem.inCart||listItem.notAvailable});orderComplete&&(order.status="incart"),order.$update(successCallback,errorCallback)}function checkList(){vm.complete=vm.picklist.every(function(listItem){return listItem.inCart||listItem.notAvailable}),vm.complete&&0!==vm.orders.length&&checkout()}function checkout(){var header="Pick List Complete",message="All the items on this picklist have been added to the cart. Would you like to continue to the checkout or stay here to review the cart?",buttonClass="success";vm.complete||(header="Pick List Incomplete",message="Some of the items on this pick list have not been added to the cart. Are you sure you would like to continue?",buttonClass="danger");var modalInstance=$uibModal.open({animation:!0,template:'<div class="modal-header"><h3 class="modal-title">'+header+'</h3></div><div class="modal-body">'+message+'</div><div class="modal-footer"><button class="btn btn-default" type="button" ng-click="vm.modalCancel()">Stay Here</button><button class="btn btn-'+buttonClass+'" type="button" ng-click="vm.modalOk()">Checkout</button></div>',scope:$scope});vm.modalOk=function(){modalInstance.close("OK Clicked"),$state.go("groceries.checkout")},vm.modalCancel=function(){modalInstance.dismiss("Cancel Clicked")},modalInstance.result.then(function(){console.log("Open Checkout Interface")},function(){console.info("modal-component dismissed at: "+new Date)})}var vm=this;vm.picklist=[],vm.complete=!1,vm.checkout=checkout,vm.toggle=toggle,vm.notAvailable=notAvailable,vm.orders=OrdersService.query({status:"ordered"},function(orders){for(var i=0;i<orders.length;i++)for(var order=orders[i],client=orders[i].contact,j=0;j<order.items.length;j++)vm.picklist.push({name:order.items[j].name,keys:[i,j],category:order.items[j].category,qty:order.items[j].qty,client:client.firstName+" "+client.lastName,clientId:orders[i].clientId,orderId:orders[i]._id,inCart:order.items[j].inCart,notAvailable:order.items[j].notAvailable});vm.picklist=$filter("orderBy")(vm.picklist,"category"),checkList()})}angular.module("groceries").controller("PicklistController",PicklistController),PicklistController.$inject=["$filter","$scope","$state","$stateParams","$uibModal","Notification","OrdersService"]}();
!function(){"use strict";function ServicesController($scope,$state,$window,Authentication,service){function remove(){$window.confirm("Are you sure you want to delete?")&&vm.service.$remove($state.go("services.list"))}function save(isValid){function successCallback(res){$state.go("services.view",{serviceId:res._id})}function errorCallback(res){vm.error=res.data.message}if(!isValid)return $scope.$broadcast("show-errors-check-validity","vm.serviceForm"),!1;vm.service.createOrUpdate().then(successCallback).catch(errorCallback)}var vm=this;vm.authentication=Authentication,vm.service=service,vm.error=null,vm.remove=remove,vm.save=save}angular.module("services").controller("ServicesController",ServicesController),ServicesController.$inject=["$scope","$state","$window","Authentication","serviceResolve"]}();
!function(){"use strict";function routeConfig($stateProvider){$stateProvider.state("services",{abstract:!0,url:"/services",template:"<ui-view/>"}).state("services.list",{url:"",templateUrl:"modules/services/client/views/list-services.html",controller:"ServicesListController",controllerAs:"vm",data:{pageTitle:"Services List"}}).state("services.view",{url:"/:serviceId",templateUrl:"modules/services/client/views/view-service.html",controller:"ServicesController",controllerAs:"vm",resolve:{serviceResolve:getService},data:{pageTitle:"Service {{ serviceResolve.name }}"}})}function getService($stateParams,ServicesService){return ServicesService.get({serviceId:$stateParams.serviceId}).$promise}angular.module("services").config(routeConfig),routeConfig.$inject=["$stateProvider"],getService.$inject=["$stateParams","ServicesService"]}();
!function(){"use strict";function ServicesService($log,$resource){function createOrUpdate(service){function onSuccess(service){}function onError(errorResponse){handleError(errorResponse.data)}return service._id?service.$update(onSuccess,onError):service.$save(onSuccess,onError)}function handleError(error){$log.error(error)}var Service=$resource("api/services/:serviceId",{serviceId:"@_id"},{update:{method:"PUT"}});return angular.extend(Service.prototype,{createOrUpdate:function(){return createOrUpdate(this)}}),Service}angular.module("services").factory("ServicesService",ServicesService),ServicesService.$inject=["$log","$resource"]}();
!function(){"use strict";function lowercase(){function link(scope,element,attrs,modelCtrl){modelCtrl.$parsers.push(function(input){return input?input.toLowerCase():""}),element.css("text-transform","lowercase")}return{require:"ngModel",link:link}}angular.module("users").directive("lowercase",lowercase)}();
!function(){"use strict";function routeConfig($stateProvider){$stateProvider.state("settings",{abstract:!0,url:"/settings",templateUrl:"/modules/users/client/profile/views/settings.html",controller:"SettingsController",controllerAs:"vm",data:{roles:["user","admin"]}}).state("settings.profile",{url:"/profile",templateUrl:"/modules/users/client/profile/views/edit-profile.html",controller:"EditProfileController",controllerAs:"vm",data:{roles:["user","admin"],pageTitle:"Settings"}}).state("settings.password",{url:"/password",templateUrl:"/modules/users/client/profile/views/change-password.html",controller:"ChangePasswordController",controllerAs:"vm",data:{pageTitle:"Settings password"}}).state("settings.picture",{url:"/picture",templateUrl:"/modules/users/client/profile/views/change-profile-picture.html",controller:"ChangeProfilePictureController",controllerAs:"vm",data:{pageTitle:"Settings picture"}}).state("authentication",{url:"/authentication",templateUrl:"/modules/users/client/auth/views/authentication.html",controller:"AuthenticationController",controllerAs:"vm",data:{pageTitle:"Signin"}}).state("authentication.signup",{url:"/signup",params:{type:null},templateUrl:"/modules/users/client/auth/views/signup.html",controller:"AuthenticationController",controllerAs:"vm",data:{pageTitle:"Signup"}}).state("authentication.signin",{url:"/signin?err",templateUrl:"/modules/users/client/auth/views/signin.html",controller:"AuthenticationController",controllerAs:"vm",data:{pageTitle:"Signin"}}).state("password",{abstract:!0,url:"/password",template:"<ui-view/>"}).state("password.forgot",{url:"/forgot",templateUrl:"/modules/users/client/auth/views/forgot-password.html",controller:"PasswordController",controllerAs:"vm",data:{pageTitle:"Password forgot"}}).state("password.reset",{abstract:!0,url:"/reset",template:"<ui-view/>"}).state("password.reset.invalid",{url:"/invalid",templateUrl:"/modules/users/client/auth/views/reset-password-invalid.html",data:{pageTitle:"Password reset invalid"}}).state("password.reset.success",{url:"/success",templateUrl:"/modules/users/client/auth/views/reset-password-success.html",data:{pageTitle:"Password reset success"}}).state("password.reset.form",{url:"/:token",templateUrl:"/modules/users/client/auth/views/reset-password.html",controller:"PasswordController",controllerAs:"vm",data:{pageTitle:"Password reset form"}})}angular.module("users.routes").config(routeConfig),routeConfig.$inject=["$stateProvider"]}();
!function(){"use strict";function UsersService($log,$resource){function createOrUpdate(user){function onSuccess(user){}function onError(errorResponse){handleError(errorResponse.data)}return user._id?user.$update(onSuccess,onError):(user.date=new Date,user.$save(onSuccess,onError))}function handleError(error){$log.error(error)}var Users=$resource("/api/users",{},{update:{method:"PUT"},updatePassword:{method:"POST",url:"/api/users/password"},sendPasswordResetToken:{method:"POST",url:"/api/auth/forgot"},resetPasswordWithToken:{method:"POST",url:"/api/auth/reset/:token"},signup:{method:"POST",url:"/api/auth/signup"},signin:{method:"POST",url:"/api/auth/signin"}});return angular.extend(Users,{changePassword:function(passwordDetails){return this.updatePassword(passwordDetails).$promise},requestPasswordReset:function(credentials){return this.sendPasswordResetToken(credentials).$promise},resetPassword:function(token,passwordDetails){return this.resetPasswordWithToken({token:token},passwordDetails).$promise},userSignup:function(credentials){return this.signup(credentials).$promise},userSignin:function(credentials){return this.signin(credentials).$promise}}),angular.extend(Users.prototype,{createOrUpdate:function(){return createOrUpdate(this)}}),Users}angular.module("users.services").factory("UsersService",UsersService),UsersService.$inject=["$log","$resource"]}();
!function(){"use strict";function ApproveVolunteersController($filter,$window,Notification,AdminService){function buildPager(){vm.pagedItems=[],vm.itemsPerPage=10,vm.currentPage=1,vm.figureOutItemsToDisplay()}function figureOutItemsToDisplay(){vm.filteredItems=$filter("filter")(vm.users,{roles:"volunteer",active:!1}),vm.filterLength=vm.filteredItems.length,vm.filterLength<vm.itemsPerPage*(vm.currentPage-1)&&(vm.currentPage=1);var begin=(vm.currentPage-1)*vm.itemsPerPage,end=begin+vm.itemsPerPage;vm.pagedItems=vm.filteredItems.slice(begin,end)}function pageChanged(){vm.figureOutItemsToDisplay()}function approve(user,index){function successCallback(res){vm.users.splice((vm.currentPage-1)*vm.itemsPerPage+index,1),vm.figureOutItemsToDisplay(),Notification.info({message:"Update successful!"})}function errorCallback(res){vm.error=res.data.message,user.active=!1}user.active=!0,user.createOrUpdate().then(successCallback).catch(errorCallback)}function remove(user){$window.confirm("Are you sure you want to delete this user?")&&(user?(user.$remove(),Notification.success("User deleted successfully!")):vm.user.$remove(function(){Notification.success({message:'<i class="glyphicon glyphicon-ok"></i> User deleted successfully!'})}))}function isContextUserSelf(user){return vm.user.email===vm.authentication.user.email}var vm=this;vm.buildPager=buildPager,vm.figureOutItemsToDisplay=figureOutItemsToDisplay,vm.pageChanged=pageChanged,vm.approve=approve,vm.remove=remove,vm.isContextUserSelf=isContextUserSelf,AdminService.query({roles:"volunteer",active:!1},function(data){vm.users=data,vm.buildPager()})}angular.module("volunteers").controller("ApproveVolunteersController",ApproveVolunteersController),ApproveVolunteersController.$inject=["$filter","$window","Notification","AdminService"]}();
!function(){"use strict";function VolunteersListController($filter,Notification,VolunteersService){function buildPager(){vm.pagedItems=[],vm.itemsPerPage=10,vm.currentPage=1,vm.search="",vm.figureOutItemsToDisplay()}function figureOutItemsToDisplay(){vm.filteredItems=$filter("filter")(vm.volunteers,{$:vm.search}),vm.filterLength=vm.filteredItems.length,""!==vm.search&&vm.filterLength<vm.itemsPerPage*(vm.currentPage-1)&&(vm.currentPage=1),vm.filterLength=vm.filteredItems.length;var begin=(vm.currentPage-1)*vm.itemsPerPage,end=begin+vm.itemsPerPage;vm.pagedItems=vm.filteredItems.slice(begin,end)}function pageChanged(){vm.figureOutItemsToDisplay()}function toggle(field,client){function successCallback(res){Notification.info({message:"Update successful!"})}function errorCallback(res){vm.error=res.data.message,client[field]=!client[field]}client[field]=!client[field],client.$update(successCallback,errorCallback)}var vm=this;vm.buildPager=buildPager,vm.figureOutItemsToDisplay=figureOutItemsToDisplay,vm.pageChanged=pageChanged,vm.toggle=toggle,VolunteersService.query(function(data){vm.volunteers=data,vm.buildPager()})}angular.module("volunteers").controller("VolunteersListController",VolunteersListController),VolunteersListController.$inject=["$filter","Notification","VolunteersService"]}();
!function(){"use strict";function menuConfig(menuService){menuService.addMenuItem("topbar",{title:"Volunteers",state:"volunteers",type:"dropdown",roles:["admin"]}),menuService.addSubMenuItem("topbar","volunteers",{title:"List Volunteers",state:"volunteers.list",roles:["admin"]}),menuService.addSubMenuItem("topbar","volunteers",{title:"Approve Volunteers",state:"volunteers.approve",roles:["admin"]})}angular.module("volunteers").run(menuConfig),menuConfig.$inject=["menuService"]}();
!function(){"use strict";function VolunteersController($scope,$state,$stateParams,$window,Notification,Authentication,coreService,volunteer){function remove(){$window.confirm("Are you sure you want to delete?")&&vm.volunteer.$remove($state.go("volunteers.list"))}function save(isValid){function successCallback(res){if(vm.volunteer=res,vm.editProfile)return Authentication.user.volunteerId=res._id,$state.go("settings.volunteer.edit",{volunteerId:res._id}),Notification.info({message:"Update successful!"});$state.go("volunteers.view",{volunteerId:res._id})}function errorCallback(res){vm.error=res.data.message}if(!isValid)return $scope.$broadcast("show-errors-check-validity","vm.volunteerForm"),!1;vm.volunteer.createOrUpdate().then(successCallback).catch(errorCallback)}var vm=this;vm.authentication=Authentication,vm.volunteer=volunteer,vm.options=coreService.getOptions("Volunteer"),vm.remove=remove,vm.save=save,vm.editProfile=$stateParams.editProfile||!1,vm.volunteer._id||(vm.volunteer.contact={address:{state:"MN"},firstName:Authentication.user.firstName,lastName:Authentication.user.lastName,email:Authentication.user.email})}angular.module("volunteers").controller("VolunteersController",VolunteersController),VolunteersController.$inject=["$scope","$state","$stateParams","$window","Notification","Authentication","coreService","volunteerResolve"]}();
!function(){"use strict";function routeConfig($stateProvider){$stateProvider.state("volunteers",{abstract:!0,url:"/volunteers",template:"<ui-view/>"}).state("volunteers.list",{url:"",templateUrl:"/modules/volunteers/client/views/list-volunteers.html",controller:"VolunteersListController",controllerAs:"vm",data:{roles:["admin"],pageTitle:"Volunteers List"}}).state("volunteers.approve",{url:"/approve",templateUrl:"/modules/volunteers/client/views/approve-volunteers.html",controller:"ApproveVolunteersController",controllerAs:"vm",data:{roles:["admin"],pageTitle:"Approve Volunteers"}}).state("volunteers.create",{url:"/create",templateUrl:"/modules/volunteers/client/views/form-volunteer.html",controller:"VolunteersController",controllerAs:"vm",resolve:{volunteerResolve:newVolunteer},data:{roles:["admin","volunteer"],pageTitle:"Volunteers Create"}}).state("volunteers.edit",{url:"/:volunteerId/edit",templateUrl:"/modules/volunteers/client/views/form-volunteer.html",controller:"VolunteersController",controllerAs:"vm",resolve:{volunteerResolve:getVolunteer},data:{roles:["admin","volunteer"],pageTitle:"Edit Volunteer {{ volunteerResolve.name }}"}}).state("volunteers.view",{url:"/:volunteerId",templateUrl:"/modules/volunteers/client/views/view-volunteer.html",controller:"VolunteersController",controllerAs:"vm",resolve:{volunteerResolve:getVolunteer},data:{roles:["admin","volunteer"],pageTitle:"Volunteer {{ volunteerResolve.name }}"}}).state("settings.volunteer",{abstract:!0,url:"/volunteer",template:"<ui-view/>"}).state("settings.volunteer.create",{url:"/create",params:{editProfile:!0},templateUrl:"/modules/volunteers/client/views/form-volunteer.html",controller:"VolunteersController",controllerAs:"vm",resolve:{volunteerResolve:newVolunteer},data:{roles:["volunteer"],pageTitle:"Create Profile"}}).state("settings.volunteer.edit",{url:"/:volunteerId/edit",params:{editProfile:!0},templateUrl:"/modules/volunteers/client/views/form-volunteer.html",controller:"VolunteersController",controllerAs:"vm",resolve:{volunteerResolve:getVolunteer},data:{roles:["volunteer"],pageTitle:"Edit Profile"}})}function getVolunteer($stateParams,VolunteersService){return VolunteersService.get({volunteerId:$stateParams.volunteerId}).$promise}function newVolunteer(VolunteersService){return new VolunteersService}angular.module("volunteers").config(routeConfig),routeConfig.$inject=["$stateProvider"],getVolunteer.$inject=["$stateParams","VolunteersService"],newVolunteer.$inject=["VolunteersService"]}();
!function(){"use strict";function VolunteersService($log,$resource){function createOrUpdate(volunteer){function onSuccess(volunteer){}function onError(errorResponse){handleError(errorResponse.data)}return volunteer._id?volunteer.$update(onSuccess,onError):volunteer.$save(onSuccess,onError)}function handleError(error){$log.error(error)}var Volunteer=$resource("/api/volunteers/:volunteerId",{volunteerId:"@_id"},{get:{method:"GET",transformResponse:function(data,headers){return data=angular.fromJson(data),data.contact.birthday&&(data.contact.birthday=new Date(data.contact.birthday)),data}},update:{method:"PUT"}});return angular.extend(Volunteer.prototype,{createOrUpdate:function(){return createOrUpdate(this)}}),Volunteer}angular.module("volunteers").factory("VolunteersService",VolunteersService),VolunteersService.$inject=["$log","$resource"]}();
!function(){"use strict";function AddressController(coreService){var vm=this;vm.options=coreService.getOptions("Address"),vm.error=null,vm.form={}}angular.module("contacts.address").controller("AddressController",AddressController),AddressController.$inject=["coreService"]}();
!function(){"use strict";function address(){return{restrict:"E",scope:{address:"=",error:"="},controller:"AddressController",controllerAs:"vm",bindToController:!0,templateUrl:"/modules/contacts/client/address/views/form-address.html"}}angular.module("contacts.address").directive("address",address)}();
!function(){"use strict";function itemsForm(){return{restrict:"EA",scope:{items:"=",form:"=",error:"="},controller:"ItemsController",controllerAs:"vm",bindToController:!0,templateUrl:"/modules/groceries/client/views/form-items.html"}}angular.module("groceries.orders").directive("itemsForm",itemsForm)}();
!function(){"use strict";function ItemsController($scope,$state,$filter,$window,coreService){function saveItem(data,id){return angular.extend(data,{id:id}),console.log("Item Saved")}function removeItem(index){vm.items.splice(index,1)}function addItem(){vm.inserted={id:vm.items.length+1,name:"",qty:"",category:""},vm.items.push(vm.inserted),console.log(vm.items)}function updateOrder(){$scope.$emit("updateOrder")}var vm=this;vm.options=coreService.getOptions("Grocery"),vm.error=null,vm.saveItem=saveItem,vm.removeItem=removeItem,vm.addItem=addItem,vm.updateOrder=updateOrder}angular.module("groceries.orders").controller("ItemsController",ItemsController),ItemsController.$inject=["$scope","$state","$filter","$window","coreService"]}();
!function(){"use strict";function OrdersListController(OrdersService,$filter,$stateParams){function buildPager(){vm.pagedItems=[],vm.itemsPerPage=3,vm.currentPage=1,vm.search="",vm.figureOutItemsToDisplay()}function figureOutItemsToDisplay(){vm.filteredItems=vm.orders,vm.filterLength=vm.filteredItems.length,""!==vm.search&&vm.filterLength<vm.itemsPerPage*(vm.currentPage-1)&&(vm.currentPage=1);var begin=(vm.currentPage-1)*vm.itemsPerPage,end=begin+vm.itemsPerPage;vm.pagedItems=vm.filteredItems.slice(begin,end)}function pageChanged(){vm.figureOutItemsToDisplay()}var vm=this;vm.buildPager=buildPager,vm.figureOutItemsToDisplay=figureOutItemsToDisplay,vm.pageChanged=pageChanged,vm.clientid=$stateParams.clientId,OrdersService.query({clientId:vm.clientid},function(data){vm.orders=data,vm.buildPager()})}angular.module("groceries.orders").controller("OrdersListController",OrdersListController),OrdersListController.$inject=["OrdersService","$filter","$stateParams"]}();
!function(){"use strict";function listOrders(){return{restrict:"E",scope:{clientId:"="},controller:"OrdersListController",controllerAs:"vm",bindToController:!0,replace:!0,transclude:!0,templateUrl:"/modules/groceries/client/views/list-orders.html"}}angular.module("groceries.orders").directive("listOrders",listOrders)}();
!function(){"use strict";function OrdersController($scope,$state,$filter,$stateParams,$window,$uibModal,OrdersService,Authentication,coreService,order){function remove(){$window.confirm("Are you sure you want to delete?")&&vm.order.$remove($state.go("groceries.orders.list"))}function save(isValid){function successCallback(res){!0===holdState?holdState=!1:$state.go($state.previous.state.name||"dashboard",$state.previous.params)}function errorCallback(res){console.log(res),vm.error=res.data.message}if(!isValid)return $scope.$broadcast("show-errors-check-validity","vm.orderForm"),!1;for(var i=0;i<vm.order.items.length;i++){var item=vm.order.items[i];if(""===item.name)return alert("All items require a name");if(""===item.category)return alert("All items require a category");if(""===item.qty)return alert("All items require a qty");item.id=void 0}vm.order.createOrUpdate().then(successCallback).catch(errorCallback)}function assign(){vm.current=vm.order;var modalInstance=$uibModal.open({animation:!0,templateUrl:"/modules/groceries/client/views/modals/assign.html",scope:$scope});vm.modalOk=function(){modalInstance.close("OK Clicked"),holdState=!0,save(!0)},vm.modalCancel=function(){modalInstance.dismiss("Cancel Clicked")},modalInstance.result.then(function(){console.log("Open Checkout Interface")},function(){console.info("modal-component dismissed at: "+new Date)})}function copyItems(){vm.current=vm.order;var modalInstance=$uibModal.open({animation:!0,templateUrl:"/modules/groceries/client/views/modals/copy-items.html",scope:$scope});vm.modalOk=function(){modalInstance.close("OK Clicked"),loadItems()},vm.modalCancel=function(){modalInstance.dismiss("Cancel Clicked")},modalInstance.result.then(function(){console.log("Open Checkout Interface")},function(){console.info("modal-component dismissed at: "+new Date)})}function loadItems(){OrdersService.query({_id:vm.lastOrder},function(data){vm.pastOrder=data;for(var i=0;i<data[0].items.length;i++)vm.order.items.push(data[0].items[i])})}function update(){totals()}function totals(){vm.order.total=+vm.order.recieptTotal+ +vm.order.deliveryCost}var vm=this;vm.lastOrder="",vm.authentication=Authentication,vm.order=order,vm.options=coreService.getOptions("Order"),vm.volunteers=coreService.getOptions("volunteers"),vm.assign=assign,vm.copyItems=copyItems,vm.error=null,vm.remove=remove,vm.update=update,vm.save=save;var holdState=!1;vm.dates={now:new Date,orderBy:new Date(vm.options.order[0]),nextOrderBy:new Date(vm.options.order[1]),delivery:new Date(vm.options.delivery[0]),nextDelivery:new Date(vm.options.delivery[1])},vm.order._id||(vm.order.clientId=$stateParams.clientId,vm.order.date=vm.orderBy,vm.order.items=[],vm.order.recieptTotal=0,vm.order.deliveryCost=10,vm.order.total=10,$stateParams.lastOrder&&(vm.lastOrder=$stateParams.lastOrder)),$scope.$on("updateOrder",function(){console.log("update order",vm),vm.update()})}angular.module("groceries.orders").controller("OrdersController",OrdersController),OrdersController.$inject=["$scope","$state","$filter","$stateParams","$window","$uibModal","OrdersService","Authentication","coreService","orderResolve"]}();
!function(){"use strict";function routeConfig($stateProvider){$stateProvider.state("order",{abstract:!0,url:"/clients/:clientId/orders",template:"<ui-view/>"}).state("order.create",{url:"/create",params:{lastOrder:null},templateUrl:"/modules/groceries/client/views/form-order.html",controller:"OrdersController",controllerAs:"vm",resolve:{orderResolve:newOrder},data:{roles:["admin"],pageTitle:"Groceries To Go Order"}}).state("order.edit",{url:"/:orderId/edit",templateUrl:"/modules/groceries/client/views/form-order.html",controller:"OrdersController",controllerAs:"vm",resolve:{orderResolve:getOrder},data:{roles:["admin"],pageTitle:"Edit Groceries To Go Order"}}).state("order.view",{url:"/:orderId",templateUrl:"/modules/groceries/client/views/view-order.html",controller:"OrdersController",controllerAs:"vm",resolve:{orderResolve:getOrder},data:{pageTitle:"Groceries To Go Order"}})}function getOrder($stateParams,OrdersService){return OrdersService.get({orderId:$stateParams.orderId}).$promise}function newOrder(OrdersService){return console.log("attempt new order"),new OrdersService}angular.module("groceries.orders").config(routeConfig),routeConfig.$inject=["$stateProvider"],getOrder.$inject=["$stateParams","OrdersService"],newOrder.$inject=["OrdersService"]}();
!function(){"use strict";function OrdersService($log,$resource){function createOrUpdate(order){function onSuccess(order){}function onError(errorResponse){handleError(errorResponse.data)}return order._id?order.$update(onSuccess,onError):(order.date=new Date,order.$save(onSuccess,onError))}function handleError(error){$log.error(error)}var Order=$resource("/api/orders/:orderId",{orderId:"@_id"},{update:{method:"PUT"}});return angular.extend(Order.prototype,{createOrUpdate:function(){return createOrUpdate(this)}}),Order}angular.module("groceries.orders").factory("OrdersService",OrdersService),OrdersService.$inject=["$log","$resource"]}();
!function(){"use strict";function ServicesAdminListController($scope,$filter,ServicesAdminService){function buildPager(){vm.pagedItems=[],vm.itemsPerPage=15,vm.currentPage=1,vm.figureOutItemsToDisplay()}function figureOutItemsToDisplay(){vm.filteredItems=$filter("filter")(vm.services,{$:vm.search}),vm.filterLength=vm.filteredItems.length;var begin=(vm.currentPage-1)*vm.itemsPerPage,end=begin+vm.itemsPerPage;vm.pagedItems=vm.filteredItems.slice(begin,end)}function pageChanged(){vm.figureOutItemsToDisplay()}var vm=this;vm.buildPager=buildPager,vm.figureOutItemsToDisplay=figureOutItemsToDisplay,vm.pageChanged=pageChanged,ServicesAdminService.query(function(data){vm.services=data,vm.buildPager()})}angular.module("services.admin").controller("ServicesAdminListController",ServicesAdminListController),ServicesAdminListController.$inject=["$scope","$filter","ServicesAdminService"]}();
!function(){"use strict";function ServicesAdminController($scope,$state,$window,Authentication,coreService,service,Notification){function remove(service){$window.confirm("Are you sure you want to delete this service?")&&(service?(service.$remove(),vm.services.splice(vm.services.indexOf(service),1),Notification.success("Service deleted successfully!")):vm.service.$remove(function(){$state.go("admin.services"),Notification.success({message:'<i class="glyphicon glyphicon-ok"></i> Service deleted successfully!'})}))}function save(isValid){function successCallback(res){$state.go("admin.services.view",{serviceId:res._id}),Notification.success({message:'<i class="glyphicon glyphicon-ok"></i> Service saved successfully!'})}function errorCallback(res){vm.error=res.data.message,Notification.error({message:res.data.message,title:'<i class="glyphicon glyphicon-remove"></i> Service update error!'})}if(!isValid)return $scope.$broadcast("show-errors-check-validity","vm.serviceForm"),!1;vm.service._id?vm.service.$update(successCallback,errorCallback):vm.service.$save(successCallback,errorCallback)}var vm=this;vm.authentication=Authentication,vm.service=service,vm.options=coreService.getOptions("Service"),vm.error=null,vm.remove=remove,vm.save=save}angular.module("services.admin").controller("ServicesAdminController",ServicesAdminController),ServicesAdminController.$inject=["$scope","$state","$window","Authentication","coreService","serviceResolve","Notification"]}();
!function(){"use strict";function menuConfig(menuService){menuService.addSubMenuItem("topbar","admin",{title:"Manage Services",state:"admin.services.list"})}angular.module("services.admin").run(menuConfig),menuConfig.$inject=["menuService"]}();
!function(){"use strict";function routeConfig($stateProvider){function getService($stateParams,ServicesAdminService){return ServicesAdminService.get({serviceId:$stateParams.serviceId}).$promise}function newService(ServicesAdminService){return new ServicesAdminService}$stateProvider.state("admin.services",{abstract:!0,url:"/services",template:"<ui-view/>"}).state("admin.services.list",{url:"",templateUrl:"/modules/services/client/admin/views/list-services.html",controller:"ServicesAdminListController",controllerAs:"vm",data:{pageTitle:"Services List"}}).state("admin.services.create",{url:"/create",templateUrl:"/modules/services/client/admin/views/edit-service.html",controller:"ServicesAdminController",controllerAs:"vm",resolve:{serviceResolve:newService},data:{pageTitle:"Services Create"}}).state("admin.services.edit",{url:"/:serviceId/edit",templateUrl:"/modules/services/client/admin/views/edit-service.html",controller:"ServicesAdminController",controllerAs:"vm",resolve:{serviceResolve:getService},data:{pageTitle:"Edit Service {{ serviceResolve.name }}"}}).state("admin.services.view",{url:"/:serviceId",templateUrl:"/modules/services/client/admin/views/view-service.html",controller:"ServicesAdminController",controllerAs:"vm",resolve:{serviceResolve:getService},data:{pageTitle:"Service {{ serviceResolve.name }}"}}),getService.$inject=["$stateParams","ServicesAdminService"],newService.$inject=["ServicesAdminService"]}angular.module("services.admin").config(routeConfig),routeConfig.$inject=["$stateProvider"]}();
!function(){"use strict";function ServicesAdminService($resource){return $resource("/api/services/:serviceId",{serviceId:"@_id"},{update:{method:"PUT"}})}angular.module("services.admin").factory("ServicesAdminService",ServicesAdminService),ServicesAdminService.$inject=["$resource"]}();
!function(){"use strict";function UserListController($scope,$filter,$window,Authentication,Notification,AdminService){function toggle(field,user){function successCallback(res){Notification.info({message:"Update successful!"})}function errorCallback(res){vm.error=res.data.message,user[field]=!user[field]}user[field]=!user[field],user.$update(successCallback,errorCallback)}function remove(user){$window.confirm("Are you sure you want to delete this user?")&&(user?(user.$remove(),Notification.success("User deleted successfully!")):vm.user.$remove(function(){Notification.success({message:'<i class="glyphicon glyphicon-ok"></i> User deleted successfully!'})}))}function isContextUserSelf(user){return user.email===Authentication.user.email}function buildPager(){vm.pagedItems=[],vm.itemsPerPage=10,vm.currentPage=1,vm.search="",vm.figureOutItemsToDisplay()}function figureOutItemsToDisplay(){vm.filteredItems=$filter("filter")(vm.users,{$:vm.search}),vm.filterLength=vm.filteredItems.length,""!==vm.search&&vm.filterLength<vm.itemsPerPage*(vm.currentPage-1)&&(vm.currentPage=1);var begin=(vm.currentPage-1)*vm.itemsPerPage,end=begin+vm.itemsPerPage;vm.pagedItems=vm.filteredItems.slice(begin,end)}function pageChanged(){vm.figureOutItemsToDisplay()}var vm=this;vm.toggle=toggle,vm.remove=remove,vm.isContextUserSelf=isContextUserSelf,vm.buildPager=buildPager,vm.figureOutItemsToDisplay=figureOutItemsToDisplay,vm.pageChanged=pageChanged,AdminService.query(function(data){vm.users=data,vm.buildPager()})}angular.module("users.admin").controller("UserListController",UserListController),UserListController.$inject=["$scope","$filter","$window","Authentication","Notification","AdminService"]}();
!function(){"use strict";function UserController($scope,$state,$stateParams,$window,Authentication,user,Notification,coreService){function toggleRole(role){var idx=vm.user.roles.indexOf(role);idx>-1?vm.user.roles.splice(idx,1):vm.user.roles.push(role)}function update(isValid){function successCallback(res){Notification.success({message:'<i class="glyphicon glyphicon-ok"></i> User saved successfully!'}),$state.go($state.previous.state.name,$state.previous.params)}function errorCallback(res){Notification.error({message:res.data.message,title:'<i class="glyphicon glyphicon-remove"></i> User update error!'})}if(!isValid)return $scope.$broadcast("show-errors-check-validity","vm.userForm"),!1;vm.user.createOrUpdate().then(successCallback).catch(errorCallback)}function remove(user){$window.confirm("Are you sure you want to delete this user?")&&(user?(user.$remove(),Notification.success("User deleted successfully!")):vm.user.$remove(function(){$state.go("admin.users.list"),Notification.success({message:'<i class="glyphicon glyphicon-ok"></i> User deleted successfully!'})}))}function isContextUserSelf(){return vm.user.email===vm.authentication.user.email}var vm=this;vm.title=$stateParams.pageTitle,vm.authentication=Authentication,vm.users=coreService.getOptions("User"),vm.user=user,vm.toggleRole=toggleRole,vm.remove=remove,vm.update=update,vm.isContextUserSelf=isContextUserSelf}angular.module("users.admin").controller("UserController",UserController),UserController.$inject=["$scope","$state","$stateParams","$window","Authentication","userResolve","Notification","coreService"]}();
!function(){"use strict";function menuConfig(menuService){menuService.addSubMenuItem("topbar","admin",{title:"Manage Users",state:"admin.users.list"})}angular.module("users.admin").run(menuConfig),menuConfig.$inject=["menuService"]}();
!function(){"use strict";function routeConfig($stateProvider){function getUser($stateParams,AdminService){return AdminService.get({userId:$stateParams.userId}).$promise}$stateProvider.state("admin.users",{abstract:!0,url:"/users",template:"<ui-view/>"}).state("admin.users.list",{url:"",templateUrl:"/modules/users/client/admin/views/list-users.html",controller:"UserListController",controllerAs:"vm",data:{pageTitle:"Users List"}}).state("admin.users.edit",{url:"/:userId/edit",templateUrl:"/modules/users/client/admin/views/edit-user.html",controller:"UserController",controllerAs:"vm",resolve:{userResolve:getUser},data:{pageTitle:"Edit User {{ userResolve.displayName }}"}}).state("admin.users.view",{url:"/:userId",templateUrl:"/modules/users/client/admin/views/view-user.html",controller:"UserController",controllerAs:"vm",params:{userId:""},resolve:{userResolve:getUser},data:{pageTitle:"{{ userResolve.displayName }}"}}),getUser.$inject=["$stateParams","AdminService"]}angular.module("users.admin.routes").config(routeConfig),routeConfig.$inject=["$stateProvider"]}();
!function(){"use strict";function AdminService($log,$resource){function createOrUpdate(user){function onSuccess(user){}function onError(errorResponse){handleError(errorResponse.data)}return user._id?user.$update(onSuccess,onError):(user.date=new Date,user.$save(onSuccess,onError))}function handleError(error){$log.error(error)}var User=$resource("/api/users/:userId",{userId:"@_id"},{update:{method:"PUT"}});return angular.extend(User.prototype,{createOrUpdate:function(){return createOrUpdate(this)}}),User}angular.module("users.admin.services").factory("AdminService",AdminService),AdminService.$inject=["$log","$resource"]}();
!function(){"use strict";function AuthenticationController($scope,$state,$stateParams,UsersService,$location,$window,Authentication,Notification){function signup(isValid){if(!isValid)return $scope.$broadcast("show-errors-check-validity","vm.userForm"),!1;$stateParams.type&&(vm.credentials.roles=$stateParams.type),UsersService.userSignup(vm.credentials).then(onUserSignupSuccess).catch(onUserSignupError)}function signin(isValid){if(!isValid)return $scope.$broadcast("show-errors-check-validity","vm.userForm"),!1;UsersService.userSignin(vm.credentials).then(onUserSigninSuccess).catch(onUserSigninError)}function onUserSignupSuccess(response){if(vm.authentication.user=response,Notification.success({message:'<i class="glyphicon glyphicon-ok"></i> Signup successful!'}),-1!==response.roles.indexOf("volunteer")&&!1===response.active)return $state.go("settings.volunteer.create",$state.previous.params);$state.go($state.previous.state.name||"dashboard",$state.previous.params)}function onUserSignupError(response){Notification.error({message:response.data.message,title:'<i class="glyphicon glyphicon-remove"></i> Signup Error!',delay:6e3})}function onUserSigninSuccess(response){vm.authentication.user=response,Notification.info({message:"Welcome "+response.firstName}),$state.go($state.previous.state.name||"dashboard",$state.previous.params)}function onUserSigninError(response){Notification.error({message:response.data.message,title:'<i class="glyphicon glyphicon-remove"></i> Signin Error!',delay:6e3})}var vm=this;vm.authentication=Authentication,vm.isSignup=!1,vm.signup=signup,vm.signin=signin,vm.usernameRegex=/^(?=[\w.-]+$)(?!.*[._-]{2})(?!\.)(?!.*\.$).{3,34}$/,$location.search().err&&Notification.error({message:$location.search().err}),vm.authentication.user&&$location.path("/dashboard"),"authentication.signup"===$state.current.name&&(vm.isSignup=!0)}angular.module("users").controller("AuthenticationController",AuthenticationController),AuthenticationController.$inject=["$scope","$state","$stateParams","UsersService","$location","$window","Authentication","Notification"]}();
!function(){"use strict";function Authentication($window){return{user:$window.user}}angular.module("users.services").factory("Authentication",Authentication),Authentication.$inject=["$window"]}();
!function(){"use strict";function passwordValidator(PasswordValidator){function link(scope,element,attrs,ngModel){ngModel.$validators.requirements=function(password){var status=!0;if(password){var result=PasswordValidator.getResult(password),requirementsIdx=0,requirementsMeter=[{color:"danger",progress:"20"},{color:"warning",progress:"40"},{color:"info",progress:"60"},{color:"primary",progress:"80"},{color:"success",progress:"100"}];result.errors.length<requirementsMeter.length&&(requirementsIdx=requirementsMeter.length-result.errors.length-1),scope.requirementsColor=requirementsMeter[requirementsIdx].color,scope.requirementsProgress=requirementsMeter[requirementsIdx].progress,result.errors.length?(scope.getPopoverMsg=PasswordValidator.getPopoverMsg(),scope.passwordErrors=result.errors,status=!1):(scope.getPopoverMsg="",scope.passwordErrors=[],status=!0)}return status}}return{require:"ngModel",link:link}}angular.module("users").directive("passwordValidator",passwordValidator),passwordValidator.$inject=["PasswordValidator"]}();
!function(){"use strict";function PasswordValidator($window){function getResult(password){return owaspPasswordStrengthTest.test(password)}function getPopoverMsg(){return"Please enter a passphrase or password with "+owaspPasswordStrengthTest.configs.minLength+" or more characters, numbers, lowercase, uppercase, and special characters."}var owaspPasswordStrengthTest=$window.owaspPasswordStrengthTest;return{getResult:getResult,getPopoverMsg:getPopoverMsg}}angular.module("users.services").factory("PasswordValidator",PasswordValidator),PasswordValidator.$inject=["$window"]}();
!function(){"use strict";function passwordVerify(){function link(scope,element,attrs,ngModel){scope.$watch(function(){var combined;return(scope.passwordVerify||ngModel)&&(combined=scope.passwordVerify+"_"+ngModel),combined},function(value){value&&(ngModel.$validators.passwordVerify=function(password){return scope.passwordVerify===password})})}return{require:"ngModel",scope:{passwordVerify:"="},link:link}}angular.module("users").directive("passwordVerify",passwordVerify)}();
!function(){"use strict";function PasswordController($scope,$stateParams,UsersService,$location,Authentication,PasswordValidator,Notification){function askForPasswordReset(isValid){if(!isValid)return $scope.$broadcast("show-errors-check-validity","vm.forgotPasswordForm"),!1;UsersService.requestPasswordReset(vm.credentials).then(onRequestPasswordResetSuccess).catch(onRequestPasswordResetError)}function resetUserPassword(isValid){if(!isValid)return $scope.$broadcast("show-errors-check-validity","vm.resetPasswordForm"),!1;UsersService.resetPassword($stateParams.token,vm.passwordDetails).then(onResetPasswordSuccess).catch(onResetPasswordError)}function onRequestPasswordResetSuccess(response){vm.credentials=null,Notification.success({message:response.message,title:'<i class="glyphicon glyphicon-ok"></i> Password reset email sent successfully!'})}function onRequestPasswordResetError(response){vm.credentials=null,Notification.error({message:response.data.message,title:'<i class="glyphicon glyphicon-remove"></i> Failed to send password reset email!',delay:4e3})}function onResetPasswordSuccess(response){vm.passwordDetails=null,Authentication.user=response,Notification.success({message:'<i class="glyphicon glyphicon-ok"></i> Password reset successful!'}),$location.path("/password/reset/success")}function onResetPasswordError(response){Notification.error({message:response.data.message,title:'<i class="glyphicon glyphicon-remove"></i> Password reset failed!',delay:4e3})}var vm=this;vm.resetUserPassword=resetUserPassword,vm.askForPasswordReset=askForPasswordReset,vm.authentication=Authentication,vm.getPopoverMsg=PasswordValidator.getPopoverMsg,vm.authentication.user&&$location.path("/")}angular.module("users").controller("PasswordController",PasswordController),PasswordController.$inject=["$scope","$stateParams","UsersService","$location","Authentication","PasswordValidator","Notification"]}();
!function(){"use strict";function ChangePasswordController($scope,$http,Authentication,UsersService,PasswordValidator,Notification){function changeUserPassword(isValid){if(!isValid)return $scope.$broadcast("show-errors-check-validity","vm.passwordForm"),!1;UsersService.changePassword(vm.passwordDetails).then(onChangePasswordSuccess).catch(onChangePasswordError)}function onChangePasswordSuccess(response){Notification.success({message:'<i class="glyphicon glyphicon-ok"></i> Password Changed Successfully'}),vm.passwordDetails=null}function onChangePasswordError(response){Notification.error({message:response.data.message,title:'<i class="glyphicon glyphicon-remove"></i> Password change failed!'})}var vm=this;vm.user=Authentication.user,vm.changeUserPassword=changeUserPassword,vm.getPopoverMsg=PasswordValidator.getPopoverMsg}angular.module("users").controller("ChangePasswordController",ChangePasswordController),ChangePasswordController.$inject=["$scope","$http","Authentication","UsersService","PasswordValidator","Notification"]}();
!function(){"use strict";function ChangeProfilePictureController($timeout,Authentication,Upload,Notification){function onSuccessItem(response){Notification.success({message:'<i class="glyphicon glyphicon-ok"></i> Successfully changed profile picture'}),vm.user=response,Authentication.user=response,vm.fileSelected=!1,vm.progress=0}function onErrorItem(response){vm.fileSelected=!1,vm.progress=0,Notification.error({message:response.message,title:'<i class="glyphicon glyphicon-remove"></i> Failed to change profile picture'})}var vm=this;vm.user=Authentication.user,vm.progress=0,vm.upload=function(dataUrl){Upload.upload({url:"/api/users/picture",data:{newProfilePicture:dataUrl}}).then(function(response){$timeout(function(){onSuccessItem(response.data)})},function(response){response.status>0&&onErrorItem(response.data)},function(evt){vm.progress=parseInt(100*evt.loaded/evt.total,10)})}}angular.module("users").controller("ChangeProfilePictureController",ChangeProfilePictureController),ChangeProfilePictureController.$inject=["$timeout","Authentication","Upload","Notification"]}();
!function(){"use strict";function EditProfileController($scope,$http,$state,UsersService,Authentication,Notification){function updateUserProfile(isValid){if(!isValid)return $scope.$broadcast("show-errors-check-validity","vm.userForm"),!1;new UsersService(vm.user).$update(function(response){$scope.$broadcast("show-errors-reset","vm.userForm"),Notification.success({message:'<i class="glyphicon glyphicon-ok"></i> Edit profile successful!'}),Authentication.user=response},function(response){Notification.error({message:response.data.message,title:'<i class="glyphicon glyphicon-remove"></i> Edit profile failed!'})})}var vm=this;vm.user=Authentication.user,vm.updateUserProfile=updateUserProfile,-1!==vm.user.roles.indexOf("volunteer")&&(vm.user.hasOwnProperty("volunteerId")?$state.go("settings.volunteer.edit",{volunteerId:vm.user.volunteerId}):$state.go("settings.volunteer.create"))}angular.module("users").controller("EditProfileController",EditProfileController),EditProfileController.$inject=["$scope","$http","$state","UsersService","Authentication","Notification"]}();
!function(){"use strict";function SettingsController($scope,Authentication){var vm=this;vm.user=Authentication.user,vm.profileEdit="settings.profile",-1!==vm.user.roles.indexOf("volunteer")&&(vm.user.hasOwnProperty("volunteerId")?vm.profileEdit="settings.volunteer.edit({volunteerId: '"+vm.user.volunteerId+"'})":vm.profileEdit="settings.volunteer.create")}angular.module("users").controller("SettingsController",SettingsController),SettingsController.$inject=["$scope","Authentication"]}();
!function(){"use strict";function templates($templateCache){$templateCache.put("modules/actions/client/views/list-actions.html",'<section>\n  <div class="page-header">\n    <h1>Actions</h1>\n  </div>\n  <div class="list-group">\n    <table class="table table-hover table-striped">\n      <thead>\n        <tr>\n          <th width="80">Type</th>\n          <th width="110">Created On</th>\n          <th width="110">Created By</th>\n          <th>Notes</th>\n          <th width="140" class="text-right">Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr ng-repeat="action in vm.pagedItems" >\n          <td>{{ action.type }}</td>\n          <td>{{ action.created | date:\'MM/dd/yyyy\' }}</td>\n          <td><a ui-sref="volunteers.view({ volunteerId: action.createdBy.volunteerId })">{{ action.createdBy.firstName }} {{ action.createdBy.lastName }}</a></td>\n          <td>{{ action.notes }}</td>\n          <td class="text-right">\n            <button class="btn " ng-class="action.completed ? \'btn-success\' : \'btn-default\'" ng-click="vm.complete(action)">\n          <i class="glyphicon" ng-class="action.completed ? \'glyphicon-check\' : \'glyphicon-unchecked\'"></i> {{ action.completed ? \'Complete\' : \'Incomplete\'}}\n          </button>\n          </td>\n        </tr>\n      </tbody>\n      <tfoot>\n        <tr ng-if="vm.filterLength > vm.itemsPerPage">\n          <td colspan="6" class="text-center">\n            <ul uib-pagination boundary-links="false" max-size="4" items-per-page="vm.itemsPerPage" total-items="vm.filterLength" ng-model="vm.currentPage" ng-change="vm.pageChanged()"></ul>\n          </td>\n        </tr>\n      </tfoot>\n    </table>\n  </div>\n  <div class="alert alert-warning text-center" ng-if="vm.actions.$resolved && !vm.actions.length">\n    No Orders yet, why don\'t you <a ui-sref="action.create({clientId: vm.clientid})">create one</a>?\n  </div>\n</section>\n'),$templateCache.put("modules/actions/client/views/view-action.html",'<section>\n  <div class="page-header">\n    <h1 ng-bind="vm.actionsToGo.name"></h1>\n  </div>\n  <div class="pull-right"\n       ng-show="vm.actionsToGo.isCurrentUserOwner">\n    <a class="btn btn-primary"\n       ui-sref="actionsToGos.edit({ actionsToGoId: vm.actionsToGo._id })">\n      <i class="glyphicon glyphicon-edit"></i>\n    </a>\n    <a class="btn btn-primary" ng-click="vm.remove()">\n      <i class="glyphicon glyphicon-trash"></i>\n    </a>\n  </div>\n  <small>\n    <em class="text-muted">\n      Posted on\n      <span ng-bind="vm.actionsToGo.created | date:\'mediumDate\'"></span>\n      by\n      <span ng-if="vm.actionsToGo.user"\n            ng-bind="vm.actionsToGo.user.displayName"></span>\n      <span ng-if="!vm.actionsToGo.user">Deleted User</span>\n    </em>\n  </small>\n  <p class="lead" ng-bind="vm.actionsToGo.content"></p>\n</section>\n'),$templateCache.put("modules/clients/client/views/form-client.html",'<section>\n  <div class="page-header">\n    <h1>{{vm.client._id ? \'Edit Client\' : \'New Client\'}}</h1>\n  </div>\n  <form name="vm.clientForm" class="form-horizontal" ng-submit="vm.save(vm.clientForm.$valid)" novalidate>\n    <div class="col-md-9">\n      <contact-form contact="vm.client.contact" error="vm.error" form="vm.clientForm"></contact-form>\n      <fieldset class="col-md-12">\n        <div class="form-group">\n          <label>Monthly Income Single</label>\n          <div>\n            <div class="radio-inline" ng-repeat="option in vm.options.monthlyIncomeSingle">\n              <input type="radio" ng-model="vm.client.monthlyIncomeSingle" ng-value="option"> {{option}}\n            </div>\n          </div>\n        </div>\n        <div class="form-group">\n          <label>Monthly Income Married</label>\n          <div>\n            <div class="radio-inline" ng-repeat="option in vm.options.monthlyIncomeMarried">\n              <input type="radio" ng-model="vm.client.monthlyIncomeMarried" ng-value="option"> {{option}}\n            </div>\n          </div>\n        </div>\n        <div class="form-group">\n          <label>Transportation</label>\n          <div>\n            <div class="radio-inline" ng-repeat="option in vm.options.transportation">\n              <input type="radio" ng-model="vm.client.transportation" ng-value="option"> {{option}}\n            </div>\n          </div>\n        </div>\n        <div class="form-group">\n          <label class="control-label" for="referralSource">Referral Source</label>\n          <textarea name="referralSource" type="text" ng-model="vm.client.referralSource" id="referralSource" class="form-control" placeholder="Referral Source"></textarea>\n        </div>\n        <div class="form-group">\n          <label class="control-label" for="comments">Comments</label>\n          <textarea name="comments" type="text" ng-model="vm.client.comments" id="comments" class="form-control" placeholder="Comments"></textarea>\n        </div>\n        <div class="form-group">\n          <button type="submit" class="btn btn-default">{{vm.client._id ? \'Update\' : \'Create\'}}</button>\n        </div>\n        <div ng-show="vm.error" class="text-danger">\n          <strong ng-bind="vm.error"></strong>\n        </div>\n      </fieldset>\n    </div>\n    <div class="col-md-3">\n      <div class="form-group">\n        <label class="control-label">Client Status</label>\n        <div class="">\n          <input name="active" type="radio" ng-model="vm.client.active" ng-value="true"> Active\n          <input name="active" type="radio" ng-model="vm.client.active" ng-value="false"> Inactive\n        </div>\n      </div>\n      <div class="form-group">\n        <label class="control-label">Grocery Call List</label>\n        <div class="">\n          <input name="groceryCallList" type="radio" ng-model="vm.client.groceryCallList" ng-value="true"> On\n          <input name="groceryCallList" type="radio" ng-model="vm.client.groceryCallList" ng-value="false"> Off\n        </div>\n      </div>\n    </div>\n  </form>\n</section>\n'),$templateCache.put("modules/clients/client/views/list-clients.html",'<section>\n  <div class="page-header">\n    <div class="row">\n      <div class="col-md-4">\n        <h1>Clients</h1>\n      </div>\n      <div class="col-md-4" style="margin-top: 2em">\n        <input class="form-control col-md-4" type="text" ng-model="vm.search" placeholder="Search" ng-change="vm.figureOutItemsToDisplay()" ng-disabled="false"/>\n      </div>\n      <div class="col-md-4 text-right" style="margin-top: 2em">\n        <button class="btn btn-default" ui-sref="clients.create" tooltip-placement="top" uib-tooltip="Add New Client"><i class="glyphicon glyphicon-plus" aria-label="Add New Client"></i></button>\n      </div>\n    </div>\n  </div>\n  <table class="table table-hover table-striped">\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Street Address</th>\n        <th>Phone</th>\n        <th class="text-right">Services</th>\n        <th class="text-right">Call List</th>\n        <th class="text-right">Active</th>\n        <th class="text-right">Actions</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr ng-repeat="client in vm.pagedItems" >\n        <td><a ui-sref="clients.view({ clientId: client._id })">{{client.contact.firstName}} {{client.contact.lastName}}</a></td>\n        <td class="list-group-item-text">\n          <div ng-bind="client.contact.address.street"></div>\n        </td>\n        <td class="list-group-item-text">\n          <div ng-bind="client.contact.phone1"></div>\n        </td>\n        <td class="text-right">\n          <button class="btn btn-default" ui-sref="services.view.requests.create({ clientId: client._id })" tooltip-placement="top" uib-tooltip="Care Consultation" ng-disabled="true">\n            <i class="glyphicon glyphicon-list-alt"></i>\n          </button>\n          <button class="btn btn-default" ui-sref="services.view.requests.create({ clientId: client._id })" tooltip-placement="top" uib-tooltip="Chore" ng-disabled="true">\n            <i class="glyphicon glyphicon-wrench"></i>\n          </button>\n          <button class="btn btn-default" ui-sref="services.view.requests.create({ clientId: client._id })" tooltip-placement="top" uib-tooltip="Homemaking" ng-disabled="true">\n            <i class="glyphicon glyphicon-home"></i>\n          </button>\n          <button class="btn btn-default" ui-sref="services.view.requests.create({ clientId: client._id })" tooltip-placement="top" uib-tooltip="Appointment" ng-disabled="true">\n            <i class="glyphicon glyphicon-heart"></i>\n          </button>\n          <button class="btn btn-default" ui-sref="services.view.requests.create({ clientId: client._id })" tooltip-placement="top" uib-tooltip="Errand" ng-disabled="true">\n            <i class="glyphicon glyphicon-barcode"></i>\n          </button>\n          <button class="btn btn-success" ng-click="vm.newOrder(client)" tooltip-placement="top" uib-tooltip="Groceries">\n            <i class="glyphicon glyphicon-shopping-cart" aria-label="Groceries"></i>\n          </button>\n        </td>\n        <td class="text-right">\n          <button class="btn" ng-click="vm.toggle(\'groceryCallList\', client)" ng-class="client.groceryCallList ? \'btn-success\' : \'btn-danger\'">\n            <i class="glyphicon" ng-class="client.groceryCallList ? \'glyphicon-ok\' : \'glyphicon-remove\'"></i>\n          </button>\n        </td>\n        <td class="text-right">\n          <button class="btn" ng-click="vm.toggle(\'active\', client)" ng-class="client.active ? \'btn-success\' : \'btn-danger\'">\n            <i class="glyphicon" ng-class="client.active ? \'glyphicon-ok\' : \'glyphicon-remove\'"></i>\n          </button>\n        </td>\n        <td class="text-right">\n          <button class="btn btn-default" ui-sref="clients.view({ clientId: client._id })" tooltip-placement="top" uib-tooltip="View"><i class="glyphicon glyphicon-eye-open" aria-label="View"></i></button>\n          <button class="btn btn-default" ui-sref="clients.edit({ clientId: client._id })" tooltip-placement="top" uib-tooltip="Edit"><i class="glyphicon glyphicon-edit" aria-label="Edit"></i></button>\n        </td>\n      </tr>\n    </tbody>\n    <tfoot>\n      <tr ng-if="vm.filterLength > vm.itemsPerPage">\n        <td colspan="6" class="text-center">\n          <ul uib-pagination boundary-links="false" max-size="4" items-per-page="vm.itemsPerPage" total-items="vm.filterLength" ng-model="vm.currentPage" ng-change="vm.pageChanged()"></ul>\n        </td>\n      </tr>\n    </tfoot>\n  </table>\n  <script>\n    $(function() {\n      $(\'[data-toggle="tooltip"]\').tooltip()\n    })\n  <\/script>\n  <div class="alert alert-warning text-center" ng-if="vm.clients.$resolved && !vm.clients.length">\n    No Clients yet, why don\'t you <a ui-sref="clients.create">create one</a>?\n  </div>\n  <div class="row col-md-12">\n    <button type="button" class="btn btn-primary"  onclick="window.history.back()">Back</button>\n  </div>\n</section>\n'),$templateCache.put("modules/clients/client/views/view-client.html",'<section>\n  <div class="page-header row">\n    <div class="col-md-8" style="margin-top: 2em">\n      <h1>\n        {{ vm.client.contact.firstName }} {{ vm.client.contact.middleInitial }} {{ vm.client.contact.lastName }}\n        \x3c!-- <div class="btn-group btn-toggle" ng-click="vm.toggle(\'active\')">\n          <button class="btn btn-md" ng-class="vm.client.active ? \'btn-primary\' : \'btn-default\'">Active</button>\n          <button class="btn btn-md" ng-class="vm.client.active ? \'btn-default\' : \'btn-primary\'">Inactive</button>\n        </div> --\x3e\n      </h1>\n    </div>\n    <div class="col-md-4 text-right" style="margin-top: 2em; padding-top: 2em;">\n      <button class="btn btn-default" ui-sref="clients.create" tooltip-placement="top" uib-tooltip="Add New Client"><i class="glyphicon glyphicon-plus" aria-label="Add New Client"></i></button>\n    </div>\n  </div>\n\n  <uib-tabset active="active">\n    <uib-tab index="0" heading="Client Info">\n      <div class="col-md-8">\n        <contact-view contact="vm.client.contact"></contact-view>\n        <p><strong>Monthly Income Single:</strong> {{vm.client.monthlyIncomeSingle}}</p>\n        <p><strong>Monthly Income Married:</strong> {{vm.client.monthlyIncomeMarried}}</p>\n        <p><strong>Transportation:</strong> {{vm.client.transportation}}</p>\n        <div><strong>Referral Source:</strong>\n          <p ng-bind="vm.client.referralSource"></p>\n        </div>\n        <div><strong>Comments:</strong>\n          <p ng-bind="vm.client.comments"></p>\n        </div>\n      </div>\n      <div class="col-md-4">\n        \x3c!-- <div class="pull-right client-services" ng-show="vm.client.canEdit"> --\x3e\n        <div class="pull-right client-services">\n          <h4>Client Services</h4>\n          <div class="btn-group-vertical" role="group" aria-label="Client Services">\n            <button class="btn btn-primary" ng-click="vm.newOrder()">\n              <i class="glyphicon glyphicon-shopping-cart"></i> Groceries\n            </button>\n            <button class="btn btn-primary" ui-sref="services.view.requests.create({ clientId: vm.client._id })" ng-disabled="true">\n              <i class="glyphicon glyphicon-list-alt"></i> Care Consultation\n            </button>\n            <button class="btn btn-primary" ui-sref="services.view.requests.create({ clientId: vm.client._id })" ng-disabled="true">\n              <i class="glyphicon glyphicon-wrench"></i> Chore\n            </button>\n            <button class="btn btn-primary" ui-sref="services.view.requests.create({ clientId: vm.client._id })" ng-disabled="true">\n              <i class="glyphicon glyphicon-home"></i> Homemaking\n            </button>\n            <button class="btn btn-primary" ui-sref="services.view.requests.create({ clientId: vm.client._id })" ng-disabled="true">\n              <i class="glyphicon glyphicon-heart"></i> Appointment\n            </button>\n            <button class="btn btn-primary" ui-sref="services.view.requests.create({ clientId: vm.client._id })" ng-disabled="true">\n              <i class="glyphicon glyphicon-barcode"></i> Errand\n            </button>\n          </div>\n          <div class="btn-group-vertical" role="group" aria-label="Client Services Support Features" style="vertical-align: top;">\n            <button class="btn" ng-click="vm.toggle(\'active\')" ng-class="vm.client.active ? \'btn-success\' : \'btn-danger\'">\n              {{vm.client.active ? \'Active\' : \'Inactive\'}}\n            </button>\n            <button class="btn" ng-click="vm.toggle(\'groceryCallList\')" ng-class="vm.client.groceryCallList ? \'btn-success\' : \'btn-danger\'" ng-active=""> {{vm.client.groceryCallList ? \'On\' : \'Off\'}} Call List <i class="glyphicon glyphicon-earphone"></i></button>\n          </div>\n        </div>\n      </div>\n    </uib-tab>\n    <uib-tab index="1" heading="Groceries">\n      <list-orders clientId="vm.client._id"></list-orders>\n    </uib-tab>\n    \x3c!-- <uib-tab index="2" heading="Appointments" disable="true">\n      Coming Soon, but not soon enough!\n    </uib-tab>\n    <uib-tab index="3" heading="Chores" disable="true">\n      Coming Soon, but not soon enough!\n    </uib-tab> --\x3e\n    <uib-tab index="2" select="alertMe()">\n      <uib-tab-heading>\n        <i class="glyphicon glyphicon-bell"></i> Actions\n      </uib-tab-heading>\n      <list-actions clientId="vm.client._id"></list-actions>\n    </uib-tab>\n    <uib-tab index="3" classes="right-tab" ui-sref="clients.edit({ clientId: vm.client._id })">\n      <uib-tab-heading>\n        <i class="glyphicon glyphicon-edit"></i> Edit Client\n      </uib-tab-heading>\n    </uib-tab>\n    <uib-tab index="4" classes="right-tab" select="vm.remove()">\n      <uib-tab-heading>\n        <i class="glyphicon glyphicon-trash"></i> Delete Client\n      </uib-tab-heading>\n    </uib-tab>\n    <uib-tab index="5" classes="right-tab" onclick="window.history.back()">\n      <uib-tab-heading>\n        <i class="glyphicon glyphicon-share-alt icon-flipped"></i> Back\n      </uib-tab-heading>\n    </uib-tab>\n  </uib-tabset>\n</section>'),$templateCache.put("modules/contacts/client/views/form-contact.html",'<fieldset class="col-md-12 row">\n  <div class="col-md-3">\n    <div class="form-group" show-errors>\n      <label for="firstName">First Name</label>\n      <input type="text" id="firstName" name="firstName" class="form-control" ng-model="vm.contact.firstName" placeholder="First Name" autofocus required>\n      <div ng-messages="vm.form.firstName.$error" role="alert">\n        <p class="help-block error-text" ng-message="required">First name is required.</p>\n      </div>\n    </div>\n  </div>\n  <div class="col-md-3">\n    <div class="form-group" show-errors>\n      <label for="lastName">Last Name</label>\n      <input type="text" id="lastName" name="lastName" class="form-control" ng-model="vm.contact.lastName" placeholder="Last Name" required>\n      <div ng-messages="vm.form.lastName.$error" role="alert">\n        <p class="help-block error-text" ng-message="required">Last name is required.</p>\n      </div>\n    </div>\n  </div>\n  <div class="col-md-1">\n    <div class="form-group">\n      <label for="middleInitial">M.I.</label>\n      <input type="text" id="middleInitial" name="middleInitial" class="form-control" ng-model="vm.contact.middleInitial" maxlength="1" autofocus style="max-width: 35px">\n    </div>\n  </div>\n</fieldset>\n<address address="vm.contact.address" error="vm.error"></address>\n<fieldset class="col-md-12 row">\n  <div class="col-md-3">\n    <div class="form-group">\n      <label for="phone">Primary Phone</label>\n      <input type="text" id="phone" name="phone" class="form-control" ng-model="vm.contact.phone1" placeholder="(555) 555-5555" ui-us-phone-number maxlength="14">\n    </div>\n  </div>\n  <div class="col-md-3">\n    <div class="form-group">\n      <label for="phone">Secondary Phone</label>\n      <input type="text" id="phone" name="phone" class="form-control" ng-model="vm.contact.phone2" placeholder="(555) 555-5555" ui-us-phone-number maxlength="14">\n    </div>\n  </div>\n  <div class="col-md-3">\n    <div class="form-group">\n      <label for="phone">Tertiary Phone</label>\n      <input type="text" id="phone" name="phone" class="form-control" ng-model="vm.contact.phone3" placeholder="(555) 555-5555" ui-us-phone-number maxlength="14">\n    </div>\n  </div>\n</fieldset>\n<fieldset class="col-md-12">\n  <div class="form-group" show-errors>\n    <label for="email">Email</label>\n    <input type="email" id="email" name="email" class="form-control" ng-model="vm.contact.email" placeholder="Email" lowercase>\n    <div ng-messages="vm.form.email.$error" role="alert">\n      <p class="help-block error-text" ng-message="required">Email address is required.</p>\n      <p class="help-block error-text" ng-message="email">Email address is invalid.</p>\n    </div>\n  </div>\n</fieldset>\n<fieldset class="col-md-12 row">\n  <div class="col-md-2">\n    <div class="form-group" show-errors>\n      <label for="birthday">Birthday</label>\n      <p class="input-group">\n        <input name="birthday" type="text" class="form-control" uib-datepicker-popup="M/dd/yyyy" ng-model="vm.contact.birthday" is-open="popup1.opened" datepicker-options="dateOptions" close-text="Close" />\n        <span class="input-group-btn">\n        <button type="button" class="btn btn-default" ng-click="open1()"><i class="glyphicon glyphicon-calendar"></i></button>\n      </span>\n      </p>\n      <div ng-messages="vm.form.birthday.$error" role="alert">\n        <p class="help-block error-text" ng-message="birthday">Birthday is invalid.</p>\n        <p class="help-block error-text" ng-message="date">Birthday must be in the correct format. (ie. 1/1/2000)</p>\n      </div>\n    </div>\n  </div>\n  <div class="col-md-10">\n    <div class="form-group">\n      <label>Gender</label>\n      <div>\n        <div class="radio-inline" ng-repeat="option in vm.options.gender">\n          <input type="radio" ng-model="vm.contact.gender" ng-value="option"> {{option}}\n        </div>\n      </div>\n    </div>\n  </div>\n</fieldset>\n<fieldset class="col-md-12">\n  <div class="form-group">\n    <label>Veteran</label>\n    <div>\n      <input type="checkbox" ng-model="vm.contact.veteran">\n    </div>\n  </div>\n</fieldset>\n<fieldset class="col-md-12">\n  <div class="form-group">\n    <label>Ethnicity</label>\n    <div>\n      <div class="radio-inline" ng-repeat="option in vm.options.ethnicity">\n        <input type="radio" ng-model="vm.contact.ethnicity" ng-value="option"> {{option}}\n      </div>\n    </div>\n  </div>\n</fieldset>\n<fieldset class="col-md-12">\n  <div class="form-group">\n    <label>Race</label>\n    <div>\n      <div class="radio-inline" ng-repeat="option in vm.options.race">\n        <input type="radio" ng-model="vm.contact.race" ng-value="option"> {{option}}\n      </div>\n    </div>\n  </div>\n</fieldset>\n<fieldset class="col-md-12">\n  <div class="form-group">\n    <label>Marital Status</label>\n    <div>\n      <div class="radio-inline" ng-repeat="option in vm.options.maritalStatus">\n        <input type="radio" ng-model="vm.contact.maritalStatus" ng-value="option"> {{option}}\n      </div>\n    </div>\n  </div>\n</fieldset>\n<fieldset class="col-md-12">\n  <div class="form-group">\n    <label>Education</label>\n    <div>\n      <input type="text" id="Education" name="Education" class="form-control" ng-model="vm.contact.education" placeholder="Education">\n    </div>\n  </div>\n</fieldset>\n<fieldset class="col-md-12 row">\n  <div class="col-md-2">\n    <div class="form-group">\n      <label>Has Disability</label>\n      <div>\n        <input type="checkbox" ng-model="vm.contact.hasDisability">\n      </div>\n    </div>\n  </div>\n  <div class="col-md-10">\n    <div class="form-group">\n      <label>Disability</label>\n      <div>\n        <input type="text" id="Disability" name="Disability" class="form-control" ng-model="vm.contact.disability" placeholder="Disability">\n      </div>\n    </div>\n  </div>\n</fieldset>\n<fieldset class="col-md-12">\n  <div class="form-group">\n    <label>Allergies</label>\n    <div>\n      <input type="text" id="allergies" name="Allergies" class="form-control" ng-model="vm.contact.allergies" placeholder="Allergies">\n    </div>\n  </div>\n</fieldset>\n<div ng-show="vm.error" class="text-danger">\n  <strong ng-bind="vm.error"></strong>\n</div>\n'),$templateCache.put("modules/contacts/client/views/view-contact.html",'<h4>Address</h4>\n<p>\n  <div ng-bind="vm.contact.address.street"></div>\n  <div ng-bind="vm.contact.address.additional" ng-show="vm.contact.address.additional"></div>\n  <span ng-bind="vm.contact.address.city"></span>,\n  <span ng-bind="vm.contact.address.state"></span>\n  <span ng-bind="vm.contact.address.zipcode"></span>\n</p>\n<p ng-show="vm.contact.phone1"><strong>Primary Phone:</strong> {{vm.contact.phone1}}</p>\n<p ng-show="vm.contact.phone2"><strong>Secondary Phone:</strong> {{vm.contact.phone2}}</p>\n<p ng-show="vm.contact.phone3"><strong>Tertiary Phone:</strong> {{vm.contact.phone3}}</p>\n<p><strong>Birthday:</strong> {{vm.contact.birthday | date: \'mediumDate\' }}</p>\n<p><strong>Gender:</strong> {{vm.contact.gender}}</p>\n<p><strong>Veteran:</strong> {{vm.contact.veteran}}</p>\n<p><strong>Ethnicity:</strong> {{vm.contact.veteran}}</p>\n<p><strong>Race:</strong> {{vm.contact.race}}</p>\n<p><strong>Marital Status:</strong> {{vm.contact.maritalStatus}}</p>\n<p><strong>Education:</strong> {{vm.contact.education}}</p>\n<p><strong>Has Disability:</strong> {{vm.contact.veteran}}</p>\n<p><strong>Disability:</strong> {{vm.contact.disability}}</p>\n<p><strong>Allergies:</strong> {{vm.contact.allergies}}</p>\n'),$templateCache.put("modules/core/client/errors/400.html",'<div class="page-header">\n  <h1>Bad Request</h1>\n</div>\n<div class="alert alert-danger" role="alert">\n  <span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>\n  <span class="sr-only">Error:</span>\n  <span ng-if="vm.errorMessage" ng-bind="vm.errorMessage"></span>\n  <span ng-if="!vm.errorMessage">You made a bad request</span>\n</div>\n'),$templateCache.put("modules/core/client/errors/403.html",'<div class="page-header">\n  <h1>Forbidden</h1>\n</div>\n<div class="alert alert-danger" role="alert">\n  <span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>\n  <span class="sr-only">Error:</span>\n  You are not authorized to access this resource\n</div>\n'),$templateCache.put("modules/core/client/errors/404.html",'<div class="page-header">\n  <h1>Page Not Found</h1>\n</div>\n<div class="alert alert-danger" role="alert">\n  <span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>\n  <span ng-if="vm.errorMessage" ng-bind="vm.errorMessage"></span>\n  <span ng-if="!vm.errorMessage">Page Not Found</span>\n</div>\n'),
$templateCache.put("modules/core/client/pages/dashboard.html",'<section>\n  <div class="row page-header">\n    <div class="col-md-3 col-sm-3 col-xs-12">\n      <img width="200px" alt="Age Well" class="img-responsive text-center" src="/modules/core/client/assets/images/brand/logo.png" />\n    </div>\n    <div class="col-md-9 col-sm-9 col-xs-12 text-right">\n      <div class="btn-group" role="group" aria-label="..." style="margin-top: 30px;" ng-show="vm.isAdmin">\n        <button type="button" class="btn btn-success" ui-sref="clients.create()">Add Client</button>\n      </div>\n    </div>\n  </div>\n  <div class="row well">\n    <div class="col-lg-12 col-md-12 col-sm-12">\n      <h3>Groceries To Go</h3>\n    </div>\n    <div class="col-lg-6 col-md-6 col-sm-12">\n      <div class="panel panel-primary">\n        <div class="panel-heading">Call List</div>\n        <div class="panel-body">\n\n          \x3c!-- Tab panes --\x3e\n          <table class="table table-hover table-striped">\n            <thead>\n              <tr>\n                <th style="width:35%">Client</th>\n                <th style="width:35%">Phone #</th>\n                \x3c!-- <th>Last Order</th> --\x3e\n                <th style="width:30%">Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td colspan="4">\n                  <input class="form-control col-md-4" type="text" ng-model="vm.callListFilter" placeholder="Search" ng-change="vm.figureOutItemsToDisplay(\'callList\')" />\n                  <div class="text-center">\n                    <em><small>Searches all client information, not just names.</small></em>\n                  </div>\n                </td>\n              </tr>\n              <tr ng-repeat="client in vm.pagedcallList" ng-hide="vm.pagedcallList.length === 0">\n                <td>\n                  <a ui-sref="clients.view({clientId: client._id })">{{ client.contact.firstName }} {{ client.contact.lastName }}</a>\n                </td>\n                <td>{{ client.contact.phone1 }}</td>\n                \x3c!-- <td>{{ client.contact.orderID }}</td> --\x3e\n                <td class="text-right">\n                  <div class="btn-group  btn-group-sm">\n                    <button class="btn btn-default" ui-sref="clients.view({ clientId: client._id })" tooltip-placement="top" uib-tooltip="View Client"><i class="glyphicon glyphicon-eye-open" aria-label=""></i></button>\n                    <button class="btn btn-default" ui-sref="order.create({ clientId: client._id })" tooltip-placement="top" uib-tooltip="New Order"><i class="glyphicon glyphicon-shopping-cart" aria-label="New Order"></i></button>\n                    <button class="btn btn-default" ng-click="vm.skip($index, client)" tooltip-placement="top" uib-tooltip="Skip Order"><i class="glyphicon glyphicon-share-alt" aria-label="Skip Order"></i></button>\n                  </div>\n                </td>\n              </tr>\n              <tr ng-if="vm.callList.$resolved && !vm.callList.length">\n                <td colspan="3">\n                  <div class="alert alert-warning text-center">\n                    No more Clients to call for this delivery.\n                  </div>\n                </td>\n              </tr>\n            </tbody>\n            <tfoot>\n              <tr ng-if="vm.filtercallListLength > vm.itemsPerPage">\n                <td colspan="4" class="text-center">\n                  <ul uib-pagination boundary-links="false" max-size="4" items-per-page="vm.callListPerPage" total-items="vm.filtercallListLength" ng-model="vm.callListPage" ng-change="vm.pageChanged(\'callList\')"></ul>\n                </td>\n              </tr>\n              <tr>\n                <td colspan="1">\n                  <strong>Order by:</strong><br/>\n                  {{ vm.dates.orderBy | date:\'h:mm a EEE, M/d/yy\'}}\n                </td>\n                <td colspan="2" class="text-right">\n                  <strong>Delivered on:</strong><br/>\n                  {{ vm.dates.delivery | date:\'EEE, M/d/yy\'}}\n                </td>\n              </tr>\n            </tfoot>\n          </table>\n        </div>\n      </div>\n    </div>\n    <div class="col-lg-6 col-md-6 col-sm-12">\n      <div class="panel panel-primary">\n        <div class="panel-heading">Orders</div>\n        <div class="panel-body">\n\n          <ul class="nav nav-tabs" role="tablist">\n            <li role="presentation" ng-class="{\'active\': vm.ordersFilter === \'pending\'}">\n              <a ng-click="vm.setFilter(\'pending\')" aria-controls="home" role="tab" data-toggle="tab">Ordered</a>\n            </li>\n            <li role="presentation" ng-class="{\'active\': vm.ordersFilter === \'ordered\'}">\n              <a ng-click="vm.setFilter(\'ordered\')" aria-controls="profile" role="tab" data-toggle="tab">Assigned</a>\n            </li>\n            <li role="presentation" ng-class="{\'active\': vm.ordersFilter === \'purchased\'}">\n              <a ng-click="vm.setFilter(\'purchased\')" aria-controls="messages" role="tab" data-toggle="tab">Purchased</a>\n            </li>\n            <li role="presentation" ng-class="{\'active\': vm.ordersFilter === \'delivered\'}">\n              <a ng-click="vm.setFilter(\'delivered\')" aria-controls="messages" role="tab" data-toggle="tab">Delivered</a>\n            </li>\n          </ul>\n\n          \x3c!-- Tab panes --\x3e\n          <div class="tab-content">\n            <div role="tabpanel" class="tab-pane active" id="home">\n\n              <table class="table table-hover table-striped">\n                <thead>\n                  <tr>\n                    <th>Order #</th>\n                    <th>Client</th>\n                    <th>Volunteer</th>\n                    <th></th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr ng-repeat="order in vm.pagedorders">\n                    <td><a ui-sref="order.view({ clientId: order.clientId, orderId: order._id })">{{ order.requestNumber }}</a></td>\n                    <td><a ui-sref="clients.view({ clientId: order.clientId })">{{ order.contact.firstName }} {{ order.contact.lastName }}</a></td>\n                    <td><a ui-sref="volunteers.view({ volunteerId: order.volunteerId })">{{ order.assignedTo.firstName }} {{ order.assignedTo.lastName }}</a></td>\n                    <td class="text-right">\n                      <div class="btn-group  btn-group-sm">\n                        <button class="btn btn-default" ng-click="vm.assign(order)" tooltip-placement="top" uib-tooltip="Assign Order" ng-hide="order.status !== \'pending\'"><i class="glyphicon glyphicon-user" aria-label="Assign Order"></i></button>\n                        <button class="btn btn-default" ui-sref="order.view({ clientId: order.clientId, orderId: order._id })" tooltip-placement="top" uib-tooltip="View"><i class="glyphicon glyphicon-eye-open" aria-label="View"></i></button>\n                        <button class="btn btn-default" ui-sref="order.edit({ clientId: order.clientId, orderId: order._id })" tooltip-placement="top" uib-tooltip="Edit"><i class="glyphicon glyphicon-edit" aria-label="Edit"></i></button>\n                      </div>\n                    </td>\n                  </tr>\n                </tbody>\n                \x3c!-- <tfoot>\n                  <tr>\n                    <td colspan="4">Dates</td>\n                  </tr>\n                </tfoot> --\x3e\n              </table>\n              <div class="text-center" ng-hide="vm.filterordersLength === 0">\n                <ul uib-pagination boundary-links="false" max-size="5" items-per-page="vm.ordersPerPage" total-items="vm.filterordersLength" ng-model="vm.ordersPage" ng-change="vm.pageChanged(\'orders\')"></ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class="row well well-sm" ng-hide="vm.pagedactions.length === 0">\n    <h4 class="col-sm-12">Important Actions <span class="badge">{{ vm.actions.length }}</span></h4>\n    <div class="row col-sm-12">\n      <div ng-repeat="action in vm.pagedactions" class="col-xs-4">\n        <div class="panel panel-primary">\n          <div class="panel-heading"><strong>{{ action.type }}</strong> <strong style="float: right">{{ action.created | date:short }}</strong></div>\n          <div class="panel-body">\n            <div>\n              <strong><a ui-sref="clients.view({ clientId: action.clientId })">{{ action.contact.firstName }} {{ action.contact.lastName }}</a></strong>\n            </div>\n            <p>{{ action.notes }}</p>\n            <div class="row">\n              <div class="col-sm-6">\n              </div>\n              <div class="col-sm-6 text-right">\n                <button class="btn " ng-class="action.completed ? \'btn-success\' : \'btn-default\'" ng-click="vm.complete(action)">\n              <i class="glyphicon" ng-class="action.completed ? \'glyphicon-check\' : \'glyphicon-unchecked\'"></i> {{ action.completed ? \'Complete\' : \'Incomplete\'}}\n              </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class="text-center" ng-hide="vm.filteractionsLength < 4">\n      <ul uib-pagination boundary-links="false" max-size="4" items-per-page="vm.actionsPerPage" total-items="vm.filteractionsLength" ng-model="vm.actionsPage" ng-change="vm.pageChanged(\'actions\')"></ul>\n    </div>\n  </div>\n</section>\n'),$templateCache.put("modules/core/client/pages/home.html",'<section>\n  <div class="row jumbotron page-header">\n    <div class="col-md-6 col-md-offset-3 col-sm-6 col-sm-offset-3 col-xs-12 text-center">\n      <img alt="Age Well" class="img-responsive text-center" src="/modules/core/client/assets/images/brand/logo.png" />\n    </div>\n    <br>\n    <div class="col-md-12">\n      <p class="lead" ng-show="!vm.authentication.user">\n        A managment solution for organizations that connect older adults and caregivers with services that support healthy aging and independence.\n      </p>\n      <p class="text-center" ng-show="vm.authentication.user && !vm.authentication.user.active">We are in the process of reviewing your application. Once we have completed this process, we will active your account and send you a email notifying you of the account activation.</p>\n      </div>\n    </div>\n  </div>\n  <div class="row text-center" ng-show="!vm.authentication.user">\n    <div class="col-md-6 col-sm-6 col-xs-12">\n      <h3>Become a Volunteer</h3>\n      <p class="text-left">When you serve with Age Well Arrowhead, you’ll learn that even the smallest task can make a big difference in someone else’s life. Volunteers often complete tasks like picking up groceries, dusting a ceiling fan, shoveling snow, or other light housekeeping duties.</p><br />\n      <button type="button" class="btn btn-success" ui-sref="authentication.signup({type: \'volunteer\'})">Volunteer Today!</button>\n    </div>\n    <div class="col-md-6 col-sm-6 col-xs-12">\n      <h3>Become a Client</h3>\n      <p class="text-left">Multiple studies have shown that aging in a home environment is good for the head and the heart, provided you have people to support and care for you. Our qualified team of consultants and volunteers work to ensure you have a loving network of support so that you can live comfortably in your own home.</p>\n      <button type="button" class="btn btn-success">Call (218) 623-7800</button>\n    </div>\n  </div>\n</section>\n'),$templateCache.put("modules/groceries/client/views/assign.html",'<section>\n  <div class="page-header">\n    <h1>Grocery Checkout</h1>\n  </div>\n  <div class="list-group table-responsive">\n    <table class="table table-condensed table-hover table-striped" ng-show="vm.orders.length !== 0">\n      <thead>\n        <tr>\n          <th><span class="hidden-xs">Order </span>#</th>\n          <th>Client</th>\n          <th class="hidden-xs"><span >Delivery Date</span></th>\n          <th><span class="hidden-xs"># of </span>Items</th>\n          <th><span class="hidden-xs">Actions</span></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr ng-repeat="order in vm.orders" ng-class="order.status === \'purchased\' ? \'success\' : \'\'">\n          <td><a ui-sref="order.view({ clientId: order.clientId, orderId: order._id })">{{ order.requestNumber }}</a></td>\n          <td><span class="hidden-xs">{{ order.contact.firstName }} </span>{{ order.contact.lastName }}</td>\n          <td class="hidden-xs">{{ order.date | date:\'MM/dd/yyyy\' }}</td>\n          <td>{{ order.items.length }}</td>\n          <td class="text-right">\n            <button class="btn btn-default" ng-click="vm.assign(order)"><i class="glyphicon glyphicon-user" aria-label="Assign"></i> <span class="hidden-xs">Assign</span></button>\n            <button class="btn btn-sm btn-default" ui-sref="order.view({ clientId: order.clientId, orderId: order._id })"><i class="glyphicon glyphicon-eye-open" aria-label="View"></i></button>\n          </td>\n        </tr>\n      </tbody>\n      <tfoot ng-show="vm.complete">\n        <tr>\n          <td colspan="6" class="text-right">\n            <button class="btn btn-success" ui-sref="groceries.list">Pick List</button>\n          </td>\n        </tr>\n      </tfoot>\n    </table>\n  </div>\n  <div class="alert alert-warning text-center" ng-if="vm.orders.$resolved && !vm.orders.length">\n    No Orders ready to checkout!\n  </div>\n  <div class="row col-md-12">\n    <button type="button" class="btn btn-primary"  onclick="window.history.back()">Back</button>\n  </div>\n'),$templateCache.put("modules/groceries/client/views/checkout.html",'<section>\n  <div class="page-header">\n    <h1>Grocery Checkout</h1>\n  </div>\n  <div class="list-group table-responsive">\n    <table class="table table-condensed table-hover table-striped" ng-show="vm.orders.length !== 0">\n      <thead>\n        <tr>\n          <th><span class="hidden-xs">Order </span>#</th>\n          <th>Client</th>\n          <th class="hidden-xs"><span >Delivery Date</span></th>\n          <th><span class="hidden-xs"># of </span>Items</th>\n          <th>Total</th>\n          <th><span class="hidden-xs">Actions</span></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr ng-repeat="order in vm.orders" ng-class="order.status === \'purchased\' ? \'success\' : \'\'">\n          <td><a ui-sref="order.view({ clientId: order.clientId, orderId: order._id })">{{ order.requestNumber }}</a></td>\n          <td><span class="hidden-xs">{{ order.contact.firstName }} </span>{{ order.contact.lastName }}</td>\n          <td class="hidden-xs">{{ order.date | date:\'MM/dd/yyyy\' }}</td>\n          <td>{{ order.items.length }}</td>\n          <td>{{ order.recieptTotal === 0 ? \'-\' : (order.recieptTotal | currency) }}</td>\n          <td class="text-right">\n            <button class="btn btn-default" ng-click="vm.checkout(order)"><span class="hidden-xs">{{ order.status === \'purchased\' ? \'Update \' : \'Checkout \' }}</span><i class="glyphicon"  ng-class="order.status === \'purchased\' ? \'glyphicon-pencil\' : \'glyphicon-barcode\'" aria-label="Checkout"></i></button>\n            <button class="btn btn-sm btn-default" ui-sref="order.view({ clientId: order.clientId, orderId: order._id })"><i class="glyphicon glyphicon-eye-open" aria-label="View"></i></button>\n          </td>\n        </tr>\n      </tbody>\n      <tfoot ng-show="vm.complete">\n        <tr>\n          <td colspan="6" class="text-right">\n            <button class="btn btn-success" ui-sref="groceries.delivery">Delivery</button>\n          </td>\n        </tr>\n      </tfoot>\n    </table>\n  </div>\n  <div class="alert alert-warning text-center" ng-if="vm.orders.$resolved && !vm.orders.length">\n    No Orders ready to checkout!\n  </div>\n  <div class="row col-md-12">\n    <button type="button" class="btn btn-primary"  onclick="window.history.back()">Back</button>\n  </div>\n'),$templateCache.put("modules/groceries/client/views/delivery.html",'<section>\n  <div class="page-header">\n    <h1>Grocery Deliveries</h1>\n  </div>\n  <div class="list-group table-responsive">\n    <table class="table table-condensed table-hover table-striped"  ng-hide="vm.complete">\n      <thead>\n        <tr>\n          <th>Order #</th>\n          <th>Client</th>\n          <th>Phone</th>\n          <th>Address</th>\n          <th>Total</th>\n          <th class="text-right"><span class="hidden-xs">Actions</span></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr ng-repeat="order in vm.orders" ng-class="order.status === \'delivered\' ? \'success\' : \'\'">\n          <td>\n            <a ui-sref="order.view({ clientId: order.clientId, orderId: order._id })">{{ order.requestNumber }}</a>\n          </td>\n          <td>{{ order.contact.firstName }} {{ order.contact.lastName }}</td>\n          <td>\n            <div class="hidden-xs">\n              {{ order.contact.phone1 }}\n            </div>\n            <a class="btn btn-default visible-xs" href="tel://{{ order.contact.phone1 }}" target="_blank"><i class="glyphicon glyphicon-earphone" aria-label="Phone"></i></a>\n          </td>\n          <td>{{ order.contact.address.street }} {{ order.contact.address.additional }}</td>\n          <td>{{ order.total | currency }}</td>\n          <td class="text-right">\n\n            \x3c!-- Directions Links --\x3e\n            <button class="btn btn-default hidden-xs" ui-sref="order.edit({ clientId: order.clientId, orderId: order._id })" tooltip-placement="top" uib-tooltip="Edit"><i class="glyphicon glyphicon-edit" aria-label="Edit"></i></button>\n            <a class="btn btn-default" href="{{\n            vm.isMobile ? \'maps\' : \'https\' }}://maps.google.com/?q={{ vm.getAddress(order.contact.address) }}" target="_blank"><i class="glyphicon glyphicon-road" aria-label="Directions"></i></a>\n            <a class="btn btn-default" ng-click="order.status !== \'delivered\' && vm.deliver(order)" target="_blank" ng-disabled="order.status === \'delivered\'"><i class="glyphicon glyphicon-home" aria-label="Deliver"></i></a>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n  <div class="alert alert-warning text-center" ng-if="(vm.orders.$resolved && !vm.orders.length) || vm.complete">\n    No Orders are awaiting delivery. <a ui-sref="home">Click here</a> to return to the dashboard.\n  </div>\n  <div class="row col-md-12">\n    <button type="button" class="btn btn-primary"  onclick="window.history.back()">Back</button>\n  </div>\n'),$templateCache.put("modules/groceries/client/views/form-items.html",'<fieldset>\n  <table class="table table-bordered table-hover table-condensed" style="margin: 0; border-bottom: none;">\n    <tr style="font-weight: bold">\n      <td style="width:30%">Item</td>\n      <td style="width:30%">Category</td>\n      <td style="width:10%">Qty</td>\n      <td style="width:10%">Unit</td>\n      <td style="width:20%">Actions</td>\n    </tr>\n    <tr ng-repeat="item in vm.items">\n      <td>\n        \x3c!-- editable username (text with validation) --\x3e\n        <div editable-text="item.name" e-name="name" e-required e-form="rowform">{{ item.name || \'\' }}</div>\n      </td>\n      <td>\n        \x3c!-- editable status (select-category) --\x3e\n        <div editable-select="item.category" e-name="category" e-required e-form="rowform" e-ng-options="c as c for c in vm.options.category">\n          {{ item.category }}\n        </div>\n      </td>\n      <td>\n        \x3c!-- editable status (number-local) --\x3e\n        <div editable-number="item.qty" e-name="qty" e-form="rowform" e-required e-name="qty" e-style="max-width: 60px;">\n          {{ item.qty || \'0\' }}\n        </div>\n      </td>\n      <td>\n        \x3c!-- <div editable-number="item.unit" e-name="unit" e-form="rowform" e-name="unit" e-style="max-width: 60px;">\n          {{ item.unit }}\n        </div> --\x3e\n        <div editable-select="item.unit" e-name="unit" e-required e-form="rowform" e-ng-options="u as u for u in vm.options.unit">\n          {{ item.unit }}\n        </div>\n      </td>\n      <td style="white-space: nowrap">\n        \x3c!-- form --\x3e\n        <form editable-form name="rowform" onbeforesave="saveItem($data, item.id)" onaftersave="vm.updateOrder()" ng-show="rowform.$visible" class="form-buttons form-inline" shown="vm.inserted === item">\n          <button type="submit" ng-disabled="rowform.$waiting" class="btn btn-primary" || rowform.$invalid>save</button>\n          <button type="button" ng-disabled="rowform.$waiting" ng-click="rowform.$cancel()" class="btn btn-default">cancel</button>\n          \x3c!-- {{ rowform | json }} --\x3e\n        </form>\n        <div class="buttons" ng-show="!rowform.$visible">\n          <button type="button" class="btn btn-primary" ng-click="rowform.$show()">edit</button>\n          <button type="button" class="btn btn-danger" ng-click="vm.removeItem($index)">del</button>\n        </div>\n      </td>\n    </tr>\n    <tr>\n      <td colspan="5" style="border-bottom: none;">\n        <button type="button" class="btn btn-default" ng-click="vm.addItem()">Add Item</button>\n      </td>\n    </tr>\n  </table>\n</fieldset>\n'),$templateCache.put("modules/groceries/client/views/form-order.html",'<section>\n  <div class="page-header">\n    <h1>{{vm.order._id ? \'Edit Groceries Order\' : \'New Groceries Order\'}}</h1>\n  </div>\n  <div class="col-md-8">\n    <div class="alert alert-info" role="alert">\n      You order must be submitted by <strong>{{vm.dates.orderBy | date:\'EEEE, MMMM d\'}}</strong> to be delivered on <strong>{{vm.dates.delivery | date:\'EEEE, MMMM d\'}}</strong>.\n    </div>\n    <div class="row">\n      <div class="col-md-4"><strong>Order by Date:</strong> {{ vm.dates.now | date:\'MM/dd/yyyy\'}}</div>\n      <div class="col-md-4"></div>\n      <div class="col-md-4"><strong>To be Delivered:</strong> {{vm.dates.delivery | date:\'MM/dd/yyyy\'}}</div>\n    </div>\n    <items-form items="vm.order.items" error="vm.error" form="vm.orderForm"></items-form>\n    <table class="table table-bordered table-hover table-condensed">\n      <tr style="font-weight: bold">\n        <td class="text-right" style="width:75%">\n          Reciept Total:\n        </td>\n        <td style="width:25%; padding: 0" class="reciept-total">\n          <input type="text" id="price" name="price" class="form-control" ng-model="vm.order.recieptTotal" placeholder="0.00" ng-change="vm.update()" />\n        </td>\n      </tr>\n      <tr style="font-weight: bold">\n        <td class="text-right" style="width:75%">\n          Delivery Cost:\n        </td>\n        <td style="width:25%">\n          {{ vm.order.deliveryCost | currency }}\n        </td>\n      </tr>\n      <tr style="font-weight: bold">\n        <td class="text-right" style="width:75%">\n          Total:\n        </td>\n        <td style="width:25%">\n          {{ vm.order.total | currency }}\n        </td>\n      </tr>\n    </table>\n    <div ng-show="vm.order._id" class="form-group">\n      <label>Status</label>\n      <select name="state" ng-model="vm.order.status" class="form-control">\n        <option ng-repeat="option in vm.options.status" value="{{option}}">{{option}}</option>\n      </select>\n    </div>\n    <div class="form-group">\n      <label>Assign Volunteer</label>\n      <select name="state" ng-model="vm.order.assignedTo" class="form-control">\n        <option ng-repeat="option in vm.volunteers" value="{{option._id}}">{{option.lastName}}, {{option.firstName}}</option>\n      </select>\n    </div>\n    <form name="vm.orderForm" ng-submit="vm.save(vm.orderForm.$valid)" novalidate>\n      <fieldset>\n        <div class="form-group">\n          <label class="control-label" for="notes">Notes</label>\n          <textarea name="notes" type="text" ng-model="vm.order.notes" id="notes" class="form-control" placeholder="Notes"></textarea>\n        </div>\n      </fieldset>\n      <fieldset>\n        <div>\n          <button type="submit" class="btn btn-default">{{vm.order._id ? \'Update\' : \'Create\'}}</button>\n        </div>\n        <div ng-show="vm.error" class="text-danger">\n          <strong ng-bind="vm.error"></strong>\n        </div>\n      </fieldset>\n    </form>\n  </div>\n  <div class="col-md-4">\n    <div ng-show="vm.lastOrder !== \'\'">\n      <button type="submit" class="btn btn-default" ng-click="vm.copyItems()">Copy items from previous order?</button>\n      <br /><br />\n    </div>\n    <div class="panel panel-primary">\n      <div class="panel-heading"><strong>Important Info</strong></div>\n      <div class="panel-body">\n        <div>\n          <strong>Order Deadline:</strong> {{vm.dates.orderBy | date:\'EEEE, MMMM d\'}}\n        </div>\n        <div>\n          <strong>Delivery Date:</strong> {{vm.dates.delivery | date:\'EEEE, MMMM d\'}}\n        </div>\n        <div>\n          <strong>Next Deadline:</strong> {{vm.dates.orderBy | date:\'EEEE, MMMM d\'}}\n        </div>\n        <div>\n          <strong>Next Delivery:</strong> {{vm.dates.orderBy | date:\'EEEE, MMMM d\'}}\n        </div>\n        <hr />\n      </div>\n    </div>\n  </div>\n</section>\n'),$templateCache.put("modules/groceries/client/views/list-groceries.html",'<section>\n  <div class="page-header">\n    <h1>Groceries to gos</h1>\n  </div>\n  <div class="list-group">\n    <a ng-repeat="groceries in vm.groceriesToGos"\n       ui-sref="groceriesToGos.view({ groceriesId: groceries._id })"\n       class="list-group-item">\n      <small class="list-group-item-text">\n        Posted on\n        <span ng-bind="groceriesToGo.created | date:\'mediumDate\'"></span>\n        by\n        <span ng-if="groceriesToGo.user" ng-bind="groceriesToGo.user.displayName"></span>\n        <span ng-if="!groceriesToGo.user">Deleted User</span>\n      </small>\n      <h4 class="list-group-item-heading" ng-bind="groceries.name"></h4>\n    </a>\n  </div>\n  <div class="alert alert-warning text-center" ng-if="vm.groceriesToGos.$resolved && !vm.groceriesToGos.length">\n    No Groceries to gos yet, why don\'t you <a ui-sref="groceriesToGos.create">create one</a>?\n  </div>\n</section>\n'),$templateCache.put("modules/groceries/client/views/list-orders.html",'<section>\n  <div class="page-header">\n    <h2>Grocery Orders</h1>\n  </div>\n  <div class="list-group">\n    <table class="table table-hover table-striped">\n      <thead>\n        <tr>\n          <th>Order #</th>\n          <th>Status</th>\n          <th>Ordered Date</th>\n          <th>Delivery Date</th>\n          <th># of Items</th>\n          <th>Total</th>\n          <th class="text-right">Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr ng-repeat="order in vm.pagedItems" >\n          <td><a ui-sref="order.view({ clientId: order.clientId, orderId: order._id })">{{ order.requestNumber }}</a></td>\n          <td>{{ order.status }}</td>\n          <td>{{ order.created | date:\'MM/dd/yyyy\' }}</td>\n          <td>{{ order.date | date:\'MM/dd/yyyy\' }}</td>\n          <td>{{ order.items.length }}</td>\n          <td>{{ order.total | currency }}</td>\n          <td>\n            <button class="btn btn-default" ui-sref="order.view({ clientId: order.clientId, orderId: order._id })" tooltip-placement="top" uib-tooltip="View"><i class="glyphicon glyphicon-eye-open" aria-label="View"></i></button>\n            <button class="btn btn-default" ui-sref="order.edit({ clientId: order.clientId, orderId: order._id })" tooltip-placement="top" uib-tooltip="Edit"><i class="glyphicon glyphicon-edit" aria-label="Edit"></i></button>\n          </td>\n        </tr>\n      </tbody>\n      <tfoot>\n        <tr ng-if="vm.filterLength > vm.itemsPerPage">\n          <td colspan="6" class="text-center">\n            <ul uib-pagination boundary-links="false" max-size="4" items-per-page="vm.itemsPerPage" total-items="vm.filterLength" ng-model="vm.currentPage" ng-change="vm.pageChanged()"></ul>\n          </td>\n        </tr>\n      </tfoot>\n    </table>\n  </div>\n  <div class="alert alert-warning text-center" ng-if="vm.orders.$resolved && !vm.orders.length">\n    No Orders yet, why don\'t you <a ui-sref="order.create({clientId: vm.clientid})">create one</a>?\n  </div>\n</section>\n'),$templateCache.put("modules/groceries/client/views/picklist.html",'<section>\n  <div class="page-header">\n    <h1>Grocery Pick List</h1>\n  </div>\n  <div class="list-group table-responsive">\n    <table class="table table-hover table-striped" ng-show="vm.orders.length !== 0">\n      <thead>\n        <tr>\n          <th>Item Name</th>\n          <th>Category</th>\n          <th>Quantity</th>\n          <th>Client</th>\n          <th><span class="hidden-xs">In Cart</span></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr ng-repeat="item in vm.picklist" ng-class="item.inCart ? \'success\' : \'\'">\n          <td>{{ item.name }}</td>\n          <td>{{ item.category }}</td>\n          <td>{{ item.qty }} {{ item.unit }}</td>\n          <td>{{ item.client }}</td>\n          <td>\n            <button class="btn btn-default" ng-click="vm.toggle(item)"><i class="glyphicon" ng-class="item.inCart ? \'glyphicon-check\' : \'glyphicon-unchecked\'" aria-label="View"></i></button>\n            <button class="btn" ng-click="vm.notAvailable(item)" ng-class="item.notAvailable ? \'btn-danger\' : \'btn-default\'" ng-disabled="item.inCart"><i class="glyphicon glyphicon-ban-circle" aria-label="View"></i></button>\n            <button class="btn btn-default" ui-sref="order.view({ clientId: item.clientId, orderId: item.orderId })"><i class="glyphicon glyphicon-eye-open" aria-label=""></i></button>\n          </td>\n        </tr>\n      </tbody>\n      <tfoot>\n        <tr>\n          <td colspan="5" class="text-right">\n            <button ng-show="vm.complete" class="btn btn-success" ui-sref="groceries.checkout">Checkout</button>\n            <button ng-show="!vm.complete" class="btn btn-danger" ng-click="vm.checkout()">Checkout</button>\n          </td>\n        </tr>\n      </tfoot>\n    </table>\n  </div>\n  <div class="alert alert-warning text-center" ng-if="vm.orders.$resolved && !vm.orders.length">\n    No Orders are ready to be picked.\n  </div>\n  <div class="row col-md-12">\n    <button type="button" class="btn btn-primary"  onclick="window.history.back()">Back</button>\n  </div>\n'),$templateCache.put("modules/groceries/client/views/view-groceries.html",'<section>\n  <div class="page-header">\n    <h1 ng-bind="vm.groceriesToGo.name"></h1>\n  </div>\n  <div class="pull-right"\n       ng-show="vm.groceriesToGo.isCurrentUserOwner">\n    <a class="btn btn-primary"\n       ui-sref="groceriesToGos.edit({ groceriesToGoId: vm.groceriesToGo._id })">\n      <i class="glyphicon glyphicon-edit"></i>\n    </a>\n    <a class="btn btn-primary" ng-click="vm.remove()">\n      <i class="glyphicon glyphicon-trash"></i>\n    </a>\n  </div>\n  <small>\n    <em class="text-muted">\n      Posted on\n      <span ng-bind="vm.groceriesToGo.created | date:\'mediumDate\'"></span>\n      by\n      <span ng-if="vm.groceriesToGo.user"\n            ng-bind="vm.groceriesToGo.user.displayName"></span>\n      <span ng-if="!vm.groceriesToGo.user">Deleted User</span>\n    </em>\n  </small>\n  <p class="lead" ng-bind="vm.groceriesToGo.content"></p>\n</section>\n'),
$templateCache.put("modules/groceries/client/views/view-order.html",'<section>\n  <div class="page-header">\n    <h1 class="text-capitalize">Order #{{ vm.order.requestNumber }} - {{ vm.order.status }}</h1>\n  </div>\n  <div class="col-md-8">\n    <div class="alert alert-info" role="alert">\n      This order is to be delivered on <strong>{{vm.dates.delivery | date:\'EEEE, MMMM d\'}}</strong>.\n    </div>\n    <table class="table table-bordered table-hover table-condensed" style="margin: 0; border-bottom: none;">\n      <tr style="font-weight: bold">\n        <td style="width:50%">Item</td>\n        <td style="width:30%">Category</td>\n        <td style="width:20%">Qty</td>\n      </tr>\n      <tr ng-repeat="item in vm.order.items">\n        <td>{{ item.name }}</td>\n        <td>{{ item.category }}</td>\n        <td>{{ item.qty || \'0\' }}</td>\n      </tr>\n    </table>\n    <table class="table table-bordered table-hover table-condensed">\n      <tr style="font-weight: bold">\n        <td class="text-right" style="width:80%">\n          Reciept Total:\n        </td>\n        <td style="width:20%;" class="reciept-total">\n          {{ vm.order.recieptTotal | currency }}\n        </td>\n      </tr>\n      <tr style="font-weight: bold">\n        <td class="text-right" style="width:80%">\n          Delivery Cost:\n        </td>\n        <td style="width:20%">\n          {{ vm.order.deliveryCost | currency }}\n        </td>\n      </tr>\n      <tr style="font-weight: bold">\n        <td class="text-right" style="width:80%">\n          Total:\n        </td>\n        <td style="width:20%">\n          {{ vm.order.total | currency }}\n        </td>\n      </tr>\n    </table>\n    <div>\n      <label class="control-label" for="notes">Notes</label>\n      <p>{{ vm.order.notes }}</p>\n    </div>\n    <button type="button" class="btn btn-primary"  onclick="window.history.back()">Back</button>\n  </div>\n  <div class="col-md-4">\n    <div class="btn-group btn-group" role="group" aria-label="...">\n      <button type="button" class="btn btn-primary" ui-sref="order.edit({ clientId: vm.order.clientId, orderId: vm.order._id })">Edit</button>\n      <button type="button" class="btn btn-primary" ng-hide="vm.order.status === \'canceled\'" ng-click="vm.assign()">Assign</button>\n    </div>\n    <hr />\n    <div class="panel panel-primary">\n      <div class="panel-heading"><strong>Client Info</strong></div>\n      <div class="panel-body">\n        <div>\n          <strong><a ui-sref="clients.view({ clientId: vm.order.clientId })">{{vm.order.contact.firstName}} {{vm.order.contact.lastName}}</a></strong>\n        </div>\n        <p>\n          <div ng-bind="vm.order.contact.address.street"></div>\n          <div ng-bind="vm.order.contact.address.additional" ng-show="vm.contact.order.address.additional"></div>\n          <span ng-bind="vm.order.contact.address.city"></span>,\n          <span ng-bind="vm.order.contact.address.state"></span>\n          <span ng-bind="vm.order.contact.address.zipcode"></span>\n        </p>\n        <p><strong>Home Phone:</strong> {{vm.order.contact.phone1}}</p>\n        <p><strong>Work Phone:</strong> {{vm.order.contact.phone2}}</p>\n        <p><strong>Cell Phone:</strong> {{vm.order.contact.phone3}}</p>\n      </div>\n    </div>\n  </div>\n</section>\n'),$templateCache.put("modules/services/client/views/form-service.html",'<section>\n  <div class="page-header">\n    <h1>{{vm.service._id ? \'Edit Service\' : \'New Service\'}}</h1>\n  </div>\n  <div class="col-md-12">\n    <form name="vm.serviceForm" class="form-horizontal" ng-submit="vm.save(vm.serviceForm.$valid)" novalidate>\n      <fieldset>\n        <div class="form-group" show-errors>\n          <label class="control-label" for="name">Name</label>\n          <input name="name" type="text" ng-model="vm.service.name" id="name" class="form-control" placeholder="Name" required>\n          <div ng-messages="vm.serviceForm.name.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Service name is required.</p>\n          </div>\n        </div>\n        <div class="form-group">\n          <button type="submit" class="btn btn-default">{{vm.service._id ? \'Update\' : \'Create\'}}</button>\n        </div>\n        <div ng-show="vm.error" class="text-danger">\n          <strong ng-bind="vm.error"></strong>\n        </div>\n      </fieldset>\n    </form>\n  </div>\n</section>\n'),$templateCache.put("modules/services/client/views/list-services.html",'<section>\n  <div class="page-header">\n    <h1>Services</h1>\n  </div>\n  <div class="list-group">\n    <a ng-repeat="service in vm.services"\n       ui-sref="services.view({ serviceId: service._id })"\n       class="list-group-item">\n      <small class="list-group-item-text">\n        Posted on\n        <span ng-bind="service.created | date:\'mediumDate\'"></span>\n        by\n        <span ng-if="service.user" ng-bind="service.user.displayName"></span>\n        <span ng-if="!service.user">Deleted User</span>\n      </small>\n      <h4 class="list-group-item-heading" ng-bind="service.name"></h4>\n    </a>\n  </div>\n  <div class="alert alert-warning text-center" ng-if="vm.services.$resolved && !vm.services.length">\n    No Services yet, why don\'t you <a ui-sref="services.create">create one</a>?\n  </div>\n  <div class="row col-md-12">\n    <button type="button" class="btn btn-primary"  onclick="window.history.back()">Back</button>\n  </div>\n</section>\n'),$templateCache.put("modules/services/client/views/view-service.html",'<section>\n  <div class="page-header">\n    <h1 ng-bind="vm.service.name"></h1>\n  </div>\n  <div class="pull-right"\n       ng-show="vm.service.isCurrentUserOwner">\n    <a class="btn btn-primary"\n       ui-sref="services.edit({ serviceId: vm.service._id })">\n      <i class="glyphicon glyphicon-edit"></i>\n    </a>\n    <a class="btn btn-primary" ng-click="vm.remove()">\n      <i class="glyphicon glyphicon-trash"></i>\n    </a>\n  </div>\n  <small>\n    <em class="text-muted">\n      Posted on\n      <span ng-bind="vm.service.created | date:\'mediumDate\'"></span>\n      by\n      <span ng-if="vm.service.user"\n            ng-bind="vm.service.user.displayName"></span>\n      <span ng-if="!vm.service.user">Deleted User</span>\n    </em>\n  </small>\n  <p class="lead" ng-bind="vm.service.content"></p>\n  <div class="row col-md-12">\n    <button type="button" class="btn btn-primary"  onclick="window.history.back()">Back</button>\n  </div>\n</section>\n'),$templateCache.put("modules/volunteers/client/views/approve-volunteers.html",'<section>\n  <div class="page-header">\n    <div class="row">\n      <div class="col-md-12">\n        <h1>Volunteers</h1>\n      </div>\n    </div>\n  </div>\n  <table class="table table-hover table-striped">\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Phone</th>\n        <th class="text-right">Actions</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr ng-repeat="user in vm.pagedItems">\n        <td><a ui-sref="volunteers.view({ volunteerId: user._id })">{{user.firstName}} {{user.lastName}}</a></td>\n        <td class="list-group-item-text">\n          {{user.contact.phone1}}\n        </td>\n        <td class="text-right">\n          <button class="btn btn-default" tooltip-placement="top" uib-tooltip="Approve" ng-click="vm.approve(user, $index)"><i class="glyphicon glyphicon-thumbs-up" aria-label="Approve"></i></button>\n          <button class="btn btn-default" ui-sref="admin.users.view({ userId: user._id })" tooltip-placement="top" uib-tooltip="View"><i class="glyphicon glyphicon-eye-open" aria-label="View"></i></button>\n          <button class="btn btn-default" ui-sref="admin.user.edit({ userId: user._id })" tooltip-placement="top" uib-tooltip="Edit"><i class="glyphicon glyphicon-edit" aria-label="Edit"></i></button>\n          <button class="btn btn-default" tooltip-placement="top" uib-tooltip="Delete" ng-click="vm.remove(user)" ng-if="!vm.isContextUserSelf(user)"><i class="glyphicon glyphicon-trash" aria-label="Edit"></i></button>\n        </td>\n      </tr>\n    </tbody>\n    <tfoot>\n      <tr ng-if="vm.filterLength > vm.itemsPerPage">\n        <td colspan="6" class="text-center">\n          <ul uib-pagination boundary-links="false" max-size="4" items-per-page="vm.itemsPerPage" total-items="vm.filterLength" ng-model="vm.currentPage" ng-change="vm.pageChanged()"></ul>\n        </td>\n      </tr>\n    </tfoot>\n  </table>\n  <script>\n    $(function() {\n      $(\'[data-toggle="tooltip"]\').tooltip()\n    })\n  <\/script>\n  <div class="alert alert-warning text-center" ng-if="vm.volunteers.$resolved && !vm.volunteers.length">\n    No Volunteers yet, why don\'t you <a ui-sref="volunteers.create">create one</a>?\n  </div>\n  <div class="row col-md-12">\n    <button type="button" class="btn btn-primary"  onclick="window.history.back()">Back</button>\n  </div>\n</section>\n'),$templateCache.put("modules/volunteers/client/views/form-volunteer.html",'<section class="row">\n  <div class="page-header" ng-hide="vm.editProfile">\n    <h1>{{vm.volunteer._id ? \'Edit Volunteer\' : \'New Volunteer\'}}</h1>\n  </div>\n  <div class="col-md-12">\n    <form name="vm.volunteerForm" class="form-horizontal" ng-submit="vm.save(vm.volunteerForm.$valid)" novalidate>\n      <contact-form contact="vm.volunteer.contact" error="vm.error" form="vm.volunteerForm"></contact-form>\n      <fieldset class="col-md-12">\n        <div class="form-group" show-errors>\n          <label class="control-label" for="comments">Comments</label>\n          <textarea name="comments" type="text" ng-model="vm.volunteer.comments" id="comments" class="form-control" placeholder="Comments"></textarea>\n        </div>\n        <div class="form-group">\n          <button type="submit" class="btn btn-default">{{(vm.volunteer._id || vm.editProfile) ? \'Update\' : \'Create\'}}</button>\n        </div>\n        <div ng-show="vm.error" class="text-danger">\n          <strong ng-bind="vm.error"></strong>\n        </div>\n      </fieldset>\n    </form>\n  </div>\n</section>\n'),$templateCache.put("modules/volunteers/client/views/list-volunteers.html",'<section>\n  <div class="page-header">\n    <div class="row">\n      <div class="col-md-4">\n        <h1>Volunteers</h1>\n      </div>\n      <div class="col-md-4" style="margin-top: 2em">\n        <input class="form-control col-md-4" type="text" ng-model="vm.search" placeholder="Search" ng-change="vm.figureOutItemsToDisplay()" ng-disabled="false"/>\n      </div>\n      <div class="col-md-4 text-right" style="margin-top: 2em">\n        <button class="btn btn-default" ui-sref="volunteers.create" tooltip-placement="top" uib-tooltip="Add New Volunteer"><i class="glyphicon glyphicon-plus" aria-label="Add New Volunteer"></i></button>\n      </div>\n    </div>\n  </div>\n  <table class="table table-hover table-striped">\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Phone</th>\n        <th class="text-right">Actions</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr ng-repeat="volunteer in vm.pagedItems">\n        <td><a ui-sref="volunteers.view({ volunteerId: volunteer._id })">{{volunteer.contact.firstName}} {{volunteer.contact.lastName}}</a></td>\n        <td class="list-group-item-text">\n          {{volunteer.contact.phone1}}\n        </td>\n        <td class="text-right">\n          <button class="btn btn-default" ui-sref="volunteers.view({ volunteerId: volunteer._id })" tooltip-placement="top" uib-tooltip="View"><i class="glyphicon glyphicon-eye-open" aria-label="View"></i></button>\n          <button class="btn btn-default" ui-sref="volunteers.edit({ volunteerId: volunteer._id })" tooltip-placement="top" uib-tooltip="Edit"><i class="glyphicon glyphicon-edit" aria-label="Edit"></i></button>\n        </td>\n      </tr>\n    </tbody>\n    <tfoot>\n      <tr ng-if="vm.filterLength > vm.itemsPerPage">\n        <td colspan="6" class="text-center">\n          <ul uib-pagination boundary-links="false" max-size="4" items-per-page="vm.itemsPerPage" total-items="vm.filterLength" ng-model="vm.currentPage" ng-change="vm.pageChanged()"></ul>\n        </td>\n      </tr>\n    </tfoot>\n  </table>\n  <script>\n    $(function() {\n      $(\'[data-toggle="tooltip"]\').tooltip()\n    })\n  <\/script>\n  <div class="alert alert-warning text-center" ng-if="vm.volunteers.$resolved && !vm.volunteers.length">\n    No Volunteers yet, why don\'t you <a ui-sref="volunteers.create">create one</a>?\n  </div>\n  <div class="row col-md-12">\n    <button type="button" class="btn btn-primary"  onclick="window.history.back()">Back</button>\n  </div>\n</section>\n'),$templateCache.put("modules/volunteers/client/views/view-volunteer.html",'<section>\n  <div class="page-header">\n    <h1 ng-bind="vm.volunteer.contact.firstName + \' \' + vm.volunteer.contact.middleInitial + \' \' + vm.volunteer.contact.lastName"></h1>\n  </div>\n  <div class="col-md-8">\n    <contact-view contact="vm.volunteer.contact"></contact-view>\n    <p><strong>Monthly Income Single:</strong> {{vm.volunteer.monthlyIncomeSingle}}</p>\n    <p><strong>Monthly Income Married:</strong> {{vm.volunteer.monthlyIncomeMarried}}</p>\n    <p><strong>Transportation:</strong> {{vm.volunteer.transportation}}</p>\n    <div><strong>Referral Source:</strong>\n      <p ng-bind="vm.volunteer.referralSource"></p>\n    </div>\n    <div><strong>Comments:</strong>\n      <p ng-bind="vm.volunteer.comments"></p>\n    </div>\n  </div>\n  <div class="col-md-4">\n    <div class="pull-right" ng-show="vm.volunteer.canEdit">\n      <a class="btn btn-primary" ui-sref="volunteers.edit({ volunteerId: vm.volunteer._id })">\n        <i class="glyphicon glyphicon-edit"></i>\n      </a>\n      <a class="btn btn-primary" ng-click="vm.remove()">\n        <i class="glyphicon glyphicon-trash"></i>\n      </a>\n    </div>\n  </div>\n  <div class="row col-md-12">\n    <button type="button" class="btn btn-primary"  onclick="window.history.back()">Back</button>\n  </div>\n</section>\n'),$templateCache.put("modules/actions/client/views/modals/checklist.html",'<div class="modal-header">\n  <h3 class="modal-title">Checkout - Item Check</h3>\n</div>\n<div class="modal-body">\n  <div class="alert alert-info" role="alert"><strong>Please confirm that the following are in the cart:</strong></div>\n  <table>\n    <thead>\n      <tr>\n        <th>Item Name</th>\n        <th>Quantity</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr ng-repeat="item in vm.current.items">\n        <td>\n          {{ item.name }}\n        </td>\n        <td>\n          {{ item.qty }}\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n<div class="modal-footer">\n  <button class="btn btn-default" type="button" ng-click="vm.modalCancel()">Cancel</button>\n  <button class="btn btn-success" type="button" ng-click="vm.modalOk()">Confirm</button>\n</div>\n'),$templateCache.put("modules/actions/client/views/modals/deliver.html",'<div class="modal-header">\n  <h3 class="modal-title">Deliver - Reciept</h3>\n</div>\n<div class="modal-body">\n  <div class="alert alert-info" role="alert"><strong>Please confirm that the following are in the cart:</strong></div>\n  <form name="vm.form" ng-submit="vm.updateOrder()" novalidate>\n    <fieldset class="col-md-12">\n      <div class="form-group">\n        <label>Payment Method</label>\n        <div>\n          <div class="btn-group">\n            <button type="button" class="btn" ng-class="vm.current.delivery.payment === \'Cash\' ? \'btn-success\' : \'btn-default\'" ng-click="vm.current.delivery.payment = \'Cash\'">Cash</button>\n            <button type="button" class="btn" ng-class="vm.current.delivery.payment === \'Brought Inside\' ? \'btn-success\' : \'btn-default\'" ng-click="vm.current.delivery.payment = \'Brought Inside\'">Cash</button>\n            <button type="button" class="btn" ng-class="vm.current.delivery.payment === \'Unpacked\' ? \'btn-success\' : \'btn-default\'" ng-click="vm.current.delivery.payment = \'Unpacked\'">Unpacked</button>\n          </div>\n        </div>\n      </div>\n    </fieldset>\n    <fieldset class="col-md-12">\n      <div class="form-group">\n        <label>Delivery Method</label>\n        <div>\n          <div class="btn-group">\n            <button type="button" class="btn" ng-class="vm.current.delivery.method === \'To The Door\' ? \'btn-success\' : \'btn-default\'" ng-click="vm.current.delivery.method = \'To The Door\'">To The Door</button>\n            <button type="button" class="btn" ng-class="vm.current.delivery.method === \'Brought Inside\' ? \'btn-success\' : \'btn-default\'" ng-click="vm.current.delivery.method = \'Brought Inside\'">Brought Inside</button>\n            <button type="button" class="btn" ng-class="vm.current.delivery.method === \'Unpacked\' ? \'btn-success\' : \'btn-default\'" ng-click="vm.current.delivery.method = \'Unpacked\'">Unpacked</button>\n          </div>\n        </div>\n      </div>\n    </fieldset>\n    <fieldset class="col-md-12">\n      <div class="form-group">\n        <label>Followup Needed</label>\n        <div>\n          <div class="btn-group">\n            <button type="button" class="btn" ng-class="vm.current.delivery.followup === false ? \'btn-success\' : \'btn-default\'" ng-click="vm.current.delivery.followup = false">No</button>\n            <button type="button" class="btn" ng-class="vm.current.delivery.followup ? \'btn-success\' : \'btn-default\'" ng-click="vm.current.delivery.followup = true">Yes</button>\n          </div>\n        </div>\n      </div>\n    </fieldset>\n    <fieldset class="col-md-12">\n      <div class="form-group">\n        <label>Followup Needed</label>\n        <textarea name="notes" type="text" ng-model="vm.current.delivery.notes" id="notes" class="form-control" placeholder="Notes"></textarea>\n      </div>\n    </fieldset>\n  </form>\n</div>\n<div class="modal-footer">\n  <button class="btn btn-default" type="button" ng-click="vm.modalCancel()">Cancel</button>\n  <button class="btn btn-success" type="button" ng-click="vm.modalOk()" ng-disabled="vm.ready()">Complete Delivery</button>\n</div>\n'),$templateCache.put("modules/actions/client/views/modals/reciept.html",'<div class="modal-header">\n  <h3 class="modal-title">Checkout - Reciept</h3>\n</div>\n<div class="modal-body">\n  <div class="alert alert-info" role="alert"><strong>Please confirm that the following are in the cart:</strong></div>\n  <form name="vm.form" ng-submit="vm.updateOrder()" novalidate>\n    <fieldset>\n      <div class="form-group" show-errors>\n        <label for="recieptTotal">Reciept Total</label>\n        <input type="text" id="recieptTotal" name="recieptTotal" class="form-control" ng-model="vm.current.recieptTotal" placeholder="24.73" ng-blur="vm.totals()" ng-change="vm.roundUp(vm.current.recieptTotal)" required>\n        <div ng-messages="vm.form.recieptTotal.$error" role="alert">\n          <p class="help-block error-text" ng-message="required">A reciept total is required.</p>\n        </div>\n      </div>\n      <div ng-show="vm.error" class="text-danger">\n        <strong ng-bind="vm.error"></strong>\n      </div>\n    </fieldset>\n    <fieldset>\n      <div class="text-center">\n        <img ngf-src="vm.fileSelected ? recieptFile : vm.current.recieptImage" alt="Reciept" class="img-thumbnail" ngf-drop>\n      </div>\n      <div ng-show="vm.loading" class="form-group text-center">\n        <img ng-src="/modules/core/client/assets/images/loaders/loader.gif" height="50" width="50" alt="Loading image...">\n      </div>\n      <div ng-show="!vm.fileSelected" class="form-group">\n        <button class="btn btn-default btn-file" ngf-select="(vm.fileSelected = true) && (vm.loading = false)" ng-model="recieptFile" accept="image/*" ngf-before-model-change="vm.loading = true" ngf-resize="{width: 400}" ngf-resize-if="$width > 400 || $height > 400">Select Reciept</button>\n      </div>\n      <div ng-show="vm.fileSelected" class="text-center form-group">\n        <button class="btn btn-primary" ng-click="vm.upload(recieptFile)">Upload Reciept</button>\n        <button class="btn btn-default" ng-click="vm.fileSelected = false">Cancel</button>\n      </div>\n      <div ng-show="vm.fileSelected" class="progress text-center">\n        <div class="progress-bar" role="progressbar" aria-valuenow="{{vm.progress}}" aria-valuemin="0" aria-valuemax="100" style="width:{{vm.progress}}%" ng-bind="vm.progress + \'%\'">\n          <span class="sr-only">{{vm.progress}}% Complete</span>\n        </div>\n      </div>\n    </fieldset>\n  </form>\n</div>\n<div class="modal-footer">\n  <button class="btn btn-default" type="button" ng-click="vm.modalCancel()">Cancel</button>\n  <button class="btn btn-success" type="button" ng-click="vm.modalOk()">Finish Checkout</button>\n</div>\n'),$templateCache.put("modules/contacts/client/address/views/form-address.html",'<fieldset class="col-md-12">\n  <div class="form-group" show-errors>\n    <label for="street">Address</label>\n    <input type="text" id="street" name="street" class="form-control" ng-model="vm.address.street" placeholder="Street Address">\n  </div>\n</fieldset>\n<fieldset class="col-md-12">\n  <div class="form-group" show-errors>\n    <label for="address">Address 2</label>\n    <input type="text" id="additional" name="additional" class="form-control" ng-model="vm.address.additional" placeholder="Apt Number">\n  </div>\n</fieldset>\n<fieldset class="col-md-12 row">\n  <div class="col-md-6">\n    <div class="form-group" show-errors>\n      <label for="city">City</label>\n      <input type="text" id="city" name="city" class="form-control" ng-model="vm.address.city" placeholder="City">\n    </div>\n  </div>\n  <div class="col-md-3">\n    <div class="form-group">\n      <label for="state">State</label>\n      <select name="state" ng-model="vm.address.state" class="form-control">\n        <option ng-repeat="option in vm.options.state" value="{{option}}">{{option}}</option>\n      </select>\n    </div>\n  </div>\n  <div class="col-md-3">\n    <div class="form-group" show-errors>\n      <label for="zipcode">Zip Code</label>\n      <input type="text" id="zipcode" name="zipcode" class="form-control" ng-model="vm.address.zipcode" maxlength="5" placeholder="Zip Code">\n    </div>\n  </div>\n</fieldset>\n<div ng-show="vm.error" class="text-danger">\n  <strong ng-bind="vm.error"></strong>\n</div>\n'),$templateCache.put("modules/core/client/pages/partials/header.html",'<div class="container" ng-controller="HeaderController as vm">\n  <div class="navbar-header">\n    <button class="navbar-toggle" type="button" ng-click="vm.isCollapsed = !vm.isCollapsed">\n      <span class="sr-only">Toggle navigation</span>\n      <span class="icon-bar"></span>\n      <span class="icon-bar"></span>\n      <span class="icon-bar"></span>\n    </button>\n    <a ui-sref="home" class="navbar-brand">Age Well</a>\n  </div>\n  <nav class="navbar-collapse" uib-collapse="!vm.isCollapsed" role="navigation">\n    <ul class="nav navbar-nav" ng-if="vm.menu.shouldRender(vm.authentication.user);">\n      <li ng-repeat="item in vm.menu.items | orderBy: \'position\'" ng-if="item.shouldRender(vm.authentication.user);" ng-switch="item.type" ng-class="{ dropdown: item.type === \'dropdown\' }" ui-sref-active="active" class="{{item.class}}" uib-dropdown="item.type === \'dropdown\'">\n        <a ng-switch-when="dropdown" class="dropdown-toggle" uib-dropdown-toggle role="button">{{::item.title}}&nbsp;<span class="caret"></span>\n        </a>\n        <ul ng-switch-when="dropdown" class="dropdown-menu">\n          <li ng-repeat="subitem in item.items | orderBy: \'position\'" ng-if="subitem.shouldRender(vm.authentication.user);">\n            <a ui-sref="{{subitem.state}}({{subitem.params}})" ng-bind="subitem.title"></a>\n          </li>\n        </ul>\n        <a ng-switch-default ui-sref="{{item.state}}" ng-bind="item.title"></a>\n      </li>\n    </ul>\n    <ul class="nav navbar-nav navbar-right" ng-hide="vm.authentication.user">\n      <li ui-sref-active="active">\n        <a ui-sref="authentication.signin">Sign In</a>\n      </li>\n      \x3c!-- <li ui-sref-active="active">\n        <a ui-sref="authentication.signup">Sign up</a>\n      </li> --\x3e\n    </ul>\n    <ul class="nav navbar-nav navbar-right" ng-if="vm.authentication.user !== null">\n      <li class="dropdown" uib-dropdown>\n        <a class="dropdown-toggle user-header-dropdown-toggle" uib-dropdown-toggle role="button">\n          <img ng-src="{{vm.authentication.user.profileImageURL}}" alt="{{vm.authentication.user.displayName}}" class="header-profile-image" style="max-width: 18px;" />\n          <span ng-bind="vm.authentication.user.displayName"></span>\n          <b class="caret"></b>\n        </a>\n        <ul class="dropdown-menu" role="menu">\n          <li ui-sref-active="active" ng-repeat="item in vm.accountMenu.items"  ng-if="item.shouldRender(vm.authentication.user);">\n            <a ui-sref="{{item.state}}" ng-bind="item.title"></a>\n          </li>\n          <li>\n            <a href="/api/auth/signout" target="_self">Signout</a>\n          </li>\n        </ul>\n      </li>\n    </ul>\n  </nav>\n</div>\n'),$templateCache.put("modules/groceries/client/views/modals/assign.html",'<div class="modal-header">\n  <h3 class="modal-title">Checkout - Reciept</h3>\n</div>\n<div class="modal-body">\n  <div class="alert alert-info" role="alert" ng-hide="vm.dashboard"><strong>Please assign the order to the appropriate volunteer:</strong></div>\n  <div class="alert alert-info" role="alert" ng-hide="!vm.dashboard"><strong>Please confirm that the order is assigned to the right volunteer if needed:</strong></div>\n  <form name="vm.form" ng-submit="vm.updateOrder()" novalidate>\n    <fieldset>\n      <div class="form-group">\n        <label>Assign Volunteer</label>\n        <select name="volunteer" ng-model="vm.assignedTo" class="form-control">\n          <option ng-repeat="option in vm.volunteers" value="{{option._id}}">{{option.lastName}}, {{option.firstName}}</option>\n        </select>\n      </div>\n    </fieldset>\n  </form>\n</div>\n<div class="modal-footer">\n  <button class="btn btn-default" type="button" ng-click="vm.modalCancel()">Cancel</button>\n  <button class="btn btn-success" type="button" ng-click="vm.modalOk()" ng-disabled="!vm.current.assignedTo && !vm.allowSave" ng-hide="vm.dashboard">Assign</button>\n  <button class="btn btn-success" type="button" ng-click="vm.modalOk()" ng-hide="!vm.dashboard">Confirm</button>\n</div>\n'),$templateCache.put("modules/groceries/client/views/modals/checklist.html",'<div class="modal-header">\n  <h3 class="modal-title">Checkout - Item Check</h3>\n</div>\n<div class="modal-body">\n  <div class="alert alert-info" role="alert"><strong>Please confirm that the following are in the cart:</strong></div>\n  <table>\n    <thead>\n      <tr>\n        <th>Item Name</th>\n        <th>Quantity</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr ng-repeat="item in vm.current.items">\n        <td>\n          {{ item.name }}\n        </td>\n        <td>\n          {{ item.qty }} {{ item.unit }}\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n<div class="modal-footer">\n  <button class="btn btn-default" type="button" ng-click="vm.modalCancel()">Cancel</button>\n  <button class="btn btn-success" type="button" ng-click="vm.modalOk()">Confirm</button>\n</div>\n'),$templateCache.put("modules/groceries/client/views/modals/copy-items.html",'<div class="modal-header">\n  <h3 class="modal-title">Copy Items</h3>\n</div>\n<div class="modal-body">\n  <div class="alert alert-info" role="alert"><strong>Would you like to copy the items from the previous order?</strong></div>\n</div>\n<div class="modal-footer">\n  <button class="btn btn-default" type="button" ng-click="vm.modalCancel()">No</button>\n  <button class="btn btn-success" type="button" ng-click="vm.modalOk()">Yes</button>\n</div>\n'),$templateCache.put("modules/groceries/client/views/modals/deliver.html",'<div class="modal-header">\n  <h3 class="modal-title">Deliver - Reciept</h3>\n</div>\n<div class="modal-body">\n  <div class="alert alert-info" role="alert"><strong>Please confirm that the following are in the cart:</strong></div>\n  <form name="vm.form" ng-submit="vm.updateOrder()" novalidate>\n    <fieldset class="col-md-12">\n      <div class="form-group">\n        <label>Payment Method</label>\n        <div>\n          <div class="btn-group">\n            <button type="button" class="btn" ng-class="vm.current.delivery.payment === \'Cash\' ? \'btn-success\' : \'btn-default\'" ng-click="vm.current.delivery.payment = \'Cash\'">Cash</button>\n            <button type="button" class="btn" ng-class="vm.current.delivery.payment === \'Check\' ? \'btn-success\' : \'btn-default\'" ng-click="vm.current.delivery.payment = \'Check\'">Check</button>\n            <button type="button" class="btn" ng-class="vm.current.delivery.payment === \'Credit Card\' ? \'btn-success\' : \'btn-default\'" ng-click="vm.current.delivery.payment = \'Credit Card\'">Credit Card</button>\n          </div>\n        </div>\n      </div>\n    </fieldset>\n    <fieldset class="col-md-12">\n      <div class="form-group">\n        <label>Delivery Method</label>\n        <div>\n          <div class="btn-group">\n            <button type="button" class="btn" ng-class="vm.current.delivery.method === \'To The Door\' ? \'btn-success\' : \'btn-default\'" ng-click="vm.current.delivery.method = \'To The Door\'">To The Door</button>\n            <button type="button" class="btn" ng-class="vm.current.delivery.method === \'Brought Inside\' ? \'btn-success\' : \'btn-default\'" ng-click="vm.current.delivery.method = \'Brought Inside\'">Brought Inside</button>\n            <button type="button" class="btn" ng-class="vm.current.delivery.method === \'Unpacked\' ? \'btn-success\' : \'btn-default\'" ng-click="vm.current.delivery.method = \'Unpacked\'">Unpacked</button>\n          </div>\n        </div>\n      </div>\n    </fieldset>\n    <fieldset class="col-md-12">\n      <div class="form-group">\n        <label>Follow up Needed</label>\n        <div>\n          <div class="btn-group">\n            <button type="button" class="btn" ng-class="vm.current.delivery.followup === false ? \'btn-success\' : \'btn-default\'" ng-click="vm.current.delivery.followup = false">No</button>\n            <button type="button" class="btn" ng-class="vm.current.delivery.followup ? \'btn-success\' : \'btn-default\'" ng-click="vm.current.delivery.followup = true">Yes</button>\n          </div>\n        </div>\n      </div>\n    </fieldset>\n    <fieldset class="col-md-12">\n      <div class="form-group">\n        <label>Notes</label>\n        <textarea name="notes" type="text" ng-model="vm.current.delivery.notes" id="notes" class="form-control" placeholder="Notes"></textarea>\n      </div>\n    </fieldset>\n  </form>\n</div>\n<div class="modal-footer">\n  <button class="btn btn-default" type="button" ng-click="vm.modalCancel()">Cancel</button>\n  <button class="btn btn-success" type="button" ng-click="vm.modalOk()" ng-disabled="vm.ready()">Complete Delivery</button>\n</div>\n'),
$templateCache.put("modules/groceries/client/views/modals/reciept.html",'<div class="modal-header">\n  <h3 class="modal-title">Checkout - Reciept</h3>\n</div>\n<div class="modal-body">\n  <div class="alert alert-info" role="alert"><strong>Please confirm that the following are in the cart:</strong></div>\n  <form name="vm.form" ng-submit="vm.updateOrder()" novalidate>\n    <fieldset>\n      <div class="form-group" show-errors>\n        <label for="recieptTotal">Reciept Total</label>\n        <input type="text" id="recieptTotal" name="recieptTotal" class="form-control" ng-model="vm.current.recieptTotal" placeholder="24.73" ng-blur="vm.totals()" ng-change="vm.roundUp(vm.current.recieptTotal)" required>\n        <div ng-messages="vm.form.recieptTotal.$error" role="alert">\n          <p class="help-block error-text" ng-message="required">A reciept total is required.</p>\n        </div>\n      </div>\n      <div ng-show="vm.error" class="text-danger">\n        <strong ng-bind="vm.error"></strong>\n      </div>\n    </fieldset>\n    <fieldset>\n      <div class="text-center">\n        <img ngf-src="vm.fileSelected ? recieptFile : vm.current.recieptImage" alt="Reciept" class="img-thumbnail" ngf-drop>\n      </div>\n      <div ng-show="vm.loading" class="form-group text-center">\n        <img ng-src="/modules/core/client/assets/images/loaders/loader.gif" height="50" width="50" alt="Loading image...">\n      </div>\n      <div ng-show="!vm.fileSelected" class="form-group">\n        <button class="btn btn-default btn-file" ngf-select="(vm.fileSelected = true) && (vm.loading = false)" ng-model="recieptFile" accept="image/*" ngf-before-model-change="vm.loading = true" ngf-resize="{width: 400}" ngf-resize-if="$width > 400 || $height > 400">Select Reciept</button>\n      </div>\n      <div ng-show="vm.fileSelected" class="text-center form-group">\n        <button class="btn btn-primary" ng-click="vm.upload(recieptFile)">Upload Reciept</button>\n        <button class="btn btn-default" ng-click="vm.fileSelected = false">Cancel</button>\n      </div>\n      <div ng-show="vm.fileSelected" class="progress text-center">\n        <div class="progress-bar" role="progressbar" aria-valuenow="{{vm.progress}}" aria-valuemin="0" aria-valuemax="100" style="width:{{vm.progress}}%" ng-bind="vm.progress + \'%\'">\n          <span class="sr-only">{{vm.progress}}% Complete</span>\n        </div>\n      </div>\n    </fieldset>\n  </form>\n</div>\n<div class="modal-footer">\n  <button class="btn btn-default" type="button" ng-click="vm.modalCancel()">Cancel</button>\n  <button class="btn btn-success" type="button" ng-click="vm.modalOk()">Finish Checkout</button>\n</div>\n'),$templateCache.put("modules/services/client/admin/views/edit-service.html",'<section>\n  <div class="page-header">\n    <h1>Service <span ng-bind="vm.service.title"></span></h1>\n  </div>\n  <div class="col-md-12">\n    <form name="vm.serviceForm" class="form-horizontal" ng-submit="vm.save(vm.serviceForm.$valid)" novalidate>\n      <fieldset>\n        <div class="form-group" show-errors>\n          <label for="title">Title</label>\n          <input type="text" id="title" name="title" class="form-control" ng-model="vm.service.title" placeholder="Title" required autofocus />\n          <div ng-messages="vm.serviceForm.title.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Title is required.</p>\n          </div>\n        </div>\n        <div class="form-group">\n          <label class="control-label" for="description">Description</label>\n          <textarea name="description" type="text" ng-model="vm.service.description" id="description" class="form-control" placeholder="Description" rows="6"></textarea>\n        </div>\n        <div class="form-group" show-errors>\n          <label for="avalibility">Avalibility</label>\n          <select name="avalibility" ng-model="vm.service.avalibility" class="form-control">\n            <option ng-repeat="option in vm.options.avalibility" value="{{option}}">{{option}}</option>\n          </select>\n          <div ng-messages="vm.serviceForm.avalibility.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Avalibility is required.</p>\n          </div>\n        </div>\n        <div class="form-group" show-errors>\n          <label for="price">Price</label>\n          <input type="text" id="price" name="price" class="form-control" ng-model="vm.service.price" placeholder="Price" required ng-model="money"/>\n          <div ng-messages="vm.serviceForm.price.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Price is required.</p>\n          </div>\n        </div>\n        <div class="form-group" show-errors>\n          <label for="pricePer">Price Per</label>\n          <select name="pricePer" ng-model="vm.service.pricePer" class="form-control">\n            <option ng-repeat="option in vm.options.pricePer" value="{{option}}">{{option}}</option>\n          </select>\n          <div ng-messages="vm.serviceForm.pricePer.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Price Per is required.</p>\n          </div>\n        </div>\n        <div class="form-group" ng-show="vm.service.pricePer === \'Unit\'">\n          <label for="unitName">Unit Name</label>\n          <input type="text" id="unitName" name="unitName" class="form-control" ng-model="vm.service.unitName" placeholder="Unit Name" autofocus />\n        </div>\n        <div class="form-group">\n          <button type="submit" class="btn btn-default">{{vm.service._id ? \'Update\' : \'Create\'}}</button>\n          <button ng-click="vm.log" class="btn btn-default">Log</button>\n        </div>\n        <div ng-show="vm.error" class="text-danger">\n          <strong ng-bind="vm.error"></strong>\n        </div>\n      </fieldset>\n    </form>\n  </div>\n</section>\n'),$templateCache.put("modules/services/client/admin/views/list-services.html",'<section>\n  <div class="page-header">\n    <div class="row">\n      <div class="col-md-4">\n        <h1>Services</h1>\n      </div>\n      <div class="col-md-4" style="margin-top: 2em">\n        <input class="form-control col-md-4" type="text" ng-model="vm.search" placeholder="Search" ng-change="vm.figureOutItemsToDisplay()" />\n      </div>\n      <div class="col-md-4 text-right" style="margin-top: 2em">\n        <button class="btn btn-default" ui-sref="admin.services.create" tooltip-placement="top" uib-tooltip="Add New Service"><i class="glyphicon glyphicon-plus" aria-label="Add New Service"></i></button>\n      </div>\n    </div>\n  </div>\n\n  <table class="table table-hover table-striped">\n    <thead>\n      <tr>\n        <th>Title</th>\n        <th>Price</th>\n        <th>Avalibility</th>\n        <th class="text-right">Actions</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr ng-repeat="service in vm.pagedItems" ui-sref="admin.services.view({ serviceId: service._id })">\n        <td>{{service.title}}</td>\n        <td>{{service.title}} per {{service.title}}</td>\n        <td>{{service.avalibility}}</td>\n        <td class="text-right">\n          <button class="btn btn-default" ui-sref="admin.services.view({ serviceId: service._id })" tooltip-placement="top" uib-tooltip="View"><i class="glyphicon glyphicon-eye-open" aria-label="View"></i></button> \n          <button class="btn btn-default" ui-sref="admin.services.edit({ serviceId: service._id })" tooltip-placement="top" uib-tooltip="Edit"><i class="glyphicon glyphicon-edit" aria-label="Edit"></i></button>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n\n  <script>\n    $(function() {\n      $(\'[data-toggle="tooltip"]\').tooltip()\n    })\n  <\/script>\n\n  <div class="alert alert-warning text-center" ng-if="vm.services.$resolved && !vm.services.length">\n    No Services yet, why don\'t you <a ui-sref="admin.services.create">create one</a>?\n  </div>\n\n  <uib-pagination boundary-links="true" max-size="8" items-per-page="vm.itemsPerPage" total-items="vm.filterLength" ng-model="vm.currentPage" ng-change="vm.pageChanged()"></uib-pagination>\n</section>\n'),$templateCache.put("modules/services/client/admin/views/view-service.html",'<section>\n  <div class="page-header">\n    <div class="row">\n      <div class="col-md-6">\n        <h1 ng-bind="vm.service.title"></h1>\n      </div>\n      <div class="col-md-4">\n        <a class="btn btn-primary" ui-sref="admin.services.edit({serviceId: vm.service._id})">\n          <i class="glyphicon glyphicon-edit"></i>\n        </a>\n        <a class="btn btn-primary" ng-click="vm.remove()" ng-if="!vm.isContextServiceSelf()">\n          <i class="glyphicon glyphicon-trash"></i>\n        </a>\n      </div>\n    </div>\n  </div>\n\n  <div class="row">\n    <div class="col-md-8">\n      <div class="row">\n        <div class="col-md-3"><strong>Description</strong></div>\n        <div class="col-md-6" ng-bind="vm.service.description"></div>\n      </div>\n      <hr/>\n      <div class="row">\n        <div class="col-md-3"><strong>Avalibility</strong></div>\n        <div class="col-md-6" ng-bind="vm.service.avalibility"></div>\n      </div>\n      <hr/>\n      <div class="row">\n        <div class="col-md-3"><strong>Price</strong></div>\n        <div class="col-md-6">{{vm.service.price | currency}} per <span ng-hide="vm.service.pricePer === \'Unit\'" ng-bind="vm.service.pricePer"></span><span ng-show="vm.service.pricePer === \'Unit\'" ng-bind="vm.service.unitName"></span></div>\n      </div>\n    </div>\n  </div>\n</section>\n'),$templateCache.put("modules/users/client/admin/views/edit-user.html",'<section>\n  <div class="page-header">\n    <h1>Edit {{ vm.user.displayName }}</h1>\n  </div>\n  <div class="col-md-12">\n    <form name="vm.userForm" ng-submit="vm.update(vm.userForm.$valid)" novalidate>\n      <fieldset>\n        <div class="form-group" show-errors>\n          <label for="firstName">First Name</label>\n          <input type="text" id="firstName" name="firstName" class="form-control" ng-model="vm.user.firstName" placeholder="First Name" required autofocus />\n          <div ng-messages="vm.userForm.firstName.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">First name is required.</p>\n          </div>\n        </div>\n        <div class="form-group" show-errors>\n          <label for="lastName">Last Name</label>\n          <input type="text" id="lastName" name="lastName" class="form-control" ng-model="vm.user.lastName" placeholder="Last Name" required />\n          <div ng-messages="vm.userForm.lastName.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Last name is required.</p>\n          </div>\n        </div>\n        <div class="form-group">\n          <label class="control-label" for="roles">Roles</label>\n          <div class="controls" ng-repeat="role in vm.users.roles">\n            <input type="checkbox" name="roles" ng-checked="vm.user.roles.indexOf(role) > -1" ng-click="vm.toggleRole(role)" id="roles"/> {{ role }}\n          </div>\n        </div>\n        <div class="form-group">\n          <input type="submit" value="Update" class="btn btn-default">\n        </div>\n      </fieldset>\n    </form>\n  </div>\n  <div class="row col-md-12">\n    <button type="button" class="btn btn-primary"  onclick="window.history.back()">Back</button>\n  </div>\n</section>\n'),$templateCache.put("modules/users/client/admin/views/list-users.html",'<section>\n  <div class="page-header">\n    <div class="row">\n      <div class="col-md-4">\n        <h1>Users</h1>\n      </div>\n      <div class="col-md-4" style="margin-top: 2em">\n        <input class="form-control col-md-4" type="text" ng-model="vm.search" placeholder="Search" ng-change="vm.figureOutItemsToDisplay()" />\n      </div>\n    </div>\n  </div>\n\n  <table class="table table-hover table-striped">\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Roles</th>\n        <th>Active</th>\n        <th class="text-right">Actions</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr ng-repeat="user in vm.pagedItems">\n        <td><a ui-sref="user.view({ userId: user._id })">{{user.firstName}} {{user.lastName}}</a></td>\n        <td class="list-group-item-text">\n          {{user.roles.join(\', \')}}\n        </td>\n        <td>\n          <button class="btn" ng-click="vm.toggle(\'active\', user)" ng-class="user.active ? \'btn-success\' : \'btn-danger\'" ng-hide="user.isAdmin">\n            <i class="glyphicon" ng-class="user.active ? \'glyphicon-ok\' : \'glyphicon-remove\'"></i>\n          </button>\n        </td>\n        <td class="text-right">\n          <button class="btn btn-default" ui-sref="admin.users.view({ userId: user._id })" tooltip-placement="top" uib-tooltip="View"><i class="glyphicon glyphicon-eye-open" aria-label="View"></i></button>\n          <button class="btn btn-default" ui-sref="admin.users.edit({ userId: user._id })" tooltip-placement="top" uib-tooltip="Edit"><i class="glyphicon glyphicon-edit" aria-label="Edit"></i></button>\n          <button class="btn btn-default" tooltip-placement="top" uib-tooltip="Delete" ng-click="vm.remove(user)" ng-disabled="vm.isContextUserSelf(user)"><i class="glyphicon glyphicon-trash" aria-label="Edit"></i></button>\n        </td>\n      </tr>\n    </tbody>\n    <tfoot>\n      <tr ng-if="vm.filterLength > vm.itemsPerPage">\n        <td colspan="6" class="text-center">\n          <ul uib-pagination boundary-links="false" max-size="4" items-per-page="vm.itemsPerPage" total-items="vm.filterLength" ng-model="vm.currentPage" ng-change="vm.pageChanged()"></ul>\n        </td>\n      </tr>\n    </tfoot>\n  </table>\n  <div class="row col-md-12">\n    <button type="button" class="btn btn-primary"  onclick="window.history.back()">Back</button>\n  </div>\n</section>\n'),$templateCache.put("modules/users/client/admin/views/view-user.html",'<section>\n  <div class="page-header">\n    <div class="row">\n      <div class="col-md-6">\n        <h1 ng-bind="vm.user.displayName"></h1>\n      </div>\n      <div class="col-md-4">\n        <a class="btn btn-primary" ui-sref="admin.users.edit({userId: vm.user._id})">\n          <i class="glyphicon glyphicon-edit"></i>\n        </a>\n        <a class="btn btn-primary" ng-click="vm.remove()" ng-if="!vm.isContextUserSelf()">\n          <i class="glyphicon glyphicon-trash"></i>\n        </a>\n      </div>\n    </div>\n  </div>\n\n  <div class="row">\n    <div class="col-md-8">\n      <div class="row">\n        <div class="col-md-3"><strong>First Name</strong></div>\n        <div class="col-md-6" ng-bind="vm.user.firstName"></div>\n      </div>\n      <hr/>\n      <div class="row">\n        <div class="col-md-3"><strong>Last Name</strong></div>\n        <div class="col-md-6" ng-bind="vm.user.lastName"></div>\n      </div>\n      <hr/>\n      <div class="row">\n        <div class="col-md-3"><strong>Email</strong></div>\n        <div class="col-md-6" ng-bind="vm.user.email"></div>\n      </div>\n      <hr/>\n      <div class="row">\n        <div class="col-md-3"><strong>Provider</strong></div>\n        <div class="col-md-6" ng-bind="vm.user.provider"></div>\n      </div>\n      <hr/>\n      <div class="row">\n        <div class="col-md-3"><strong>Created</strong></div>\n        <div class="col-md-6" ng-bind="vm.user.created"></div>\n      </div>\n      <hr/>\n      <div class="row">\n        <div class="col-md-3"><strong>Roles</strong></div>\n        <div class="col-md-6" ng-bind="vm.user.roles.join(\', \')"></div>\n      </div>\n    </div>\n  </div>\n  <div class="row col-md-12">\n    <button type="button" class="btn btn-primary"  onclick="window.history.back()">Back</button>\n  </div>\n</section>\n'),$templateCache.put("modules/users/client/auth/views/authentication.html",'<section class="row">\n  <div ui-view></div>\n</section>\n'),$templateCache.put("modules/users/client/auth/views/forgot-password.html",'<section class="row">\n  <h3 class="col-md-12 text-center">Restore your password</h3>\n  <p class="small text-center">Enter your email.</p>\n  <div class="col-xs-offset-2 col-xs-8 col-md-offset-5 col-md-2">\n    <form name="vm.forgotPasswordForm" ng-submit="vm.askForPasswordReset(vm.forgotPasswordForm.$valid)" class="form-horizontal" novalidate autocomplete="off">\n      <fieldset>\n        <div class="form-group" show-errors>\n          <input type="text" id="email" name="email" class="form-control" ng-model="vm.credentials.email" placeholder="Email" lowercase required autofocus>\n          <div ng-messages="vm.forgotPasswordForm.email.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Enter a email.</p>\n          </div>\n        </div>\n        <div class="text-center form-group">\n          <button type="submit" class="btn btn-primary">Submit</button>\n        </div>\n      </fieldset>\n    </form>\n  </div>\n</section>\n'),$templateCache.put("modules/users/client/auth/views/reset-password-invalid.html",'<section class="row text-center">\n  <h3 class="col-md-12">Password reset is invalid</h3>\n  <a ui-sref="password.forgot" class="col-md-12">Ask for a new password reset</a>\n</section>\n'),$templateCache.put("modules/users/client/auth/views/reset-password-success.html",'<section class="row text-center">\n  <h3 class="col-md-12">Password successfully reset</h3>\n  <a ui-sref="home" class="col-md-12">Continue to home page</a>\n</section>\n'),$templateCache.put("modules/users/client/auth/views/reset-password.html",'<section class="row">\n  <h3 class="col-md-12 text-center">Reset your password</h3>\n  <div class="col-xs-offset-2 col-xs-8 col-md-offset-4 col-md-4">\n    <form name="vm.resetPasswordForm" ng-submit="vm.resetUserPassword(vm.resetPasswordForm.$valid)" class="signin form-horizontal" novalidate autocomplete="off">\n      <fieldset>\n        <div class="form-group" show-errors>\n          <label for="newPassword">New Password</label>\n          <input type="password" id="newPassword" name="newPassword" class="form-control" ng-model="vm.passwordDetails.newPassword" placeholder="New Password" autocomplete="new-password" uib-popover="{{vm.getPopoverMsg()}}" uib-popover-trigger="focus" uib-popover-placement="top" password-validator required autofocus>\n          <div ng-messages="vm.resetPasswordForm.newPassword.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Enter a new password.</p>\n            <div ng-repeat="passwordError in passwordErrors">\n              <p class="help-block error-text" ng-show="vm.resetPasswordForm.newPassword.$error.requirements">{{passwordError}}</p>\n            </div>\n          </div>\n        </div>\n        <div class="form-group" show-errors>\n          <label for="verifyPassword">Verify Password</label>\n          <input type="password" id="verifyPassword" name="verifyPassword" class="form-control" ng-model="vm.passwordDetails.verifyPassword" placeholder="Verify Password" password-verify="vm.passwordDetails.newPassword" required>\n          <div ng-messages="vm.resetPasswordForm.verifyPassword.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Enter the password again to verify.</p>\n            <p class="help-block error-text" ng-show="vm.resetPasswordForm.verifyPassword.$error.passwordVerify">Passwords do not match.</p>\n          </div>\n        </div>\n        <div class="form-group" ng-show="!vm.resetPasswordForm.newPassword.$error.required">\n          <label>Password Requirements</label>\n          <uib-progressbar value="requirementsProgress" type="{{requirementsColor}}"><span style="color:white; white-space:nowrap;">{{requirementsProgress}}%</span></uib-progressbar>\n        </div>\n        <div class="text-center form-group">\n          <button type="submit" class="btn btn-primary">Update Password</button>\n        </div>\n      </fieldset>\n    </form>\n  </div>\n</section>\n'),$templateCache.put("modules/users/client/auth/views/signin.html",'<div>\n  <h3 class="col-xs-12 text-center">Sign in with your account</h3>\n  <div class="col-xs-offset-2 col-xs-8 col-md-offset-4 col-md-4">\n    <form name="vm.userForm" ng-submit="vm.signin(vm.userForm.$valid)" class="signin" novalidate autocomplete="off">\n      <fieldset>\n        <div class="form-group" show-errors>\n          <uib-alert type="danger" ng-show="vm.error" class="text-center text-danger">\n            <span ng-bind="vm.error"></span>\n          </uib-alert>\n          <label for="email">Email</label>\n          <input type="text" id="email" name="email" class="form-control" ng-model="vm.credentials.email" placeholder="Email" required autofocus>\n          <div ng-messages="vm.userForm.email.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Email is required.</p>\n          </div>\n        </div>\n        <div class="form-group" show-errors>\n          <label for="password">Password</label>\n          <input type="password" id="password" name="password" class="form-control" ng-model="vm.credentials.password" placeholder="Password" required>\n          <div ng-messages="vm.userForm.password.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Password is required.</p>\n          </div>\n        </div>\n        <div class="text-center form-group">\n          <button type="submit" class="btn btn-primary">Sign in</button>\n          &nbsp; or&nbsp;\n          <a ui-sref="authentication.signup">Sign up</a>\n        </div>\n        <div class="text-center forgot-password">\n          <a ui-sref="password.forgot">Forgot your password?</a>\n        </div>\n        <br />\n      </fieldset>\n    </form>\n  </div>\n</div>\n'),$templateCache.put("modules/users/client/auth/views/signup.html",'<div>\n  <h3 class="col-xs-12 text-center">Sign up using your email</h3>\n  <div class="col-xs-offset-2 col-xs-8 col-md-offset-4 col-md-4">\n    <form name="vm.userForm" ng-submit="vm.signup(vm.userForm.$valid)" class="signin" novalidate autocomplete="on">\n      <fieldset>\n        <div class="form-group" show-errors>\n          <label for="firstName">First Name</label>\n          <input type="text" id="firstName" name="firstName" class="form-control" ng-model="vm.credentials.firstName" placeholder="First Name" required autofocus>\n          <div ng-messages="vm.userForm.firstName.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">First name is required.</p>\n          </div>\n        </div>\n        <div class="form-group" show-errors>\n          <label for="lastName">Last Name</label>\n          <input type="text" id="lastName" name="lastName" class="form-control" ng-model="vm.credentials.lastName" placeholder="Last Name" required>\n          <div ng-messages="vm.userForm.lastName.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Last name is required.</p>\n          </div>\n        </div>\n        <div class="form-group" show-errors>\n          <label for="email">Email</label>\n          <input type="email" id="email" name="email" class="form-control" ng-model="vm.credentials.email" placeholder="Email" lowercase required>\n          <div ng-messages="vm.userForm.email.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Email address is required.</p>\n            <p class="help-block error-text" ng-message="email">Email address is invalid.</p>\n          </div>\n        </div>\n        <div class="form-group" show-errors>\n          <label for="password">Password</label>\n            <input type="password" id="password" name="password" class="form-control" ng-model="vm.credentials.password" placeholder="Password" uib-popover="{{vm.getPopoverMsg()}}" popover-trigger="outsideClick" password-validator required>\n          <div ng-messages="vm.userForm.password.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Password is required.</p>\n            <div ng-repeat="passwordError in passwordErrors">\n              <p class="help-block error-text" ng-show="vm.userForm.password.$error.requirements">{{passwordError}}</p>\n            </div>\n          </div>\n        </div>\n        <div class="form-group" ng-show="!vm.userForm.password.$error.required">\n          <label>Password Requirements</label>\n          <uib-progressbar value="requirementsProgress" type="{{requirementsColor}}"><span style="color:white; white-space:nowrap;">{{requirementsProgress}}%</span></uib-progressbar>\n        </div>\n        <div class="text-center form-group">\n          <button type="submit" class="btn btn-primary">Sign up</button>\n          &nbsp; or&nbsp;\n          <a ui-sref="authentication.signin" class="show-signup">Sign in</a>\n        </div>\n      </fieldset>\n    </form>\n  </div>\n</div>\n'),$templateCache.put("modules/users/client/profile/views/change-password.html",'<section class="row">\n  <div class="col-xs-offset-1 col-xs-10 col-md-offset-4 col-md-4">\n    <form name="vm.passwordForm" ng-submit="vm.changeUserPassword(vm.passwordForm.$valid)" class="signin" novalidate autocomplete="off">\n      <fieldset>\n        <div class="form-group" show-errors>\n          <label for="currentPassword">Current Password</label>\n          <input type="password" id="currentPassword" name="currentPassword" class="form-control" ng-model="vm.passwordDetails.currentPassword" placeholder="Current Password" required autofocus>\n          <div ng-messages="vm.passwordForm.currentPassword.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Your current password is required.</p>\n          </div>\n        </div>\n        <div class="form-group" show-errors>\n          <label for="newPassword">New Password</label>\n          <input type="password" id="newPassword" name="newPassword" class="form-control" ng-model="vm.passwordDetails.newPassword" placeholder="New Password" uib-popover="{{vm.getPopoverMsg()}}" uib-popover-trigger="focus" password-validator required>\n          <div ng-messages="vm.passwordForm.newPassword.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Enter a new password.</p>\n            <div ng-repeat="passwordError in passwordErrors">\n              <p class="help-block error-text" ng-show="vm.passwordForm.newPassword.$error.requirements">{{passwordError}}</p>\n            </div>\n          </div>\n        </div>\n        <div class="form-group" show-errors>\n          <label for="verifyPassword">Verify Password</label>\n          <input type="password" id="verifyPassword" name="verifyPassword" class="form-control" ng-model="vm.passwordDetails.verifyPassword" placeholder="Verify Password" password-verify="vm.passwordDetails.newPassword" required>\n          <div ng-messages="vm.passwordForm.verifyPassword.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Verify your new password.</p>\n            <p class="help-block error-text" ng-show="vm.passwordForm.verifyPassword.$error.passwordVerify">Passwords do not match.</p>\n          </div>\n        </div>\n        <div class="form-group" ng-show="!vm.passwordForm.newPassword.$error.required">\n          <label>Password Requirements</label>\n          <uib-progressbar value="requirementsProgress" type="{{requirementsColor}}"><span style="color:white; white-space:nowrap;">{{requirementsProgress}}%</span></uib-progressbar>\n        </div>\n        <div class="text-center form-group">\n          <button type="submit" class="btn btn-primary">Save Password</button>\n        </div>\n      </fieldset>\n    </form>\n  </div>\n</section>\n'),$templateCache.put("modules/users/client/profile/views/change-profile-picture.html",'<section class="row">\n  <div class="col-xs-offset-1 col-xs-10 col-md-offset-3 col-md-4">\n    <form class="signin form-horizontal">\n      <fieldset>\n        <div class="form-group text-center">\n          <img ngf-src="vm.fileSelected ? picFile : vm.user.profileImageURL" alt="{{vm.user.displayName}}" class="img-thumbnail user-profile-picture" ngf-drop>\n        </div>\n        <div ng-show="vm.loading" class="form-group text-center">\n          <img ng-src="/modules/core/client/assets/images/loaders/loader.gif" height="50" width="50" alt="Loading image...">\n        </div>\n        <div ng-show="!vm.fileSelected" class="text-center form-group">\n          <button class="btn btn-default btn-file" ngf-select="(vm.fileSelected = true) && (vm.loading = false)" ng-model="picFile" accept="image/*" ngf-before-model-change="vm.loading = true" ngf-resize="{width: 400}" ngf-resize-if="$width > 400 || $height > 400">Select Picture</button>\n        </div>\n        <div ng-show="vm.fileSelected" class="text-center form-group">\n          <button class="btn btn-primary" ng-click="vm.upload(picFile)">Use This Picture</button>\n          <button class="btn btn-default" ng-click="vm.fileSelected = false">Cancel</button>\n        </div>\n        <div ng-show="vm.fileSelected" class="progress text-center">\n          <div class="progress-bar" role="progressbar" aria-valuenow="{{vm.progress}}" aria-valuemin="0" aria-valuemax="100" style="width:{{vm.progress}}%" ng-bind="vm.progress + \'%\'">\n            <span class="sr-only">{{vm.progress}}% Complete</span>\n          </div>\n        </div>\n      </fieldset>\n    </form>\n  </div>\n</section>\n'),
$templateCache.put("modules/users/client/profile/views/edit-profile.html",'<section class="row">\n  <div class="col-xs-offset-1 col-xs-10 col-md-offset-4 col-md-4">\n    <form name="vm.userForm" ng-submit="vm.updateUserProfile(vm.userForm.$valid)" class="signin" novalidate autocomplete="off">\n      <fieldset>\n        <div class="form-group" show-errors>\n          <label for="firstName">First Name</label>\n          <input type="text" id="firstName" name="firstName" class="form-control" ng-model="vm.user.firstName" placeholder="First Name" required autofocus>\n          <div ng-messages="vm.userForm.firstName.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">First name is required.</p>\n          </div>\n        </div>\n        <div class="form-group" show-errors>\n          <label for="lastName">Last Name</label>\n          <input type="text" id="lastName" name="lastName" class="form-control" ng-model="vm.user.lastName" placeholder="Last Name" required>\n          <div ng-messages="vm.userForm.lastName.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Last name is required.</p>\n          </div>\n        </div>\n        <div class="form-group" show-errors>\n          <label for="email">Email</label>\n          <input type="email" id="email" name="email" class="form-control" ng-model="vm.user.email" placeholder="Email" lowercase required>\n          <div ng-messages="vm.userForm.email.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Email address is required.</p>\n            <p class="help-block error-text" ng-message="email">Email address is invalid.</p>\n          </div>\n        </div>\n        \x3c!-- <div class="form-group" show-errors>\n          <label for="username">Username</label>\n          <input type="text" id="username" name="username" class="form-control" ng-model="vm.user.username" placeholder="Username" lowercase required>\n          <div ng-messages="vm.userForm.username.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Username is required.</p>\n          </div>\n        </div> --\x3e\n        <div class="text-center form-group">\n          <button type="submit" class="btn btn-primary">Save Profile</button>\n        </div>\n      </fieldset>\n    </form>\n  </div>\n</section>\n'),$templateCache.put("modules/users/client/profile/views/settings.html",'<section>\n  <div class="page-header">\n    <h1>Settings</h1>\n  </div>\n  <div class="row">\n    <nav class="col-sm-3 col-md-3">\n      <ul class="nav nav-pills nav-stacked">\n        <li ui-sref-active="active">\n          <a ui-sref="{{vm.profileEdit}}">Edit Profile</a>\n        </li>\n        <li ui-sref-active="active">\n          <a ui-sref="settings.picture">Change Profile Picture</a>\n        </li>\n        <li ui-sref-active="active" ng-show="vm.user.provider === \'local\'">\n          <a ui-sref="settings.password">Change Password</a>\n        </li>\n        \x3c!-- <li ui-sref-active="active">\n          <a ui-sref="settings.accounts">Manage Social Accounts</a>\n        </li> --\x3e\n      </ul>\n      <br />\n      <div class="row col-md-12">\n        <button type="button" class="btn btn-primary"  onclick="window.history.back()">Back</button>\n      </div>\n    </nav>\n    <div class="col-sm-9 col-md-8 settings-view">\n      <div ui-view></div>\n    </div>\n  </div>\n</section>\n')}angular.module("core").run(templates),templates.$inject=["$templateCache"]}();